#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #18 (Monday March 4th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -pipe -O2 `sdl-config --libs`
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S89 T89;
typedef struct S96 T96;
typedef struct S167 T167;
typedef struct S161 T161;
typedef struct S165 T165;
typedef struct S135 T135;
typedef struct S218 T218;
typedef struct S74 T74;
typedef struct S205 T205;
typedef struct S184 T184;
typedef struct S175 T175;
typedef struct S149 T149;
typedef struct S172 T172;
typedef struct S189 T189;
typedef struct S134 T134;
typedef struct S174 T174;
typedef struct S146 T146;
typedef struct S163 T163;
typedef struct S138 T138;
typedef struct S131 T131;
typedef struct S114 T114;
typedef struct S71 T71;
typedef struct S212 T212;
typedef struct S171 T171;
typedef struct S140 T140;
typedef struct S23 T23;
typedef struct S43 T43;
typedef struct S59 T59;
typedef int T47;
typedef struct S61 T61;
typedef struct S125 T125;
typedef struct S178 T178;
typedef struct S99 T99;
typedef struct S81 T81;
typedef struct S137 T137;
typedef struct S93 T93;
typedef struct S170 T170;
typedef struct S180 T180;
typedef struct S166 T166;
typedef struct S48 T48;
typedef struct S185 T185;
typedef struct S72 T72;
typedef struct S136 T136;
typedef struct S213 T213;
typedef struct S50 T50;
typedef struct S82 T82;
typedef struct S57 T57;
typedef struct S66 T66;
typedef struct S73 T73;
typedef struct S203 T203;
typedef struct S122 T122;
typedef struct S129 T129;
typedef struct S176 T176;
typedef struct S162 T162;
typedef struct S124 T124;
typedef struct S77 T77;
typedef struct S64 T64;
typedef int T102;
typedef struct S139 T139;
typedef struct S153 T153;
typedef struct S7 T7;
typedef struct S78 T78;
typedef struct S169 T169;
typedef struct S197 T197;
typedef struct S41 T41;
typedef struct S111 T111;
typedef struct S69 T69;
typedef struct S211 T211;
typedef struct S55 T55;
typedef struct S109 T109;
typedef struct S65 T65;
typedef struct S179 T179;
typedef struct S210 T210;
typedef struct S67 T67;
typedef struct S168 T168;
typedef struct S54 T54;
typedef struct S56 T56;
typedef struct S130 T130;
typedef struct S83 T83;
typedef struct S200 T200;
typedef struct S158 T158;
typedef struct S201 T201;
typedef struct S209 T209;
typedef struct S95 T95;
typedef struct S45 T45;
typedef struct S62 T62;
typedef struct S16 T16;
typedef struct S94 T94;
typedef struct S76 T76;
typedef struct S173 T173;
typedef struct S22 T22;
typedef struct S143 T143;
typedef struct S150 T150;
typedef struct S28 T28;
typedef struct S193 T193;
typedef struct S195 T195;
typedef struct S51 T51;
typedef struct S60 T60;
typedef struct S206 T206;
typedef struct S183 T183;
typedef struct S208 T208;
typedef struct S88 T88;
typedef struct S113 T113;
typedef struct S39 T39;
typedef struct S127 T127;
typedef struct S107 T107;
typedef struct S80 T80;
typedef struct S118 T118;
typedef struct S177 T177;
typedef struct S188 T188;
typedef struct S75 T75;

/*C Header Pass 2 :*/
typedef T0**T160;
typedef T0**T152;
typedef T0**T227;
typedef T0**T164;
typedef T0**T142;
typedef T0**T229;
typedef T0**T182;
typedef T5*T119;
typedef T0**T155;
typedef T0**T58;
typedef T0**T204;
typedef T0**T100;
typedef T0**T145;
typedef T0**T194;
typedef T0**T187;
typedef T0**T79;
typedef T0**T190;
typedef T3*T9;
typedef T0**T63;
typedef T0**T202;
typedef T0**T46;
typedef T0**T157;
typedef T2*T148;

/*C Header Pass 3 :*/
extern T102 M102;

/*C Header Pass 4 :*/
struct S89{Tid id;};
extern T89 M89;
struct S96{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T2 _originc;T2 _originr;T2 _cursorr;T2 _cursorc;T2 _maxr;T2 _maxc;};
extern T96 M96;
struct S167{Tid id;};
extern T167 M167;
struct S161{Tid id;};
extern T161 M161;
struct S165{Tid id;};
extern T165 M165;
struct S218{Tid id;T0* _dictionary;T2 _item_index;};
extern T218 M218;
struct S74{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;T5 _recipq;T0* _bq;T5 _cutoff;T6 _fade_in;T6 _fade_out;T2 _ttl;T2 _x;T2 _freq;T5 _vol;T0* _wave_table;};
extern T74 M74;
struct S205{Tid id;T0* _incoeff;T0* _outcoeff;T5 _inhistory1;T5 _inhistory2;T5 _outhistory1;T5 _outhistory2;};
extern T205 M205;
struct S184{Tid id;T0* _name;T2 _offset;T2 _size;};
extern T184 M184;
struct S175{Tid id;};
extern T175 M175;
struct S172{Tid id;};
extern T172 M172;
struct S189{Tid id;T0* _item;T2 _key;T0* _next;};
extern T189 M189;
struct S134{Tid id;T157 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T134 M134;
struct S174{Tid id;};
extern T174 M174;
struct S146{Tid id;T148 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T146 M146;
struct S138{Tid id;T2 _length;T5 _root_freq;T0* _data;};
extern T138 M138;
struct S131{Tid id;};
extern T131 M131;
struct S114{Tid id;T0* _linked_list;T0* _current_link;};
extern T114 M114;
struct S71{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;T204 _track_array;T2 _track;};
extern T71 M71;
struct S212{Tid id;T5 _t;T5 _t_max;T0* _sr;T5 _current_value;};
extern T212 M212;
struct S171{Tid id;};
extern T171 M171;
struct S140{Tid id;T142 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T140 M140;
struct S23{Tid id;T2 _item;};
extern T23 M23;
struct S43{Tid id;T46 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T43 M43;
struct S59{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T59 M59;
extern T47 M47;
struct S61{Tid id;T63 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T61 M61;
struct S125{Tid id;T0* _item;T0* _next;};
extern T125 M125;
struct S163{Tid id;T0* _item;T0* _key;T0* _next;};
extern T163 M163;
struct S178{Tid id;};
extern T178 M178;
struct S99{Tid id;T0* _item;T2 _key;T0* _next;};
extern T99 M99;
struct S81{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T81 M81;
struct S137{Tid id;T0* _name;T2 _type;T0* _dll;T4 _y;T4 _x;T2 _attr_count;T2 _sequence_count;T0* _pattern;T2 _pattern_count;T2 _global_parm_size;T2 _track_parm_size;T2 _in_count;};
extern T137 M137;
struct S93{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T0* _manager;T0* _filename;};
extern T93 M93;
struct S170{Tid id;};
extern T170 M170;
struct S180{Tid id;T182 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T180 M180;
struct S166{Tid id;};
extern T166 M166;
struct S48{Tid id;T6 _is_connected;T8 _ptr;};
extern T48 M48;
struct S185{Tid id;T187 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T185 M185;
struct S72{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;};
extern T72 M72;
struct S213{Tid id;T2 _seed;T0* _iv;T2 _iy;};
extern T213 M213;
struct S50{Tid id;T2 _to_integer;T2 _to_gfx_integer;T8 _pointer;};
extern T50 M50;
struct S82{Tid id;T0* _item;T0* _next;};
extern T82 M82;
struct S66{Tid id;T0* _item;T0* _next;};
extern T66 M66;
struct S149{Tid id;T0* _name;T0* _global_data;T0* _data;T2 _row_count;T2 _track_count;};
extern T149 M149;
struct S73{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;};
extern T73 M73;
struct S122{Tid id;T0* _linked_list;T0* _current_link;};
extern T122 M122;
struct S129{Tid id;T2 _loop_end;T2 _loop_begin;T2 _song_end;T0* _dir;T0* _dir_table;T2 _dir_count;T0* _wavetable;T2 _wave_count;T0* _machine;T2 _machine_count;T0* _connection;T2 _connection_count;T0* _sequence;T2 _sequence_count;};
extern T129 M129;
struct S176{Tid id;};
extern T176 M176;
struct S162{Tid id;T164 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T162 M162;
struct S124{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T124 M124;
struct S77{Tid id;T79 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T77 M77;
struct S64{Tid id;T0* _dst;T0* _src;T2 _y;T2 _x;};
extern T64 M64;
struct S153{Tid id;T155 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T153 M153;
struct S169{Tid id;};
extern T169 M169;
struct S197{Tid id;T9 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T197 M197;
struct S41{Tid id;T0* _item;T0* _next;};
extern T41 M41;
struct S111{Tid id;T0* _dictionary;T2 _item_index;};
extern T111 M111;
struct S69{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;T0* _buffer;T2 _pbuf;T6 _drythru;};
extern T69 M69;
struct S211{Tid id;T5 _x1;T5 _x0;T5 _diff;T2 _original_sign;T5 _t;};
extern T211 M211;
struct S55{Tid id;T58 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T55 M55;
struct S109{Tid id;T2 _item;T0* _next;};
extern T109 M109;
struct S57{Tid id;T0* _item;T2 _key;T0* _next;};
extern T57 M57;
struct S65{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T65 M65;
struct S179{Tid id;};
extern T179 M179;
struct S210{Tid id;T0* _input;T0* _modulator;};
extern T210 M210;
struct S139{Tid id;T2 _index;T5 _volume;T0* _filename;T0* _name;T0* _level_table;T2 _level_count;};
extern T139 M139;
struct S67{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;};
extern T67 M67;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S168{Tid id;};
extern T168 M168;
struct S54{Tid id;T0* _table;int _sorter;};
extern T54 M54;
struct S56{Tid id;T100 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T56 M56;
struct S130{Tid id;T0* _in;T0* _buzz;T2 _offset;T0* _last_string;T2 _last_integer;T4 _last_real;T3 _last_char;T2 _last_byte;};
extern T130 M130;
struct S83{Tid id;T0* _os;T2 _tabs;};
extern T83 M83;
struct S200{Tid id;T202 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T200 M200;
struct S158{Tid id;T160 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T158 M158;
struct S201{Tid id;T0* _item;T0* _key;T0* _next;};
extern T201 M201;
struct S209{Tid id;T0* _input1;T0* _input2;};
extern T209 M209;
struct S95{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T6 _connecting_flag;T6 _moving_flag;T0* _selection;T2 _movestartx;T2 _movestarty;};
extern T95 M95;
struct S45{Tid id;T0* _item;T0* _key;T0* _next;};
extern T45 M45;
struct S78{Tid id;T0* _item;T2 _key;T0* _next;};
extern T78 M78;
struct S16{Tid id;T0* _pattern_window;T0* _machine_window;T0* _song_window;T0* _import_buzz_window;T0* _modal;T0* _vis_snap;T0* _vis;T2 _vis_upper;T2 _vis_i;T0* _last_event;T0* _current_window;};
extern T16 M16;
struct S203{Tid id;T5 _d_cache;T5 _vol;T2 _freq;T0* _wave;T2 _wave_index;T2 _wave_length;T2 _modulus;T6 _playing;T2 _x;T5 _volslide;};
extern T203 M203;
struct S94{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T2 _originc;T2 _originr;T2 _cursorr;T2 _cursorc;T2 _maxr;T2 _maxc;T0* _machine;T0* _pattern;};
extern T94 M94;
struct S76{Tid id;T5 _root_freq;T5 _volume;T2 _length;T0* _data;T0* _name;};
extern T76 M76;
struct S173{Tid id;};
extern T173 M173;
struct S22{Tid id;T2 _y;T2 _x;T2 _type;T2 _i2;T2 _i1;T2 _kmod;};
extern T22 M22;
struct S143{Tid id;T145 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T143 M143;
struct S150{Tid id;T152 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T150 M150;
struct S28{Tid id;T0* _master;T6 _play_flag;T0* _machine_table;T0* _machine_list;T0* _machine_zorder;T0* _connection_list;T0* _tracks;T0* _wave_table;T2 _beat_count;T2 _end_beat;T2 _loop_begin;T2 _loop_end;T2 _bpm;T2 _tpb;T2 _sample_mod_tick;T2 _sample_count;T2 _samples_per_tick;T0* _machine_topo_order;};
extern T28 M28;
struct S135{Tid id;T2 _machine_index;T0* _eventpos;T0* _event;T2 _event_count;};
extern T135 M135;
struct S193{Tid id;T2 _upper2;T2 _upper1;T2 _lower2;T2 _lower1;T194 _storage;T2 _capacity;};
extern T193 M193;
struct S195{Tid id;T194 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T195 M195;
struct S51{Tid id;T0* _name;T0* _commands;T0* _machine;};
extern T51 M51;
struct S60{Tid id;T0* _item;T0* _next;};
extern T60 M60;
struct S206{Tid id;};
extern T206 M206;
struct S136{Tid id;T2 _src;T2 _dst;T2 _amp;T2 _pan;};
extern T136 M136;
struct S183{Tid id;T0* _path;T2 _last_byte;T8 _input_stream;};
extern T183 M183;
struct S208{Tid id;T5 _t;T5 _freq;T0* _periodicf;};
extern T208 M208;
struct S88{Tid id;T0* _linked_list;T0* _current_link;};
extern T88 M88;
struct S113{Tid id;T0* _linked_list;T0* _current_link;};
extern T113 M113;
struct S39{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T39 M39;
struct S127{Tid id;T0* _linked_list;T0* _current_link;};
extern T127 M127;
struct S107{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T107 M107;
struct S80{Tid id;T0* _machine;T0* _commands;T0* _playing_pattern;T2 _offset;};
extern T80 M80;
struct S62{Tid id;T0* _item;T0* _key;T0* _next;};
extern T62 M62;
struct S118{Tid id;T119 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T118 M118;
struct S177{Tid id;};
extern T177 M177;
struct S188{Tid id;T190 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T188 M188;
struct S75{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T5 _mix_input;T5 _last_frame;T6 _visited;T2 _ttl;T0* _drum_table;};
extern T75 M75;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
#define FSOC_SIZE 8192
#define RSOC_SIZE 32768
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
   This file (SmallEiffel/sys/runtime/gc_lib.h) is automatically included
   when the Garbage Collector is used (default, unless option -no_gc has
   been selected).
*/
#define SE_GC_LIB 1

#define SE_GC_LOW_MEMORY_STRATEGY 0
#define SE_GC_HIGH_MEMORY_STRATEGY 1
#define SE_GC_DEFAULT_MEMORY_STRATEGY 2
extern int se_gc_strategy;


#define RSOH_UNMARKED 15253
#define RSOH_FREE 1
#define RSOH_MARKED 2


#define FSOH_UNMARKED 1
#define FSOH_MARKED 2

/* To codify the state and the type of some Memory Chunk, we are
   using the following definitions :
*/
#define FSO_FREE_CHUNK  (-2)
#define RSO_FREE_CHUNK  (-1)
#define RSO_USED_CHUNK  ( 0)
#define FSO_STORE_CHUNK ( 1)
#define FSO_USED_CHUNK  ( 2)
#define FREE_CHUNK(x) ((x)<0)

/* Minimum size for a store area in a ReSizable Objects Chunk :
 */
#define RSOC_MIN_STORE 512

/* The default channel used to print -gc_info flag information :
*/
#define SE_GCINFO SE_ERR

extern int collector_counter; /* MEMORY.collector_counter */

typedef struct s_mch mch; /* Memory Chunk Header. */
typedef struct s_fsoc fsoc; /* Fixed Size Objects Chunk. */
typedef union u_rsoh rsoh; /* ReSizable Object Header. */
typedef struct s_fll_rsoh fll_rsoh;
typedef struct s_rsoc rsoc; /* ReSizable Objects Chunk. */
typedef struct s_na_env na_env; /* Native Array ENVironment. */


struct s_mch{
  unsigned int size; /* In number of bytes (actual argument of malloc).*/
  int state_type; /* One value in : RSO_USED_CHUNK,
                     FREE_CHUNK, FSO_STORE_CHUNK, FSO_USED_CHUNK */
  void(*amfp)(mch*,void*); /* Align Mark Function Pointer. */
  void(*swfp)(mch*); /* SWeep Function Pointer. */
};

struct s_fsoc{
  mch header; /* Common header for fsoc and rsoc. */
  fsoc* next; /* The next one when in free list (fsocfl). */
  int count_minus_one;
  double first_object;
};

typedef struct _rso_header rso_header;

struct _rso_header{
    int size;
    int magic_flag;     /* RSOH_MARKED when used,
			   RSOH_FREE when free,
			   else RSOH_UNMARKED */
};

union u_rsoh{
  rso_header header;
  double padding;
  };

struct s_fll_rsoh {
  rso_header rsoh_field;
  fll_rsoh* nextflol;
};

struct s_rsoc{
  mch header; /* Common header for fsoc and rsoc. */
  int isize; /* Initial size (at malloc time) to detect splitted chunks. */
  rsoc* next; /* The next one when in free list (rsocfl). */
  fll_rsoh*free_list_of_large; /* Intra. free list. */
  na_env*nae;
  rsoh first_header;
};

struct s_na_env{
  int store_left;
  rsoh* store;
  rsoc*store_chunk;
  rsoc*chunk_list;
  void (*gc_mark)(T0*);
};

extern void**stack_bottom;
extern mch**gcmt;
extern int gcmt_max;
extern int gcmt_used;
extern int gc_is_off;
extern fsoc* fsocfl;
extern unsigned int fsoc_count;
extern unsigned int rsoc_count;
extern void*gcmt_tail_addr;

void gc_sweep(void);
void gc_mark(void*p);
int gc_stack_size(void);
int garbage_delayed(void);
void gc_update_ceils(void);
char*new_na(na_env*nae,int size);
int fsocfl_count(void);
int rsocfl_count(void);
void gc_dispose_before_exit(void);
void mark_stack_and_registers (void);
fsoc* gc_fsoc_get1(void);
fsoc* gc_fsoc_get2(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_sprintf.h) is automatically
  included when the external "SmallEiffel" basic_sprintf feature is used.
*/

void basic_sprintf_double(EIF_CHARACTER* b, int f, double d);
extern unsigned int fsoc_count_ceil;
extern unsigned int rsoc_count_ceil;
extern T0*oBC8string_buffer;
T2 r8hash_code(T8 C);
T6 r6_ix_not(T6 C);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_hexadecimal_digit(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3hexadecimal_value(T3 C);
T6 r2is_equal(T2 C,T2 a1);
T0* r2to_string(T2 C);
extern T0*oBC2tmp_string;
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
T3 r2hexadecimal_digit(T2 C);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
T2 r5sign(T5 C);
T0* r5to_string(T5 C);
T5 r5double_ceiling(T5 C);
T2 r5rounded(T5 C);
void r5append_in_format(T5 C,T0* a1,T2 a2);
T5 r4pow(T4 C,T5 a1);
T0* r4to_string(T4 C);
T2 r4rounded(T4 C);
T5 r4atan(T4 C);
void r160set_all_with(T160 C,T0* a1,T2 a2);
void r160copy_from(T160 C,T160 a1,T2 a2);
void r152set_all_with(T152 C,T0* a1,T2 a2);
void r152copy_from(T152 C,T152 a1,T2 a2);
void r164set_all_with(T164 C,T0* a1,T2 a2);
void r142set_all_with(T142 C,T0* a1,T2 a2);
void r142copy_from(T142 C,T142 a1,T2 a2);
void r182set_all_with(T182 C,T0* a1,T2 a2);
void r182copy_from(T182 C,T182 a1,T2 a2);
void r119set_all_with(T119 C,T5 a1,T2 a2);
void r119copy_from(T119 C,T119 a1,T2 a2);
void r155set_all_with(T155 C,T0* a1,T2 a2);
void r155copy_from(T155 C,T155 a1,T2 a2);
void r58set_all_with(T58 C,T0* a1,T2 a2);
void r100set_all_with(T100 C,T0* a1,T2 a2);
void r145set_all_with(T145 C,T0* a1,T2 a2);
void r145copy_from(T145 C,T145 a1,T2 a2);
void r194clear_all(T194 C,T2 a1);
void r194set_all_with(T194 C,T0* a1,T2 a2);
void r194copy_from(T194 C,T194 a1,T2 a2);
void r187set_all_with(T187 C,T0* a1,T2 a2);
void r187copy_from(T187 C,T187 a1,T2 a2);
void r79set_all_with(T79 C,T0* a1,T2 a2);
void r190set_all_with(T190 C,T0* a1,T2 a2);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r63set_all_with(T63 C,T0* a1,T2 a2);
void r202set_all_with(T202 C,T0* a1,T2 a2);
void r46set_all_with(T46 C,T0* a1,T2 a2);
void r157set_all_with(T157 C,T0* a1,T2 a2);
void r157copy_from(T157 C,T157 a1,T2 a2);
void r148set_all_with(T148 C,T2 a1,T2 a2);
void r148copy_from(T148 C,T148 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T6 r7is_equal(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
void r7make(T7* C,T2 a1);
void r7extend(T7* C,T3 a1);
T0* r7_px_43(T7* C,T0* a1);
T2 r7hash_code(T7* C);
void r7remove_last(T7* C,T2 a1);
void r7append_character(T7* C,T3 a1);
void r7add_last(T7* C,T3 a1);
void r7from_external(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r134copy(T134* C,T0* a1);
T2 r134count(T134* C);
T0* r134item(T134* C,T2 a1);
void r134make(T134* C,T2 a1,T2 a2);
T0* r134twin(T134* C);
void r146copy(T146* C,T0* a1);
T2 r146count(T146* C);
T2 r146item(T146* C,T2 a1);
void r146make(T146* C,T2 a1,T2 a2);
T2 r146_px_64(T146* C,T2 a1);
T0* r146twin(T146* C);
void r146swap(T146* C,T2 a1,T2 a2);
void r140copy(T140* C,T0* a1);
void r140make(T140* C,T2 a1,T2 a2);
T0* r140_px_64(T140* C,T2 a1);
T0* r140twin(T140* C);
void r180copy(T180* C,T0* a1);
T0* r180item(T180* C,T2 a1);
void r180make(T180* C,T2 a1,T2 a2);
T0* r180_px_64(T180* C,T2 a1);
T0* r180twin(T180* C);
void r185copy(T185* C,T0* a1);
void r185make(T185* C,T2 a1,T2 a2);
T0* r185_px_64(T185* C,T2 a1);
T0* r185twin(T185* C);
void r153copy(T153* C,T0* a1);
T0* r153item(T153* C,T2 a1);
void r153make(T153* C,T2 a1,T2 a2);
T0* r153_px_64(T153* C,T2 a1);
T0* r153twin(T153* C);
void r197copy(T197* C,T0* a1);
T3 r197item(T197* C,T2 a1);
void r197make(T197* C,T2 a1,T2 a2);
T0* r197twin(T197* C);
void r158copy(T158* C,T0* a1);
T0* r158item(T158* C,T2 a1);
void r158make(T158* C,T2 a1,T2 a2);
T0* r158twin(T158* C);
void r143copy(T143* C,T0* a1);
T0* r143item(T143* C,T2 a1);
void r143make(T143* C,T2 a1,T2 a2);
T0* r143twin(T143* C);
void r150copy(T150* C,T0* a1);
T0* r150item(T150* C,T2 a1);
void r150make(T150* C,T2 a1,T2 a2);
T0* r150twin(T150* C);
void r195copy(T195* C,T0* a1);
T2 r195count(T195* C);
T0* r195item(T195* C,T2 a1);
void r195make(T195* C,T2 a1,T2 a2);
T0* r195_px_64(T195* C,T2 a1);
T0* r195twin(T195* C);
void r118copy(T118* C,T0* a1);
void r118clear_all(T118* C);
T5 r118item(T118* C,T2 a1);
void r118make(T118* C,T2 a1,T2 a2);
T5 r118_px_64(T118* C,T2 a1);
T0* r118twin(T118* C);
void r218next(T218* C);
T0* r218item(T218* C);
void r218make(T218* C,T0* a1);
T6 r218is_off(T218* C);
T0* r218twin(T218* C);
void r189make(T189* C,T0* a1,T2 a2,T0* a3);
T0* r189twin(T189* C);
void r114next(T114* C);
void r114make(T114* C,T0* a1);
void r114start(T114* C);
T0* r114twin(T114* C);
void r43copy(T43* C,T0* a1);
T0* r43key(T43* C,T2 a1);
T0* r43at(T43* C,T0* a1);
void r43put(T43* C,T0* a1,T0* a2);
T0* r43item(T43* C,T2 a1);
void r43set_cache_user(T43* C,T2 a1);
void r43increase_capacity(T43* C);
T6 r43has(T43* C,T0* a1);
void r43clear(T43* C);
T0* r43twin(T43* C);
void r43with_capacity(T43* C,T2 a1);
void r59copy(T59* C,T0* a1);
T0* r59item(T59* C,T2 a1);
void r59make(T59* C);
T0* r59_px_64(T59* C,T2 a1);
void r59add_last(T59* C,T0* a1);
void r59clear(T59* C);
T2 r59fast_index_of(T59* C,T0* a1);
T0* r59twin(T59* C);
void r59go_item(T59* C,T2 a1);
void r59from_collection(T59* C,T0* a1);
void r61copy(T61* C,T0* a1);
T0* r61key(T61* C,T2 a1);
T0* r61at(T61* C,T0* a1);
void r61put(T61* C,T0* a1,T0* a2);
T0* r61item(T61* C,T2 a1);
void r61set_cache_user(T61* C,T2 a1);
void r61increase_capacity(T61* C);
T6 r61has(T61* C,T0* a1);
void r61clear(T61* C);
T0* r61twin(T61* C);
void r61with_capacity(T61* C,T2 a1);
void r125make(T125* C,T0* a1,T0* a2);
T0* r125twin(T125* C);
void r163make(T163* C,T0* a1,T0* a2,T0* a3);
T0* r163twin(T163* C);
void r99make(T99* C,T0* a1,T2 a2,T0* a3);
T0* r99twin(T99* C);
void r81copy(T81* C,T0* a1);
T0* r81item(T81* C,T2 a1);
void r81make(T81* C);
T0* r81get_new_iterator(T81* C);
T0* r81_px_64(T81* C,T2 a1);
void r81add_last(T81* C,T0* a1);
void r81clear(T81* C);
T0* r81twin(T81* C);
void r81go_item(T81* C,T2 a1);
void r81from_collection(T81* C,T0* a1);
void r82make(T82* C,T0* a1,T0* a2);
T0* r82twin(T82* C);
void r66make(T66* C,T0* a1,T0* a2);
T0* r66twin(T66* C);
void r122next(T122* C);
void r122make(T122* C,T0* a1);
void r122start(T122* C);
T0* r122twin(T122* C);
void r162copy(T162* C,T0* a1);
T0* r162key(T162* C,T2 a1);
T0* r162at(T162* C,T0* a1);
void r162put(T162* C,T0* a1,T0* a2);
T0* r162item(T162* C,T2 a1);
void r162set_cache_user(T162* C,T2 a1);
void r162increase_capacity(T162* C);
T6 r162has(T162* C,T0* a1);
void r162clear(T162* C);
T0* r162twin(T162* C);
void r162with_capacity(T162* C,T2 a1);
void r124copy(T124* C,T0* a1);
T0* r124item(T124* C,T2 a1);
void r124make(T124* C);
T0* r124get_new_iterator(T124* C);
void r124add_last(T124* C,T0* a1);
void r124clear(T124* C);
T0* r124twin(T124* C);
void r124go_item(T124* C,T2 a1);
void r124from_collection(T124* C,T0* a1);
void r77copy(T77* C,T0* a1);
T2 r77key(T77* C,T2 a1);
T0* r77at(T77* C,T2 a1);
void r77put(T77* C,T0* a1,T2 a2);
T0* r77item(T77* C,T2 a1);
void r77set_cache_user(T77* C,T2 a1);
void r77increase_capacity(T77* C);
void r77clear(T77* C);
T0* r77twin(T77* C);
void r77with_capacity(T77* C,T2 a1);
void r102quick_sort_region(T0* a1,T2 a2,T2 a3);
void r102sort(T0* a1);
T6 r102is_sorted(T0* a1);
void r41make(T41* C,T0* a1,T0* a2);
T0* r41twin(T41* C);
void r111next(T111* C);
T2 r111item(T111* C);
void r111make(T111* C,T0* a1);
T6 r111is_off(T111* C);
T0* r111twin(T111* C);
void r55copy(T55* C,T0* a1);
T0* r55get_new_iterator_on_keys(T55* C);
T2 r55key(T55* C,T2 a1);
T0* r55at(T55* C,T2 a1);
void r55put(T55* C,T0* a1,T2 a2);
T0* r55item(T55* C,T2 a1);
void r55set_cache_user(T55* C,T2 a1);
void r55remove(T55* C,T2 a1);
void r55increase_capacity(T55* C);
T6 r55has(T55* C,T2 a1);
void r55clear(T55* C);
T0* r55twin(T55* C);
void r55with_capacity(T55* C,T2 a1);
void r109make(T109* C,T2 a1,T0* a2);
T0* r109twin(T109* C);
void r57make(T57* C,T0* a1,T2 a2,T0* a3);
T0* r57twin(T57* C);
void r65copy(T65* C,T0* a1);
void r65remove_first(T65* C);
T0* r65item(T65* C,T2 a1);
void r65make(T65* C);
void r65remove(T65* C,T2 a1);
T0* r65get_new_iterator(T65* C);
void r65remove_last(T65* C);
void r65add_last(T65* C,T0* a1);
void r65clear(T65* C);
T2 r65fast_index_of(T65* C,T0* a1);
T0* r65twin(T65* C);
void r65go_item(T65* C,T2 a1);
void r65from_collection(T65* C,T0* a1);
T0* r54at(T54* C,T2 a1,T2 a2);
void r54put(T54* C,T0* a1,T2 a2,T2 a3);
void r54make(T54* C);
void r54remove(T54* C,T2 a1,T2 a2);
T6 r54has_row(T54* C,T2 a1);
T0* r54get_row(T54* C,T2 a1);
T6 r54has(T54* C,T2 a1,T2 a2);
T0* r54get_sorted_row_list(T54* C);
T0* r54get_sorted_col_list(T54* C,T2 a1);
T0* r54twin(T54* C);
void r56copy(T56* C,T0* a1);
T0* r56get_new_iterator_on_keys(T56* C);
T2 r56key(T56* C,T2 a1);
T0* r56at(T56* C,T2 a1);
void r56put(T56* C,T0* a1,T2 a2);
T0* r56item(T56* C,T2 a1);
void r56set_cache_user(T56* C,T2 a1);
void r56remove(T56* C,T2 a1);
void r56increase_capacity(T56* C);
T6 r56has(T56* C,T2 a1);
void r56clear(T56* C);
T0* r56twin(T56* C);
void r56with_capacity(T56* C,T2 a1);
void r200copy(T200* C,T0* a1);
T0* r200key(T200* C,T2 a1);
void r200put(T200* C,T0* a1,T0* a2);
T0* r200item(T200* C,T2 a1);
void r200set_cache_user(T200* C,T2 a1);
T0* r200get_new_iterator_on_items(T200* C);
void r200remove(T200* C,T0* a1);
void r200increase_capacity(T200* C);
void r200clear(T200* C);
T0* r200twin(T200* C);
void r200with_capacity(T200* C,T2 a1);
void r201make(T201* C,T0* a1,T0* a2,T0* a3);
T0* r201twin(T201* C);
void r45make(T45* C,T0* a1,T0* a2,T0* a3);
T0* r45twin(T45* C);
void r78make(T78* C,T0* a1,T2 a2,T0* a3);
T0* r78twin(T78* C);
void r193copy(T193* C,T0* a1);
T2 r193count(T193* C);
T0* r193item(T193* C,T2 a1,T2 a2);
void r193make(T193* C,T2 a1,T2 a2,T2 a3,T2 a4);
T2 r193count1(T193* C);
T2 r193count2(T193* C);
T0* r193twin(T193* C);
void r60make(T60* C,T0* a1,T0* a2);
T0* r60twin(T60* C);
void r88next(T88* C);
void r88make(T88* C,T0* a1);
void r88start(T88* C);
T0* r88twin(T88* C);
void r113next(T113* C);
void r113make(T113* C,T0* a1);
void r113start(T113* C);
T0* r113twin(T113* C);
void r39copy(T39* C,T0* a1);
void r39remove_first(T39* C);
T0* r39item(T39* C,T2 a1);
T6 r39valid_index(T39* C,T2 a1);
void r39make(T39* C);
void r39remove(T39* C,T2 a1);
void r39add_first(T39* C,T0* a1);
T0* r39get_new_iterator(T39* C);
void r39remove_last(T39* C);
T0* r39_px_64(T39* C,T2 a1);
T6 r39fast_has(T39* C,T0* a1);
void r39add_last(T39* C,T0* a1);
void r39clear(T39* C);
T2 r39fast_index_of(T39* C,T0* a1);
T0* r39twin(T39* C);
void r39go_item(T39* C,T2 a1);
void r39from_collection(T39* C,T0* a1);
void r127next(T127* C);
void r127make(T127* C,T0* a1);
void r127start(T127* C);
T0* r127twin(T127* C);
void r107copy(T107* C,T0* a1);
void r107put(T107* C,T2 a1,T2 a2);
T2 r107item(T107* C,T2 a1);
void r107make(T107* C);
T0* r107get_new_iterator(T107* C);
void r107add_last(T107* C,T2 a1);
void r107clear(T107* C);
T0* r107twin(T107* C);
void r107go_item(T107* C,T2 a1);
void r107from_collection(T107* C,T0* a1);
void r107swap(T107* C,T2 a1,T2 a2);
void r62make(T62* C,T0* a1,T0* a2,T0* a3);
T0* r62twin(T62* C);
void r188copy(T188* C,T0* a1);
T2 r188key(T188* C,T2 a1);
T0* r188at(T188* C,T2 a1);
void r188put(T188* C,T0* a1,T2 a2);
T0* r188item(T188* C,T2 a1);
void r188set_cache_user(T188* C,T2 a1);
void r188increase_capacity(T188* C);
T6 r188has(T188* C,T2 a1);
void r188clear(T188* C);
T0* r188twin(T188* C);
void r188with_capacity(T188* C,T2 a1);
extern T0*oBC86tmp_string;
void r89put_integer(T2 a1);
T0* r89twin(T89* C);
void r89put_string(T0* a1);
T6 r96legal_col(T2 a1);
extern T0*oBC17blue;
extern int fBC17blue;
T0* r96blue(void);
void r96handle_event(T96* C,T0* a1);
void r96process_key(T96* C,T0* a1);
/* Extra external prototype for line 272 of ./sdl_constant.e:*/
T6 is_kmod(T2 a1,T2 a2);
extern T0*oBC19song;
extern int fBC19song;
T0* r96song(void);
extern T0*oBC1io;
void r96write(T96* C,T2 a1,T2 a2,T0* a3);
/* Extra external prototype for line 169 of ./image.e:*/
void ext_blit_img(T8 a1,T2 a2,T2 a3);
void r96move_cursor_up(T96* C,T2 a1);
void r96draw_song(T96* C);
/* Extra external prototype for line 50 of ./window.e:*/
void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r96make(T96* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r96put_geometry(T96* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r96process_event(T96* C,T0* a1);
T0* r96twin(T96* C);
extern T0*oBC17white;
extern int fBC17white;
T0* r96white(void);
void r96process_edit_key(T96* C,T2 a1);
void r96move_cursor_down(T96* C,T2 a1);
T2 r96abs_row(T96* C,T2 a1);
void r96process_buttondown(T96* C,T0* a1);
T0* r167twin(T167* C);
T0* r161twin(T161* C);
T0* r165twin(T165* C);
T0* r74new_pattern_autoname(T74* C);
void r74put_cutoff(T74* C,T2 a1);
T0* r74blue(void);
T2 r74fade_time(void);
void r74move_to(T74* C,T2 a1,T2 a2);
T0* r74song(void);
T2 r74centerx(T74* C);
void r74compute_taps(T74* C);
T2 r74centery(T74* C);
T0* r74new_pattern(T74* C,T0* a1);
T0* r74clone(T0* a1);
T0* r74make_instance(T74* C,T0* a1);
void r74put_length(T74* C,T2 a1);
void r74play_freq(T74* C,T5 a1);
extern T5 oBC74pi;
extern int fBC74pi;
T5 r74pi(void);
T6 r74is_note(T0* a1,T2 a2);
extern T0*oBC74saw_table;
extern int fBC74saw_table;
T0* r74saw_table(void);
void r74process_command(T74* C,T0* a1);
void r74init(T74* C);
void r74init_connection_lists(T74* C);
void r74put_resonance(T74* C,T2 a1);
extern T0*oBC31note_rank_array;
extern int fBC31note_rank_array;
T0* r74note_rank_array(void);
void r74init_pattern_table(T74* C);
T0* r74next_pattern(T74* C,T0* a1);
extern T0*oBC74fade_table;
extern int fBC74fade_table;
T0* r74fade_table(void);
T0* r74twin(T74* C);
extern T0*oBC31note_freq_table;
extern int fBC31note_freq_table;
T0* r74note_freq_table(void);
void r74put_freq(T74* C,T5 a1);
T0* r74white(void);
T2 r74note_to_rank(T0* a1,T2 a2);
T5 r74work(T74* C);
void r74compute_next_frame(T74* C);
void r74put_name(T74* C,T0* a1);
void r74init_picture(T74* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
extern T2 oBC74modulus;
extern int fBC74modulus;
T2 r74modulus(void);
void r205put_outcoeff(T205* C,T5 a1,T2 a2);
void r205make(T205* C);
T5 r205filter(T205* C,T5 a1);
void r205put_incoeff(T205* C,T5 a1,T2 a2);
T0* r205twin(T205* C);
void r184make(T184* C,T0* a1,T2 a2,T2 a3);
T0* r184twin(T184* C);
T0* r175twin(T175* C);
T0* r172twin(T172* C);
T0* r174twin(T174* C);
void r138init_data(T138* C,T2 a1);
T0* r138twin(T138* C);
extern T0*oBC132conv_table;
extern int fBC132conv_table;
T0* r131conv_table(void);
void r131convert_waves(T0* a1,T0* a2);
void r131convert(T0* a1,T0* a2);
T0* r131twin(T131* C);
T0* r71new_pattern_autoname(T71* C);
T0* r71blue(void);
void r71move_to(T71* C,T2 a1,T2 a2);
void r71put_track(T71* C,T2 a1);
T2 r71centerx(T71* C);
T2 r71centery(T71* C);
T0* r71new_pattern(T71* C,T0* a1);
T0* r71clone(T0* a1);
T0* r71make_instance(T71* C,T0* a1);
T6 r71is_note(T0* a1,T2 a2);
void r71process_command(T71* C,T0* a1);
void r71init(T71* C);
void r71init_connection_lists(T71* C);
T0* r71note_rank_array(void);
void r71init_pattern_table(T71* C);
T0* r71next_pattern(T71* C,T0* a1);
T0* r71twin(T71* C);
T0* r71note_freq_table(void);
T0* r71white(void);
T2 r71note_to_rank(T0* a1,T2 a2);
T5 r71work(T71* C);
void r71compute_next_frame(T71* C);
void r71put_name(T71* C,T0* a1);
void r71init_picture(T71* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T5 r212next_sample(T212* C);
void r212next_value(T212* C);
void r212make(T212* C);
T0* r212twin(T212* C);
void r212put_freq(T212* C,T5 a1);
void r212next_t(T212* C);
T0* r171twin(T171* C);
T0* r178twin(T178* C);
T0* r137conv_table(void);
void r137put_type(T137* C,T2 a1);
void r137put_dll(T137* C,T0* a1);
void r137put_pattern_count(T137* C,T2 a1);
void r137make(T137* C,T0* a1);
void r137put_xy(T137* C,T4 a1,T4 a2);
void r137increment_in_count(T137* C);
T0* r137twin(T137* C);
void r93handle_event(T93* C,T0* a1);
void r93process_key(T93* C,T0* a1);
/* Extra external prototype for line 272 of ./sdl_constant.e:*/
T6 is_kmod(T2 a1,T2 a2);
void r93import_buzz_file(T93* C);
T0* r93song(void);
void r93text_remove_last(T93* C);
void r93write(T93* C,T2 a1,T2 a2,T0* a3);
/* Extra external prototype for line 169 of ./image.e:*/
void ext_blit_img(T8 a1,T2 a2,T2 a3);
void r93make(T93* C,T0* a1);
void r93put_geometry(T93* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r93process_event(T93* C,T0* a1);
T0* r93twin(T93* C);
T0* r93white(void);
void r93update(T93* C);
/* Extra external prototype for line 50 of ./window.e:*/
void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 50 of ./window.e:*/
void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
extern T0*oBC17black;
extern int fBC17black;
T0* r93black(void);
T0* r170twin(T170* C);
T0* r166twin(T166* C);
void r48draw_text(T48* C,T2 a1,T2 a2,T0* a3);
/* Extra external prototype for line 173 of ./image.e:*/
void ext_blit_img_to(T8 a1,T8 a2,T2 a3,T2 a4);
void r48render_string(T48* C,T0* a1);
/* Extra external prototype for line 149 of ./image.e:*/
T8 render_text(T8 a1);
void r48rotozoom(T48* C,T0* a1,T5 a2,T5 a3);
/* Extra external prototype for line 193 of ./image.e:*/
T8 rotozoomSurface(T8 a1,T5 a2,T5 a3,T2 a4);
void r48new(T48* C,T2 a1,T2 a2);
/* Extra external prototype for line 181 of ./image.e:*/
T8 ext_new_surface(T2 a1,T2 a2);
void r48new_arrow(T48* C);
/* Extra external prototype for line 189 of ./image.e:*/
T8 draw_arrow_kludge(void);
T2 r48height(T48* C);
/* Extra external prototype for line 157 of ./image.e:*/
T2 get_img_height(T8 a1);
T0* r48twin(T48* C);
T2 r48width(T48* C);
/* Extra external prototype for line 153 of ./image.e:*/
T2 get_img_width(T8 a1);
void r48free(T48* C);
/* Extra external prototype for line 144 of ./image.e:*/
T8 free_img(T8 a1);
T0* r72new_pattern_autoname(T72* C);
void r72move_to(T72* C,T2 a1,T2 a2);
T2 r72centerx(T72* C);
T2 r72centery(T72* C);
T0* r72new_pattern(T72* C,T0* a1);
T0* r72clone(T0* a1);
T0* r72make_instance(T72* C,T0* a1);
void r72init_connection_lists(T72* C);
extern T0*oBC17green;
extern int fBC17green;
T0* r72green(void);
void r72init_pattern_table(T72* C);
T0* r72next_pattern(T72* C,T0* a1);
T0* r72twin(T72* C);
T0* r72white(void);
void r72compute_next_frame(T72* C);
void r72put_name(T72* C,T0* a1);
void r72init_picture(T72* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
void r213next(T213* C);
T4 r213last_real(T213* C);
void r213with_seed(T213* C,T2 a1);
void r213make(T213* C);
T5 r213last_double(T213* C);
void r213min_next(T213* C);
T0* r213twin(T213* C);
void r50make(T50* C,T2 a1,T2 a2,T2 a3);
/* Extra external prototype for line 28 of ./color.e:*/
T8 ext_make_color(T2 a1,T2 a2,T2 a3);
/* Extra external prototype for line 36 of ./color.e:*/
T2 ext_convert_color(T2 a1,T2 a2,T2 a3);
T0* r50twin(T50* C);
void r149put_row_count(T149* C,T2 a1);
void r149put_global_data(T149* C,T0* a1,T2 a2);
void r149make(T149* C,T0* a1,T2 a2);
void r149put_data(T149* C,T0* a1,T2 a2,T2 a3);
T0* r149twin(T149* C);
T0* r73new_pattern_autoname(T73* C);
void r73move_to(T73* C,T2 a1,T2 a2);
T2 r73centerx(T73* C);
T2 r73centery(T73* C);
T0* r73new_pattern(T73* C,T0* a1);
T0* r73clone(T0* a1);
T0* r73make_instance(T73* C,T0* a1);
void r73init_connection_lists(T73* C);
void r73init_pattern_table(T73* C);
T0* r73next_pattern(T73* C,T0* a1);
T0* r73twin(T73* C);
T0* r73white(void);
extern T0*oBC17red;
extern int fBC17red;
T0* r73red(void);
void r73compute_next_frame(T73* C);
void r73put_name(T73* C,T0* a1);
void r73init_picture(T73* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
void r129put_dir_count(T129* C,T2 a1);
void r129put_entry(T129* C,T0* a1,T2 a2);
void r129dump(T129* C);
void r129put_sequence_count(T129* C,T2 a1);
void r129put_wave_count(T129* C,T2 a1);
void r129put_connection_count(T129* C,T2 a1);
T0* r129twin(T129* C);
void r129put_connection(T129* C,T0* a1,T2 a2);
void r129put_machine_count(T129* C,T2 a1);
void r129put_song_info(T129* C,T2 a1,T2 a2,T2 a3);
extern T0*oBC133hex255table;
extern int fBC133hex255table;
T0* r176hex255table(void);
T0* r176to_note(T3 a1);
void r176convert_patterns(T0* a1,T0* a2);
extern T0*oBC31scale_array;
T0* r176twin(T176* C);
void r64make(T64* C,T0* a1,T0* a2);
void r64put_xy(T64* C,T2 a1,T2 a2);
T0* r64twin(T64* C);
T0* r169twin(T169* C);
T0* r69new_pattern_autoname(T69* C);
void r69move_to(T69* C,T2 a1,T2 a2);
T2 r69centerx(T69* C);
T2 r69centery(T69* C);
T0* r69new_pattern(T69* C,T0* a1);
T0* r69clone(T0* a1);
T0* r69make_instance(T69* C,T0* a1);
void r69init(T69* C);
void r69init_connection_lists(T69* C);
T0* r69green(void);
void r69init_pattern_table(T69* C);
T0* r69next_pattern(T69* C,T0* a1);
T0* r69twin(T69* C);
T0* r69white(void);
T5 r69work(T69* C);
void r69compute_next_frame(T69* C);
void r69put_name(T69* C,T0* a1);
void r69init_picture(T69* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T5 r211next_sample(T211* C);
void r211make(T211* C,T5 a1,T5 a2);
T0* r211twin(T211* C);
T0* r179hex255table(void);
T0* r179to_note(T3 a1);
void r179convert_patterns(T0* a1,T0* a2);
T0* r179twin(T179* C);
T5 r210next_sample(T210* C);
T0* r210twin(T210* C);
void r139put_filename(T139* C,T0* a1);
void r139put_level_count(T139* C,T2 a1);
T0* r139twin(T139* C);
void r139put_name(T139* C,T0* a1);
T0* r67new_pattern_autoname(T67* C);
T0* r67blue(void);
void r67move_to(T67* C,T2 a1,T2 a2);
T2 r67centerx(T67* C);
T2 r67centery(T67* C);
T0* r67new_pattern(T67* C,T0* a1);
T0* r67clone(T0* a1);
T0* r67make_instance(T67* C,T0* a1);
void r67init_connection_lists(T67* C);
void r67init_pattern_table(T67* C);
T0* r67next_pattern(T67* C,T0* a1);
T0* r67twin(T67* C);
T0* r67white(void);
void r67compute_next_frame(T67* C);
void r67put_name(T67* C,T0* a1);
void r67init_picture(T67* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T0* r168twin(T168* C);
void r130get_char(T130* C);
void r130parse_wavetable_section(T130* C);
void r130read_asciiz(T130* C);
void r130parse_machine_section(T130* C);
void r130parse_wavedata_section(T130* C);
T0* r130load(T130* C,T0* a1);
void r130parse_pattern_section(T130* C);
void r130read_float(T130* C);
/* Extra external prototype for line 470 of buzz/buzz_loader.e:*/
T4 ext_int_to_float(T2 a1);
void r130read_dword(T130* C);
void r130read_byte(T130* C);
T5 r130buzz_note_to_freq(T3 a1);
void r130make(T130* C);
void r130parse_header(T130* C);
void r130parse_pattern_data(T130* C,T0* a1,T0* a2);
void r130read_bytes(T130* C,T2 a1);
void r130read_word(T130* C);
void r130read_string(T130* C,T2 a1);
T0* r130parse_machine(T130* C);
void r130parse_sequence_section(T130* C);
void r130parse(T130* C);
T0* r130twin(T130* C);
T0* r130note_freq_table(void);
void r130parse_connection_section(T130* C);
void r83put_machine_pos(T83* C,T2 a1,T2 a2);
void r83end_machine(T83* C);
void r83start_machine(T83* C,T0* a1);
void r83start_zorder(T83* C);
void r83put_line(T83* C,T0* a1);
T0* r83twin(T83* C);
void r83end_zorder(T83* C);
T5 r209next_sample(T209* C);
void r209make(T209* C,T0* a1,T0* a2);
T0* r209twin(T209* C);
void r95handle_event(T95* C,T0* a1);
void r95process_buttonup(T95* C,T0* a1);
void r95select_machine_for_move(T95* C,T2 a1,T2 a2);
void r95process_key(T95* C,T2 a1);
/* Extra external prototype for line 63 of ./window.e:*/
void ext_get_mouse_state(void);
/* Extra external prototype for line 63 of ./window.e:*/
void ext_get_mouse_state(void);
/* Extra external prototype for line 63 of ./window.e:*/
void ext_get_mouse_state(void);
void r95select_machine_for_connect(T95* C,T2 a1,T2 a2);
T2 r95last_mouse_y(T95* C);
/* Extra external prototype for line 81 of ./window.e:*/
T2 get_last_mouse_y(void);
T2 r95last_mouse_x(T95* C);
/* Extra external prototype for line 77 of ./window.e:*/
T2 get_last_mouse_x(void);
T0* r95song(void);
void r95attempt_connect(T0* a1,T0* a2);
T2 r95select_machine(T2 a1,T2 a2);
void r95connect_selection(T95* C,T2 a1,T2 a2);
void r95draw_connection(T95* C,T0* a1);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 185 of ./image.e:*/
void ext_set_colorkey(T8 a1,T2 a2);
/* Extra external prototype for line 169 of ./image.e:*/
void ext_blit_img(T8 a1,T2 a2,T2 a3);
void r95clipped_move(T95* C,T0* a1,T2 a2,T2 a3);
void r95place_selection(T95* C,T2 a1,T2 a2);
void r95put_geometry(T95* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r95process_event(T95* C,T0* a1);
T0* r95twin(T95* C);
T0* r95white(void);
extern T0*oBC95arrow_image;
extern int fBC95arrow_image;
T0* r95arrow_image(void);
void r95select_edge(T2 a1,T2 a2);
void r95update(T95* C);
/* Extra external prototype for line 63 of ./window.e:*/
void ext_get_mouse_state(void);
/* Extra external prototype for line 63 of ./window.e:*/
void ext_get_mouse_state(void);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 169 of ./image.e:*/
void ext_blit_img(T8 a1,T2 a2,T2 a3);
void r95process_buttondown(T95* C,T0* a1);
/* Extra external prototype for line 272 of ./sdl_constant.e:*/
T6 is_kmod(T2 a1,T2 a2);
void r203put_wave_index(T203* C,T2 a1);
void r203volslidedown(T203* C,T2 a1);
T5 r203next_sample(T203* C);
T0* r203song(void);
void r203play_freq(T203* C,T5 a1);
T0* r203twin(T203* C);
void r94process_text_edit_key(T94* C,T2 a1);
T0* r94blue(void);
void r94handle_event(T94* C,T0* a1);
void r94process_key(T94* C,T0* a1);
/* Extra external prototype for line 272 of ./sdl_constant.e:*/
T6 is_kmod(T2 a1,T2 a2);
void r94draw_spreadsheet(T94* C);
/* Extra external prototype for line 50 of ./window.e:*/
void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/* Extra external prototype for line 90 of ./window.e:*/
void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
T0* r94song(void);
void r94text_remove_last(T94* C);
void r94write(T94* C,T2 a1,T2 a2,T0* a3);
/* Extra external prototype for line 169 of ./image.e:*/
void ext_blit_img(T8 a1,T2 a2,T2 a3);
void r94put_machine(T94* C,T0* a1);
void r94move_cursor_up(T94* C,T2 a1);
void r94text_append(T94* C,T3 a1);
void r94make(T94* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r94put_geometry(T94* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r94process_event(T94* C,T0* a1);
T0* r94twin(T94* C);
T0* r94white(void);
void r94process_edit_key(T94* C,T2 a1);
void r94move_cursor_down(T94* C,T2 a1);
void r94update(T94* C);
T5 r76get_data_double(T76* C,T2 a1);
T0* r76twin(T76* C);
void r76put_name(T76* C,T0* a1);
T0* r173twin(T173* C);
T0* r22twin(T22* C);
void r22update(T22* C);
/* Extra external prototype for line 54 of ./event.e:*/
T2 export_current_x(void);
/* Extra external prototype for line 58 of ./event.e:*/
T2 export_current_y(void);
/* Extra external prototype for line 62 of ./event.e:*/
T2 export_current_i1(void);
/* Extra external prototype for line 66 of ./event.e:*/
T2 export_current_i2(void);
/* Extra external prototype for line 70 of ./event.e:*/
T2 export_current_kmod(void);
/* Extra external prototype for line 74 of ./event.e:*/
T2 export_current_type(void);
T0* r28next_machine(T28* C,T0* a1);
T0* r28at(T28* C,T2 a1,T2 a2);
extern T0*oBC29machine_class_table;
extern int fBC29machine_class_table;
T0* r28machine_class_table(void);
void r28move_to(T0* a1,T2 a2,T2 a3);
T5 r28next_sample(T28* C);
T0* r28new_machine_autoname(T28* C,T0* a1);
void r28boom(T28* C);
void r28jump_to(T28* C,T2 a1);
T6 r28exists_edge(T0* a1,T0* a2);
void r28make(T28* C);
void r28calculate_samples_per_tick(T28* C);
void r28import_buzz(T28* C,T0* a1);
T6 r28has(T28* C,T2 a1,T2 a2);
T0* r28add_machine(T28* C,T0* a1,T0* a2);
void r28save(T28* C,T0* a1);
void r28setup_machines(T28* C);
void r28put_bpm_tpb(T28* C,T2 a1,T2 a2);
void r28toposort(T28* C);
T0* r28get_playing_rows(T28* C,T0* a1);
T0* r28twin(T28* C);
void r28increment_sample_count(T28* C);
void r28connect(T28* C,T0* a1,T0* a2);
void r28delete_edge(T28* C,T0* a1);
void r28unvisit_all_machines(T28* C);
T0* r28new_machine(T28* C,T0* a1,T0* a2);
void r28rewind(T28* C);
void r28add_track(T28* C,T0* a1);
void r135put_event_count(T135* C,T2 a1);
T0* r135twin(T135* C);
void r51boom(T51* C,T2 a1);
void r51make(T51* C,T0* a1,T0* a2);
void r51instant_execute(T51* C);
T0* r51twin(T51* C);
void r51put_name(T51* C,T0* a1);
T5 r206evaluate(T5 a1);
T0* r206twin(T206* C);
void r136make(T136* C,T2 a1,T2 a2,T2 a3,T2 a4);
T0* r136twin(T136* C);
void r183disconnect(T183* C);
void r183read_byte(T183* C);
T6 r183end_of_input(T183* C);
void r183connect_to(T183* C,T0* a1);
T0* r183twin(T183* C);
T5 r208next_sample(T208* C);
T0* r208twin(T208* C);
void r208next_t(T208* C);
/* Extra external prototype for line 37 of ./oscer.e:*/
T5 fast_next(T5 a1,T5 a2);
void r80boom(T80* C,T2 a1);
void r80make(T80* C,T0* a1);
void r80process_command(T80* C,T0* a1);
T0* r80twin(T80* C);
void r80rewind(T80* C);
T0* r177twin(T177* C);
T0* r75new_pattern_autoname(T75* C);
T0* r75blue(void);
void r75move_to(T75* C,T2 a1,T2 a2);
T2 r75centerx(T75* C);
T2 r75centery(T75* C);
T0* r75new_pattern(T75* C,T0* a1);
void r75boom(T75* C);
T0* r75clone(T0* a1);
T0* r75make_instance(T75* C,T0* a1);
void r75play_freq(T75* C,T5 a1);
void r75snare_drum(T75* C);
T6 r75is_note(T0* a1,T2 a2);
void r75process_command(T75* C,T0* a1);
void r75kick_drum(T75* C);
void r75init(T75* C);
void r75init_connection_lists(T75* C);
T0* r75note_rank_array(void);
void r75init_pattern_table(T75* C);
T0* r75next_pattern(T75* C,T0* a1);
T0* r75twin(T75* C);
T0* r75note_freq_table(void);
T0* r75white(void);
T2 r75note_to_rank(T0* a1,T2 a2);
T5 r75work(T75* C);
void r75compute_next_frame(T75* C);
void r75put_name(T75* C,T0* a1);
void r75init_picture(T75* C);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
/* Extra external prototype for line 177 of ./image.e:*/
void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T0* r23twin(T23* C);
T2 r47prime_number_ceiling(T2 a1);
T6 r16poll_event(T16* C);
/* Extra external prototype for line 241 of ./bliss.e:*/
T6 ext_poll_event(void);
void r16main_loop(T16* C);
/* Extra external prototype for line 249 of ./bliss.e:*/
void ext_update_screen(void);
/* Extra external prototype for line 229 of ./bliss.e:*/
void SDL_LockAudio(void);
/* Extra external prototype for line 233 of ./bliss.e:*/
void SDL_UnlockAudio(void);
T0* r16song(void);
void r16draw_screen(T16* C);
/* Extra external prototype for line 269 of ./bliss.e:*/
void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r16load_buzz_dialog(T16* C);
void r16end_program(T16* C);
/* Extra external prototype for line 237 of ./bliss.e:*/
void SDL_PauseAudio(T2 a1);
void r16make(T16* C);
/* Extra external prototype for line 217 of ./bliss.e:*/
void init(void);
/* Extra external prototype for line 237 of ./bliss.e:*/
void SDL_PauseAudio(T2 a1);
void r16vis_draw(T16* C);
/* Extra external prototype for line 278 of ./bliss.e:*/
void ext_pixelcolor(T2 a1,T2 a2,T2 a3);
void r16buffer_audio(T16* C);
/* Extra external prototype for line 225 of ./bliss.e:*/
T6 buffer_ready(void);
/* Extra external prototype for line 221 of ./bliss.e:*/
void next_frame(T5 a1,T5 a2);
extern T0*oBC16test_saver;
extern int fBC16test_saver;
T0* r16test_saver(void);
T0* r16twin(T16* C);
T0* r16white(void);
void r16process_last_event(T16* C);
/* Extra external prototype for line 272 of ./sdl_constant.e:*/
T6 is_kmod(T2 a1,T2 a2);
T0* r16black(void);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 230
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms172_529023852;
extern T7*ms165_1761360889;
extern T7*ms173_13464;
extern T7*ms67_13464;
extern T7*ms173_1658719074;
extern T7*ms176_296345362;
extern T7*ms168_1658670231;
extern T7*ms75_265794;
extern T7*ms169_1043126849;
extern T7*ms171_296581587;
extern T7*ms177_1658706155;
extern T7*ms71_33463794;
extern T7*ms161_2425;
extern T7*ms175_1386254719;
extern T7*ms170_2425;
extern T7*ms175_1327181;
extern T7*ms179_1325625;
extern T7*ms172_2425;
extern T7*ms167_2425;
extern T7*ms174_2425;
extern T7*ms178_2425;
extern T7*ms165_13464;
extern T7*ms69_1327181;
extern T7*ms74_1325625;
extern T7*ms178_581741755;
extern T7*ms169_13464;
extern T7*ms176_33463794;
extern T7*ms73_319144;
extern T7*ms171_2425;
extern T7*ms166_2425;
extern T7*ms179_1658653172;
extern T7*ms168_2425;
extern T7*ms72_2425;
extern T7*ms177_2425;
extern T7*ms161_1065849555;
extern T7*ms166_1058194184;
extern T7*ms170_616173747;
extern T7*ms167_502183218;
extern T7*ms174_1578465704;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void manifest_string_mark1(void);
void once_function_mark(void);
void gc_start(void);
typedef struct B89 gc89;
struct B89{T89 object;union {int flag;gc89*next;} header;};
extern gc89*store89;
extern int store_left89;
extern fsoc*store_chunk89;
extern gc89*gc_free89;
typedef struct B96 gc96;
struct B96{T96 object;union {int flag;gc96*next;} header;};
extern gc96*store96;
extern int store_left96;
extern fsoc*store_chunk96;
extern gc96*gc_free96;
typedef struct B167 gc167;
struct B167{T167 object;union {int flag;gc167*next;} header;};
extern gc167*store167;
extern int store_left167;
extern fsoc*store_chunk167;
extern gc167*gc_free167;
typedef struct B161 gc161;
struct B161{T161 object;union {int flag;gc161*next;} header;};
extern gc161*store161;
extern int store_left161;
extern fsoc*store_chunk161;
extern gc161*gc_free161;
typedef struct B165 gc165;
struct B165{T165 object;union {int flag;gc165*next;} header;};
extern gc165*store165;
extern int store_left165;
extern fsoc*store_chunk165;
extern gc165*gc_free165;
extern na_env na_env160;
typedef struct B218 gc218;
struct B218{T218 object;union {int flag;gc218*next;} header;};
extern gc218*store218;
extern int store_left218;
extern fsoc*store_chunk218;
extern gc218*gc_free218;
typedef struct B74 gc74;
struct B74{T74 object;union {int flag;gc74*next;} header;};
extern gc74*store74;
extern int store_left74;
extern fsoc*store_chunk74;
extern gc74*gc_free74;
typedef struct B205 gc205;
struct B205{T205 object;union {int flag;gc205*next;} header;};
extern gc205*store205;
extern int store_left205;
extern fsoc*store_chunk205;
extern gc205*gc_free205;
typedef struct B184 gc184;
struct B184{T184 object;union {int flag;gc184*next;} header;};
extern gc184*store184;
extern int store_left184;
extern fsoc*store_chunk184;
extern gc184*gc_free184;
typedef struct B175 gc175;
struct B175{T175 object;union {int flag;gc175*next;} header;};
extern gc175*store175;
extern int store_left175;
extern fsoc*store_chunk175;
extern gc175*gc_free175;
extern na_env na_env152;
typedef struct B172 gc172;
struct B172{T172 object;union {int flag;gc172*next;} header;};
extern gc172*store172;
extern int store_left172;
extern fsoc*store_chunk172;
extern gc172*gc_free172;
typedef struct B189 gc189;
struct B189{T189 object;union {int flag;gc189*next;} header;};
extern gc189*store189;
extern int store_left189;
extern fsoc*store_chunk189;
extern gc189*gc_free189;
typedef struct B134 gc134;
struct B134{T134 object;union {int flag;gc134*next;} header;};
extern gc134*store134;
extern int store_left134;
extern fsoc*store_chunk134;
extern gc134*gc_free134;
typedef struct B174 gc174;
struct B174{T174 object;union {int flag;gc174*next;} header;};
extern gc174*store174;
extern int store_left174;
extern fsoc*store_chunk174;
extern gc174*gc_free174;
typedef struct B146 gc146;
struct B146{T146 object;union {int flag;gc146*next;} header;};
extern gc146*store146;
extern int store_left146;
extern fsoc*store_chunk146;
extern gc146*gc_free146;
extern na_env na_env227;
extern na_env na_env164;
typedef struct B138 gc138;
struct B138{T138 object;union {int flag;gc138*next;} header;};
extern gc138*store138;
extern int store_left138;
extern fsoc*store_chunk138;
extern gc138*gc_free138;
extern na_env na_env142;
typedef struct B131 gc131;
struct B131{T131 object;union {int flag;gc131*next;} header;};
extern gc131*store131;
extern int store_left131;
extern fsoc*store_chunk131;
extern gc131*gc_free131;
typedef struct B114 gc114;
struct B114{T114 object;union {int flag;gc114*next;} header;};
extern gc114*store114;
extern int store_left114;
extern fsoc*store_chunk114;
extern gc114*gc_free114;
typedef struct B71 gc71;
struct B71{T71 object;union {int flag;gc71*next;} header;};
extern gc71*store71;
extern int store_left71;
extern fsoc*store_chunk71;
extern gc71*gc_free71;
typedef struct B212 gc212;
struct B212{T212 object;union {int flag;gc212*next;} header;};
extern gc212*store212;
extern int store_left212;
extern fsoc*store_chunk212;
extern gc212*gc_free212;
typedef struct B171 gc171;
struct B171{T171 object;union {int flag;gc171*next;} header;};
extern gc171*store171;
extern int store_left171;
extern fsoc*store_chunk171;
extern gc171*gc_free171;
extern na_env na_env229;
typedef struct B140 gc140;
struct B140{T140 object;union {int flag;gc140*next;} header;};
extern gc140*store140;
extern int store_left140;
extern fsoc*store_chunk140;
extern gc140*gc_free140;
typedef struct B23 gc23;
struct B23{T23 object;union {int flag;gc23*next;} header;};
extern gc23*store23;
extern int store_left23;
extern fsoc*store_chunk23;
extern gc23*gc_free23;
typedef struct B43 gc43;
struct B43{T43 object;union {int flag;gc43*next;} header;};
extern gc43*store43;
extern int store_left43;
extern fsoc*store_chunk43;
extern gc43*gc_free43;
typedef struct B59 gc59;
struct B59{T59 object;union {int flag;gc59*next;} header;};
extern gc59*store59;
extern int store_left59;
extern fsoc*store_chunk59;
extern gc59*gc_free59;
typedef struct B61 gc61;
struct B61{T61 object;union {int flag;gc61*next;} header;};
extern gc61*store61;
extern int store_left61;
extern fsoc*store_chunk61;
extern gc61*gc_free61;
typedef struct B125 gc125;
struct B125{T125 object;union {int flag;gc125*next;} header;};
extern gc125*store125;
extern int store_left125;
extern fsoc*store_chunk125;
extern gc125*gc_free125;
typedef struct B163 gc163;
struct B163{T163 object;union {int flag;gc163*next;} header;};
extern gc163*store163;
extern int store_left163;
extern fsoc*store_chunk163;
extern gc163*gc_free163;
typedef struct B178 gc178;
struct B178{T178 object;union {int flag;gc178*next;} header;};
extern gc178*store178;
extern int store_left178;
extern fsoc*store_chunk178;
extern gc178*gc_free178;
typedef struct B99 gc99;
struct B99{T99 object;union {int flag;gc99*next;} header;};
extern gc99*store99;
extern int store_left99;
extern fsoc*store_chunk99;
extern gc99*gc_free99;
typedef struct B81 gc81;
struct B81{T81 object;union {int flag;gc81*next;} header;};
extern gc81*store81;
extern int store_left81;
extern fsoc*store_chunk81;
extern gc81*gc_free81;
typedef struct B137 gc137;
struct B137{T137 object;union {int flag;gc137*next;} header;};
extern gc137*store137;
extern int store_left137;
extern fsoc*store_chunk137;
extern gc137*gc_free137;
typedef struct B93 gc93;
struct B93{T93 object;union {int flag;gc93*next;} header;};
extern gc93*store93;
extern int store_left93;
extern fsoc*store_chunk93;
extern gc93*gc_free93;
typedef struct B170 gc170;
struct B170{T170 object;union {int flag;gc170*next;} header;};
extern gc170*store170;
extern int store_left170;
extern fsoc*store_chunk170;
extern gc170*gc_free170;
typedef struct B180 gc180;
struct B180{T180 object;union {int flag;gc180*next;} header;};
extern gc180*store180;
extern int store_left180;
extern fsoc*store_chunk180;
extern gc180*gc_free180;
typedef struct B166 gc166;
struct B166{T166 object;union {int flag;gc166*next;} header;};
extern gc166*store166;
extern int store_left166;
extern fsoc*store_chunk166;
extern gc166*gc_free166;
typedef struct B48 gc48;
struct B48{T48 object;union {int flag;gc48*next;} header;};
extern gc48*store48;
extern int store_left48;
extern fsoc*store_chunk48;
extern gc48*gc_free48;
typedef struct B185 gc185;
struct B185{T185 object;union {int flag;gc185*next;} header;};
extern gc185*store185;
extern int store_left185;
extern fsoc*store_chunk185;
extern gc185*gc_free185;
typedef struct B72 gc72;
struct B72{T72 object;union {int flag;gc72*next;} header;};
extern gc72*store72;
extern int store_left72;
extern fsoc*store_chunk72;
extern gc72*gc_free72;
extern na_env na_env182;
typedef struct B213 gc213;
struct B213{T213 object;union {int flag;gc213*next;} header;};
extern gc213*store213;
extern int store_left213;
extern fsoc*store_chunk213;
extern gc213*gc_free213;
typedef struct B50 gc50;
struct B50{T50 object;union {int flag;gc50*next;} header;};
extern gc50*store50;
extern int store_left50;
extern fsoc*store_chunk50;
extern gc50*gc_free50;
extern na_env na_env119;
typedef struct B82 gc82;
struct B82{T82 object;union {int flag;gc82*next;} header;};
extern gc82*store82;
extern int store_left82;
extern fsoc*store_chunk82;
extern gc82*gc_free82;
extern na_env na_env155;
extern na_env na_env58;
typedef struct B66 gc66;
struct B66{T66 object;union {int flag;gc66*next;} header;};
extern gc66*store66;
extern int store_left66;
extern fsoc*store_chunk66;
extern gc66*gc_free66;
typedef struct B149 gc149;
struct B149{T149 object;union {int flag;gc149*next;} header;};
extern gc149*store149;
extern int store_left149;
extern fsoc*store_chunk149;
extern gc149*gc_free149;
typedef struct B73 gc73;
struct B73{T73 object;union {int flag;gc73*next;} header;};
extern gc73*store73;
extern int store_left73;
extern fsoc*store_chunk73;
extern gc73*gc_free73;
extern na_env na_env204;
typedef struct B122 gc122;
struct B122{T122 object;union {int flag;gc122*next;} header;};
extern gc122*store122;
extern int store_left122;
extern fsoc*store_chunk122;
extern gc122*gc_free122;
typedef struct B129 gc129;
struct B129{T129 object;union {int flag;gc129*next;} header;};
extern gc129*store129;
extern int store_left129;
extern fsoc*store_chunk129;
extern gc129*gc_free129;
typedef struct B176 gc176;
struct B176{T176 object;union {int flag;gc176*next;} header;};
extern gc176*store176;
extern int store_left176;
extern fsoc*store_chunk176;
extern gc176*gc_free176;
typedef struct B162 gc162;
struct B162{T162 object;union {int flag;gc162*next;} header;};
extern gc162*store162;
extern int store_left162;
extern fsoc*store_chunk162;
extern gc162*gc_free162;
typedef struct B124 gc124;
struct B124{T124 object;union {int flag;gc124*next;} header;};
extern gc124*store124;
extern int store_left124;
extern fsoc*store_chunk124;
extern gc124*gc_free124;
typedef struct B77 gc77;
struct B77{T77 object;union {int flag;gc77*next;} header;};
extern gc77*store77;
extern int store_left77;
extern fsoc*store_chunk77;
extern gc77*gc_free77;
typedef struct B64 gc64;
struct B64{T64 object;union {int flag;gc64*next;} header;};
extern gc64*store64;
extern int store_left64;
extern fsoc*store_chunk64;
extern gc64*gc_free64;
extern na_env na_env100;
extern na_env na_env145;
typedef struct B153 gc153;
struct B153{T153 object;union {int flag;gc153*next;} header;};
extern gc153*store153;
extern int store_left153;
extern fsoc*store_chunk153;
extern gc153*gc_free153;
extern na_env na_env194;
extern na_env na_env187;
extern na_env na_env79;
typedef struct B169 gc169;
struct B169{T169 object;union {int flag;gc169*next;} header;};
extern gc169*store169;
extern int store_left169;
extern fsoc*store_chunk169;
extern gc169*gc_free169;
typedef struct B197 gc197;
struct B197{T197 object;union {int flag;gc197*next;} header;};
extern gc197*store197;
extern int store_left197;
extern fsoc*store_chunk197;
extern gc197*gc_free197;
typedef struct B41 gc41;
struct B41{T41 object;union {int flag;gc41*next;} header;};
extern gc41*store41;
extern int store_left41;
extern fsoc*store_chunk41;
extern gc41*gc_free41;
typedef struct B111 gc111;
struct B111{T111 object;union {int flag;gc111*next;} header;};
extern gc111*store111;
extern int store_left111;
extern fsoc*store_chunk111;
extern gc111*gc_free111;
typedef struct B69 gc69;
struct B69{T69 object;union {int flag;gc69*next;} header;};
extern gc69*store69;
extern int store_left69;
extern fsoc*store_chunk69;
extern gc69*gc_free69;
typedef struct B211 gc211;
struct B211{T211 object;union {int flag;gc211*next;} header;};
extern gc211*store211;
extern int store_left211;
extern fsoc*store_chunk211;
extern gc211*gc_free211;
typedef struct B55 gc55;
struct B55{T55 object;union {int flag;gc55*next;} header;};
extern gc55*store55;
extern int store_left55;
extern fsoc*store_chunk55;
extern gc55*gc_free55;
typedef struct B109 gc109;
struct B109{T109 object;union {int flag;gc109*next;} header;};
extern gc109*store109;
extern int store_left109;
extern fsoc*store_chunk109;
extern gc109*gc_free109;
typedef struct B57 gc57;
struct B57{T57 object;union {int flag;gc57*next;} header;};
extern gc57*store57;
extern int store_left57;
extern fsoc*store_chunk57;
extern gc57*gc_free57;
typedef struct B65 gc65;
struct B65{T65 object;union {int flag;gc65*next;} header;};
extern gc65*store65;
extern int store_left65;
extern fsoc*store_chunk65;
extern gc65*gc_free65;
typedef struct B179 gc179;
struct B179{T179 object;union {int flag;gc179*next;} header;};
extern gc179*store179;
extern int store_left179;
extern fsoc*store_chunk179;
extern gc179*gc_free179;
typedef struct B210 gc210;
struct B210{T210 object;union {int flag;gc210*next;} header;};
extern gc210*store210;
extern int store_left210;
extern fsoc*store_chunk210;
extern gc210*gc_free210;
typedef struct B139 gc139;
struct B139{T139 object;union {int flag;gc139*next;} header;};
extern gc139*store139;
extern int store_left139;
extern fsoc*store_chunk139;
extern gc139*gc_free139;
typedef struct B67 gc67;
struct B67{T67 object;union {int flag;gc67*next;} header;};
extern gc67*store67;
extern int store_left67;
extern fsoc*store_chunk67;
extern gc67*gc_free67;
extern na_env na_env190;
typedef struct B7 gc7;
struct B7{T7 object;union {int flag;gc7*next;} header;};
extern gc7*store7;
extern int store_left7;
extern fsoc*store_chunk7;
extern gc7*gc_free7;
typedef struct B168 gc168;
struct B168{T168 object;union {int flag;gc168*next;} header;};
extern gc168*store168;
extern int store_left168;
extern fsoc*store_chunk168;
extern gc168*gc_free168;
typedef struct B54 gc54;
struct B54{T54 object;union {int flag;gc54*next;} header;};
extern gc54*store54;
extern int store_left54;
extern fsoc*store_chunk54;
extern gc54*gc_free54;
typedef struct B56 gc56;
struct B56{T56 object;union {int flag;gc56*next;} header;};
extern gc56*store56;
extern int store_left56;
extern fsoc*store_chunk56;
extern gc56*gc_free56;
typedef struct B130 gc130;
struct B130{T130 object;union {int flag;gc130*next;} header;};
extern gc130*store130;
extern int store_left130;
extern fsoc*store_chunk130;
extern gc130*gc_free130;
typedef struct B83 gc83;
struct B83{T83 object;union {int flag;gc83*next;} header;};
extern gc83*store83;
extern int store_left83;
extern fsoc*store_chunk83;
extern gc83*gc_free83;
typedef struct B200 gc200;
struct B200{T200 object;union {int flag;gc200*next;} header;};
extern gc200*store200;
extern int store_left200;
extern fsoc*store_chunk200;
extern gc200*gc_free200;
typedef struct B158 gc158;
struct B158{T158 object;union {int flag;gc158*next;} header;};
extern gc158*store158;
extern int store_left158;
extern fsoc*store_chunk158;
extern gc158*gc_free158;
extern na_env na_env9;
typedef struct B201 gc201;
struct B201{T201 object;union {int flag;gc201*next;} header;};
extern gc201*store201;
extern int store_left201;
extern fsoc*store_chunk201;
extern gc201*gc_free201;
typedef struct B209 gc209;
struct B209{T209 object;union {int flag;gc209*next;} header;};
extern gc209*store209;
extern int store_left209;
extern fsoc*store_chunk209;
extern gc209*gc_free209;
typedef struct B95 gc95;
struct B95{T95 object;union {int flag;gc95*next;} header;};
extern gc95*store95;
extern int store_left95;
extern fsoc*store_chunk95;
extern gc95*gc_free95;
typedef struct B45 gc45;
struct B45{T45 object;union {int flag;gc45*next;} header;};
extern gc45*store45;
extern int store_left45;
extern fsoc*store_chunk45;
extern gc45*gc_free45;
typedef struct B78 gc78;
struct B78{T78 object;union {int flag;gc78*next;} header;};
extern gc78*store78;
extern int store_left78;
extern fsoc*store_chunk78;
extern gc78*gc_free78;
extern na_env na_env63;
typedef struct B16 gc16;
struct B16{T16 object;union {int flag;gc16*next;} header;};
extern gc16*store16;
extern int store_left16;
extern fsoc*store_chunk16;
extern gc16*gc_free16;
typedef struct B203 gc203;
struct B203{T203 object;union {int flag;gc203*next;} header;};
extern gc203*store203;
extern int store_left203;
extern fsoc*store_chunk203;
extern gc203*gc_free203;
typedef struct B94 gc94;
struct B94{T94 object;union {int flag;gc94*next;} header;};
extern gc94*store94;
extern int store_left94;
extern fsoc*store_chunk94;
extern gc94*gc_free94;
typedef struct B76 gc76;
struct B76{T76 object;union {int flag;gc76*next;} header;};
extern gc76*store76;
extern int store_left76;
extern fsoc*store_chunk76;
extern gc76*gc_free76;
typedef struct B173 gc173;
struct B173{T173 object;union {int flag;gc173*next;} header;};
extern gc173*store173;
extern int store_left173;
extern fsoc*store_chunk173;
extern gc173*gc_free173;
typedef struct B22 gc22;
struct B22{T22 object;union {int flag;gc22*next;} header;};
extern gc22*store22;
extern int store_left22;
extern fsoc*store_chunk22;
extern gc22*gc_free22;
typedef struct B143 gc143;
struct B143{T143 object;union {int flag;gc143*next;} header;};
extern gc143*store143;
extern int store_left143;
extern fsoc*store_chunk143;
extern gc143*gc_free143;
typedef struct B150 gc150;
struct B150{T150 object;union {int flag;gc150*next;} header;};
extern gc150*store150;
extern int store_left150;
extern fsoc*store_chunk150;
extern gc150*gc_free150;
typedef struct B28 gc28;
struct B28{T28 object;union {int flag;gc28*next;} header;};
extern gc28*store28;
extern int store_left28;
extern fsoc*store_chunk28;
extern gc28*gc_free28;
extern na_env na_env202;
typedef struct B135 gc135;
struct B135{T135 object;union {int flag;gc135*next;} header;};
extern gc135*store135;
extern int store_left135;
extern fsoc*store_chunk135;
extern gc135*gc_free135;
typedef struct B193 gc193;
struct B193{T193 object;union {int flag;gc193*next;} header;};
extern gc193*store193;
extern int store_left193;
extern fsoc*store_chunk193;
extern gc193*gc_free193;
typedef struct B195 gc195;
struct B195{T195 object;union {int flag;gc195*next;} header;};
extern gc195*store195;
extern int store_left195;
extern fsoc*store_chunk195;
extern gc195*gc_free195;
typedef struct B51 gc51;
struct B51{T51 object;union {int flag;gc51*next;} header;};
extern gc51*store51;
extern int store_left51;
extern fsoc*store_chunk51;
extern gc51*gc_free51;
typedef struct B60 gc60;
struct B60{T60 object;union {int flag;gc60*next;} header;};
extern gc60*store60;
extern int store_left60;
extern fsoc*store_chunk60;
extern gc60*gc_free60;
extern na_env na_env46;
typedef struct B206 gc206;
struct B206{T206 object;union {int flag;gc206*next;} header;};
extern gc206*store206;
extern int store_left206;
extern fsoc*store_chunk206;
extern gc206*gc_free206;
extern na_env na_env157;
typedef struct B136 gc136;
struct B136{T136 object;union {int flag;gc136*next;} header;};
extern gc136*store136;
extern int store_left136;
extern fsoc*store_chunk136;
extern gc136*gc_free136;
typedef struct B183 gc183;
struct B183{T183 object;union {int flag;gc183*next;} header;};
extern gc183*store183;
extern int store_left183;
extern fsoc*store_chunk183;
extern gc183*gc_free183;
extern na_env na_env148;
typedef struct B208 gc208;
struct B208{T208 object;union {int flag;gc208*next;} header;};
extern gc208*store208;
extern int store_left208;
extern fsoc*store_chunk208;
extern gc208*gc_free208;
typedef struct B88 gc88;
struct B88{T88 object;union {int flag;gc88*next;} header;};
extern gc88*store88;
extern int store_left88;
extern fsoc*store_chunk88;
extern gc88*gc_free88;
typedef struct B113 gc113;
struct B113{T113 object;union {int flag;gc113*next;} header;};
extern gc113*store113;
extern int store_left113;
extern fsoc*store_chunk113;
extern gc113*gc_free113;
typedef struct B39 gc39;
struct B39{T39 object;union {int flag;gc39*next;} header;};
extern gc39*store39;
extern int store_left39;
extern fsoc*store_chunk39;
extern gc39*gc_free39;
typedef struct B127 gc127;
struct B127{T127 object;union {int flag;gc127*next;} header;};
extern gc127*store127;
extern int store_left127;
extern fsoc*store_chunk127;
extern gc127*gc_free127;
typedef struct B107 gc107;
struct B107{T107 object;union {int flag;gc107*next;} header;};
extern gc107*store107;
extern int store_left107;
extern fsoc*store_chunk107;
extern gc107*gc_free107;
typedef struct B80 gc80;
struct B80{T80 object;union {int flag;gc80*next;} header;};
extern gc80*store80;
extern int store_left80;
extern fsoc*store_chunk80;
extern gc80*gc_free80;
typedef struct B62 gc62;
struct B62{T62 object;union {int flag;gc62*next;} header;};
extern gc62*store62;
extern int store_left62;
extern fsoc*store_chunk62;
extern gc62*gc_free62;
typedef struct B118 gc118;
struct B118{T118 object;union {int flag;gc118*next;} header;};
extern gc118*store118;
extern int store_left118;
extern fsoc*store_chunk118;
extern gc118*gc_free118;
typedef struct B177 gc177;
struct B177{T177 object;union {int flag;gc177*next;} header;};
extern gc177*store177;
extern int store_left177;
extern fsoc*store_chunk177;
extern gc177*gc_free177;
typedef struct B188 gc188;
struct B188{T188 object;union {int flag;gc188*next;} header;};
extern gc188*store188;
extern int store_left188;
extern fsoc*store_chunk188;
extern gc188*gc_free188;
typedef struct B75 gc75;
struct B75{T75 object;union {int flag;gc75*next;} header;};
extern gc75*store75;
extern int store_left75;
extern fsoc*store_chunk75;
extern gc75*gc_free75;
void gc_sweep89(fsoc*c);
void gc_mark89(T89*o);
void gc_align_mark89(fsoc*c,gc89*p);
extern fsoc H89;
T89*new89(void);
void gc_sweep96(fsoc*c);
void gc_mark96(T96*o);
void gc_align_mark96(fsoc*c,gc96*p);
extern fsoc H96;
T96*new96(void);
void gc_sweep167(fsoc*c);
void gc_mark167(T167*o);
void gc_align_mark167(fsoc*c,gc167*p);
extern fsoc H167;
T167*new167(void);
void gc_sweep161(fsoc*c);
void gc_mark161(T161*o);
void gc_align_mark161(fsoc*c,gc161*p);
extern fsoc H161;
T161*new161(void);
void gc_sweep165(fsoc*c);
void gc_mark165(T165*o);
void gc_align_mark165(fsoc*c,gc165*p);
extern fsoc H165;
T165*new165(void);
void gc_mark160(T160 o);
T160 new160(int size);
void gc_sweep218(fsoc*c);
void gc_mark218(T218*o);
void gc_align_mark218(fsoc*c,gc218*p);
extern fsoc H218;
T218*new218(void);
void gc_sweep74(fsoc*c);
void gc_mark74(T74*o);
void gc_align_mark74(fsoc*c,gc74*p);
extern fsoc H74;
T74*new74(void);
void gc_sweep205(fsoc*c);
void gc_mark205(T205*o);
void gc_align_mark205(fsoc*c,gc205*p);
extern fsoc H205;
T205*new205(void);
void gc_sweep184(fsoc*c);
void gc_mark184(T184*o);
void gc_align_mark184(fsoc*c,gc184*p);
extern fsoc H184;
T184*new184(void);
void gc_sweep175(fsoc*c);
void gc_mark175(T175*o);
void gc_align_mark175(fsoc*c,gc175*p);
extern fsoc H175;
T175*new175(void);
void gc_mark152(T152 o);
T152 new152(int size);
void gc_sweep172(fsoc*c);
void gc_mark172(T172*o);
void gc_align_mark172(fsoc*c,gc172*p);
extern fsoc H172;
T172*new172(void);
void gc_sweep189(fsoc*c);
void gc_mark189(T189*o);
void gc_align_mark189(fsoc*c,gc189*p);
extern fsoc H189;
T189*new189(void);
void gc_sweep134(fsoc*c);
void gc_mark134(T134*o);
void gc_align_mark134(fsoc*c,gc134*p);
extern fsoc H134;
T134*new134(void);
void gc_sweep174(fsoc*c);
void gc_mark174(T174*o);
void gc_align_mark174(fsoc*c,gc174*p);
extern fsoc H174;
T174*new174(void);
void gc_sweep146(fsoc*c);
void gc_mark146(T146*o);
void gc_align_mark146(fsoc*c,gc146*p);
extern fsoc H146;
T146*new146(void);
void gc_mark227(T227 o);
T227 new227(int size);
void gc_mark164(T164 o);
T164 new164(int size);
void gc_sweep138(fsoc*c);
void gc_mark138(T138*o);
void gc_align_mark138(fsoc*c,gc138*p);
extern fsoc H138;
T138*new138(void);
void gc_mark142(T142 o);
T142 new142(int size);
void gc_sweep131(fsoc*c);
void gc_mark131(T131*o);
void gc_align_mark131(fsoc*c,gc131*p);
extern fsoc H131;
T131*new131(void);
void gc_sweep114(fsoc*c);
void gc_mark114(T114*o);
void gc_align_mark114(fsoc*c,gc114*p);
extern fsoc H114;
T114*new114(void);
void gc_sweep71(fsoc*c);
void gc_mark71(T71*o);
void gc_align_mark71(fsoc*c,gc71*p);
extern fsoc H71;
T71*new71(void);
void gc_sweep212(fsoc*c);
void gc_mark212(T212*o);
void gc_align_mark212(fsoc*c,gc212*p);
extern fsoc H212;
T212*new212(void);
void gc_sweep171(fsoc*c);
void gc_mark171(T171*o);
void gc_align_mark171(fsoc*c,gc171*p);
extern fsoc H171;
T171*new171(void);
void gc_mark229(T229 o);
T229 new229(int size);
void gc_sweep140(fsoc*c);
void gc_mark140(T140*o);
void gc_align_mark140(fsoc*c,gc140*p);
extern fsoc H140;
T140*new140(void);
void gc_sweep23(fsoc*c);
void gc_mark23(T23*o);
void gc_align_mark23(fsoc*c,gc23*p);
extern fsoc H23;
T23*new23(void);
void gc_sweep43(fsoc*c);
void gc_mark43(T43*o);
void gc_align_mark43(fsoc*c,gc43*p);
extern fsoc H43;
T43*new43(void);
void gc_sweep59(fsoc*c);
void gc_mark59(T59*o);
void gc_align_mark59(fsoc*c,gc59*p);
extern fsoc H59;
T59*new59(void);
void gc_sweep61(fsoc*c);
void gc_mark61(T61*o);
void gc_align_mark61(fsoc*c,gc61*p);
extern fsoc H61;
T61*new61(void);
void gc_sweep125(fsoc*c);
void gc_mark125(T125*o);
void gc_align_mark125(fsoc*c,gc125*p);
extern fsoc H125;
T125*new125(void);
void gc_sweep163(fsoc*c);
void gc_mark163(T163*o);
void gc_align_mark163(fsoc*c,gc163*p);
extern fsoc H163;
T163*new163(void);
void gc_sweep178(fsoc*c);
void gc_mark178(T178*o);
void gc_align_mark178(fsoc*c,gc178*p);
extern fsoc H178;
T178*new178(void);
void gc_sweep99(fsoc*c);
void gc_mark99(T99*o);
void gc_align_mark99(fsoc*c,gc99*p);
extern fsoc H99;
T99*new99(void);
void gc_sweep81(fsoc*c);
void gc_mark81(T81*o);
void gc_align_mark81(fsoc*c,gc81*p);
extern fsoc H81;
T81*new81(void);
void gc_sweep137(fsoc*c);
void gc_mark137(T137*o);
void gc_align_mark137(fsoc*c,gc137*p);
extern fsoc H137;
T137*new137(void);
void gc_sweep93(fsoc*c);
void gc_mark93(T93*o);
void gc_align_mark93(fsoc*c,gc93*p);
extern fsoc H93;
T93*new93(void);
void gc_sweep170(fsoc*c);
void gc_mark170(T170*o);
void gc_align_mark170(fsoc*c,gc170*p);
extern fsoc H170;
T170*new170(void);
void gc_sweep180(fsoc*c);
void gc_mark180(T180*o);
void gc_align_mark180(fsoc*c,gc180*p);
extern fsoc H180;
T180*new180(void);
void gc_sweep166(fsoc*c);
void gc_mark166(T166*o);
void gc_align_mark166(fsoc*c,gc166*p);
extern fsoc H166;
T166*new166(void);
void gc_sweep48(fsoc*c);
void gc_mark48(T48*o);
void gc_align_mark48(fsoc*c,gc48*p);
extern fsoc H48;
T48*new48(void);
void gc_sweep185(fsoc*c);
void gc_mark185(T185*o);
void gc_align_mark185(fsoc*c,gc185*p);
extern fsoc H185;
T185*new185(void);
void gc_sweep72(fsoc*c);
void gc_mark72(T72*o);
void gc_align_mark72(fsoc*c,gc72*p);
extern fsoc H72;
T72*new72(void);
void gc_mark182(T182 o);
T182 new182(int size);
void gc_sweep213(fsoc*c);
void gc_mark213(T213*o);
void gc_align_mark213(fsoc*c,gc213*p);
extern fsoc H213;
T213*new213(void);
void gc_sweep50(fsoc*c);
void gc_mark50(T50*o);
void gc_align_mark50(fsoc*c,gc50*p);
extern fsoc H50;
T50*new50(void);
void gc_mark119(T119 o);
T119 new119(int size);
void gc_sweep82(fsoc*c);
void gc_mark82(T82*o);
void gc_align_mark82(fsoc*c,gc82*p);
extern fsoc H82;
T82*new82(void);
void gc_mark155(T155 o);
T155 new155(int size);
void gc_mark58(T58 o);
T58 new58(int size);
void gc_sweep66(fsoc*c);
void gc_mark66(T66*o);
void gc_align_mark66(fsoc*c,gc66*p);
extern fsoc H66;
T66*new66(void);
void gc_sweep149(fsoc*c);
void gc_mark149(T149*o);
void gc_align_mark149(fsoc*c,gc149*p);
extern fsoc H149;
T149*new149(void);
void gc_sweep73(fsoc*c);
void gc_mark73(T73*o);
void gc_align_mark73(fsoc*c,gc73*p);
extern fsoc H73;
T73*new73(void);
void gc_mark204(T204 o);
T204 new204(int size);
void gc_sweep122(fsoc*c);
void gc_mark122(T122*o);
void gc_align_mark122(fsoc*c,gc122*p);
extern fsoc H122;
T122*new122(void);
void gc_sweep129(fsoc*c);
void gc_mark129(T129*o);
void gc_align_mark129(fsoc*c,gc129*p);
extern fsoc H129;
T129*new129(void);
void gc_sweep176(fsoc*c);
void gc_mark176(T176*o);
void gc_align_mark176(fsoc*c,gc176*p);
extern fsoc H176;
T176*new176(void);
void gc_sweep162(fsoc*c);
void gc_mark162(T162*o);
void gc_align_mark162(fsoc*c,gc162*p);
extern fsoc H162;
T162*new162(void);
void gc_sweep124(fsoc*c);
void gc_mark124(T124*o);
void gc_align_mark124(fsoc*c,gc124*p);
extern fsoc H124;
T124*new124(void);
void gc_sweep77(fsoc*c);
void gc_mark77(T77*o);
void gc_align_mark77(fsoc*c,gc77*p);
extern fsoc H77;
T77*new77(void);
void gc_sweep64(fsoc*c);
void gc_mark64(T64*o);
void gc_align_mark64(fsoc*c,gc64*p);
extern fsoc H64;
T64*new64(void);
void gc_mark100(T100 o);
T100 new100(int size);
void gc_mark145(T145 o);
T145 new145(int size);
void gc_sweep153(fsoc*c);
void gc_mark153(T153*o);
void gc_align_mark153(fsoc*c,gc153*p);
extern fsoc H153;
T153*new153(void);
void gc_mark194(T194 o);
T194 new194(int size);
void gc_mark187(T187 o);
T187 new187(int size);
void gc_mark79(T79 o);
T79 new79(int size);
void gc_sweep169(fsoc*c);
void gc_mark169(T169*o);
void gc_align_mark169(fsoc*c,gc169*p);
extern fsoc H169;
T169*new169(void);
void gc_sweep197(fsoc*c);
void gc_mark197(T197*o);
void gc_align_mark197(fsoc*c,gc197*p);
extern fsoc H197;
T197*new197(void);
void gc_sweep41(fsoc*c);
void gc_mark41(T41*o);
void gc_align_mark41(fsoc*c,gc41*p);
extern fsoc H41;
T41*new41(void);
void gc_sweep111(fsoc*c);
void gc_mark111(T111*o);
void gc_align_mark111(fsoc*c,gc111*p);
extern fsoc H111;
T111*new111(void);
void gc_sweep69(fsoc*c);
void gc_mark69(T69*o);
void gc_align_mark69(fsoc*c,gc69*p);
extern fsoc H69;
T69*new69(void);
void gc_sweep211(fsoc*c);
void gc_mark211(T211*o);
void gc_align_mark211(fsoc*c,gc211*p);
extern fsoc H211;
T211*new211(void);
void gc_sweep55(fsoc*c);
void gc_mark55(T55*o);
void gc_align_mark55(fsoc*c,gc55*p);
extern fsoc H55;
T55*new55(void);
void gc_sweep109(fsoc*c);
void gc_mark109(T109*o);
void gc_align_mark109(fsoc*c,gc109*p);
extern fsoc H109;
T109*new109(void);
void gc_sweep57(fsoc*c);
void gc_mark57(T57*o);
void gc_align_mark57(fsoc*c,gc57*p);
extern fsoc H57;
T57*new57(void);
void gc_sweep65(fsoc*c);
void gc_mark65(T65*o);
void gc_align_mark65(fsoc*c,gc65*p);
extern fsoc H65;
T65*new65(void);
void gc_sweep179(fsoc*c);
void gc_mark179(T179*o);
void gc_align_mark179(fsoc*c,gc179*p);
extern fsoc H179;
T179*new179(void);
void gc_sweep210(fsoc*c);
void gc_mark210(T210*o);
void gc_align_mark210(fsoc*c,gc210*p);
extern fsoc H210;
T210*new210(void);
void gc_sweep139(fsoc*c);
void gc_mark139(T139*o);
void gc_align_mark139(fsoc*c,gc139*p);
extern fsoc H139;
T139*new139(void);
void gc_sweep67(fsoc*c);
void gc_mark67(T67*o);
void gc_align_mark67(fsoc*c,gc67*p);
extern fsoc H67;
T67*new67(void);
void gc_mark190(T190 o);
T190 new190(int size);
void gc_sweep7(fsoc*c);
void gc_mark7(T7*o);
void gc_align_mark7(fsoc*c,gc7*p);
extern fsoc H7;
T7*new7(void);
void gc_sweep168(fsoc*c);
void gc_mark168(T168*o);
void gc_align_mark168(fsoc*c,gc168*p);
extern fsoc H168;
T168*new168(void);
void gc_sweep54(fsoc*c);
void gc_mark54(T54*o);
void gc_align_mark54(fsoc*c,gc54*p);
extern fsoc H54;
T54*new54(void);
void gc_sweep56(fsoc*c);
void gc_mark56(T56*o);
void gc_align_mark56(fsoc*c,gc56*p);
extern fsoc H56;
T56*new56(void);
void gc_sweep130(fsoc*c);
void gc_mark130(T130*o);
void gc_align_mark130(fsoc*c,gc130*p);
extern fsoc H130;
T130*new130(void);
void gc_sweep83(fsoc*c);
void gc_mark83(T83*o);
void gc_align_mark83(fsoc*c,gc83*p);
extern fsoc H83;
T83*new83(void);
void gc_sweep200(fsoc*c);
void gc_mark200(T200*o);
void gc_align_mark200(fsoc*c,gc200*p);
extern fsoc H200;
T200*new200(void);
void gc_sweep158(fsoc*c);
void gc_mark158(T158*o);
void gc_align_mark158(fsoc*c,gc158*p);
extern fsoc H158;
T158*new158(void);
void gc_mark9(T9 o);
T9 new9(int size);
void gc_sweep201(fsoc*c);
void gc_mark201(T201*o);
void gc_align_mark201(fsoc*c,gc201*p);
extern fsoc H201;
T201*new201(void);
void gc_sweep209(fsoc*c);
void gc_mark209(T209*o);
void gc_align_mark209(fsoc*c,gc209*p);
extern fsoc H209;
T209*new209(void);
void gc_sweep95(fsoc*c);
void gc_mark95(T95*o);
void gc_align_mark95(fsoc*c,gc95*p);
extern fsoc H95;
T95*new95(void);
void gc_sweep45(fsoc*c);
void gc_mark45(T45*o);
void gc_align_mark45(fsoc*c,gc45*p);
extern fsoc H45;
T45*new45(void);
void gc_sweep78(fsoc*c);
void gc_mark78(T78*o);
void gc_align_mark78(fsoc*c,gc78*p);
extern fsoc H78;
T78*new78(void);
void gc_mark63(T63 o);
T63 new63(int size);
void gc_sweep16(fsoc*c);
void gc_mark16(T16*o);
void gc_align_mark16(fsoc*c,gc16*p);
extern fsoc H16;
T16*new16(void);
void gc_sweep203(fsoc*c);
void gc_mark203(T203*o);
void gc_align_mark203(fsoc*c,gc203*p);
extern fsoc H203;
T203*new203(void);
void gc_sweep94(fsoc*c);
void gc_mark94(T94*o);
void gc_align_mark94(fsoc*c,gc94*p);
extern fsoc H94;
T94*new94(void);
void gc_sweep76(fsoc*c);
void gc_mark76(T76*o);
void gc_align_mark76(fsoc*c,gc76*p);
extern fsoc H76;
T76*new76(void);
void gc_sweep173(fsoc*c);
void gc_mark173(T173*o);
void gc_align_mark173(fsoc*c,gc173*p);
extern fsoc H173;
T173*new173(void);
void gc_sweep22(fsoc*c);
void gc_mark22(T22*o);
void gc_align_mark22(fsoc*c,gc22*p);
extern fsoc H22;
T22*new22(void);
void gc_sweep143(fsoc*c);
void gc_mark143(T143*o);
void gc_align_mark143(fsoc*c,gc143*p);
extern fsoc H143;
T143*new143(void);
void gc_sweep150(fsoc*c);
void gc_mark150(T150*o);
void gc_align_mark150(fsoc*c,gc150*p);
extern fsoc H150;
T150*new150(void);
void gc_sweep28(fsoc*c);
void gc_mark28(T28*o);
void gc_align_mark28(fsoc*c,gc28*p);
extern fsoc H28;
T28*new28(void);
void gc_mark202(T202 o);
T202 new202(int size);
void gc_sweep135(fsoc*c);
void gc_mark135(T135*o);
void gc_align_mark135(fsoc*c,gc135*p);
extern fsoc H135;
T135*new135(void);
void gc_sweep193(fsoc*c);
void gc_mark193(T193*o);
void gc_align_mark193(fsoc*c,gc193*p);
extern fsoc H193;
T193*new193(void);
void gc_sweep195(fsoc*c);
void gc_mark195(T195*o);
void gc_align_mark195(fsoc*c,gc195*p);
extern fsoc H195;
T195*new195(void);
void gc_sweep51(fsoc*c);
void gc_mark51(T51*o);
void gc_align_mark51(fsoc*c,gc51*p);
extern fsoc H51;
T51*new51(void);
void gc_sweep60(fsoc*c);
void gc_mark60(T60*o);
void gc_align_mark60(fsoc*c,gc60*p);
extern fsoc H60;
T60*new60(void);
void gc_mark46(T46 o);
T46 new46(int size);
void gc_sweep206(fsoc*c);
void gc_mark206(T206*o);
void gc_align_mark206(fsoc*c,gc206*p);
extern fsoc H206;
T206*new206(void);
void gc_mark157(T157 o);
T157 new157(int size);
void gc_sweep136(fsoc*c);
void gc_mark136(T136*o);
void gc_align_mark136(fsoc*c,gc136*p);
extern fsoc H136;
T136*new136(void);
void gc_sweep183(fsoc*c);
void gc_mark183(T183*o);
void gc_align_mark183(fsoc*c,gc183*p);
extern fsoc H183;
T183*new183(void);
void gc_mark148(T148 o);
T148 new148(int size);
void gc_sweep208(fsoc*c);
void gc_mark208(T208*o);
void gc_align_mark208(fsoc*c,gc208*p);
extern fsoc H208;
T208*new208(void);
void gc_sweep88(fsoc*c);
void gc_mark88(T88*o);
void gc_align_mark88(fsoc*c,gc88*p);
extern fsoc H88;
T88*new88(void);
void gc_sweep113(fsoc*c);
void gc_mark113(T113*o);
void gc_align_mark113(fsoc*c,gc113*p);
extern fsoc H113;
T113*new113(void);
void gc_sweep39(fsoc*c);
void gc_mark39(T39*o);
void gc_align_mark39(fsoc*c,gc39*p);
extern fsoc H39;
T39*new39(void);
void gc_sweep127(fsoc*c);
void gc_mark127(T127*o);
void gc_align_mark127(fsoc*c,gc127*p);
extern fsoc H127;
T127*new127(void);
void gc_sweep107(fsoc*c);
void gc_mark107(T107*o);
void gc_align_mark107(fsoc*c,gc107*p);
extern fsoc H107;
T107*new107(void);
void gc_sweep80(fsoc*c);
void gc_mark80(T80*o);
void gc_align_mark80(fsoc*c,gc80*p);
extern fsoc H80;
T80*new80(void);
void gc_sweep62(fsoc*c);
void gc_mark62(T62*o);
void gc_align_mark62(fsoc*c,gc62*p);
extern fsoc H62;
T62*new62(void);
void gc_sweep118(fsoc*c);
void gc_mark118(T118*o);
void gc_align_mark118(fsoc*c,gc118*p);
extern fsoc H118;
T118*new118(void);
void gc_sweep177(fsoc*c);
void gc_mark177(T177*o);
void gc_align_mark177(fsoc*c,gc177*p);
extern fsoc H177;
T177*new177(void);
void gc_sweep188(fsoc*c);
void gc_mark188(T188*o);
void gc_align_mark188(fsoc*c,gc188*p);
extern fsoc H188;
T188*new188(void);
void gc_sweep75(fsoc*c);
void gc_mark75(T75*o);
void gc_align_mark75(fsoc*c,gc75*p);
extern fsoc H75;
T75*new75(void);
void Xgc_mark27(T0*o);
void Xgc_mark199(T0*o);
void Xgc_mark112(T0*o);
void Xgc_mark30(T0*o);
void Xgc_mark133(T0*o);
void Xgc_mark226(T0*o);
void Xgc_mark118(T0*o);
void*se_ma195(int argc,...);
void*se_ma146(int argc,...);
T2 X133track_parm_count(T0*C);
void X133convert_patterns(T0*C,T0* a1,T0* a2);
T2 X133global_parm_count(T0*C);
T0* X133bliss_id(T0*C);
T2 X112key(T0*C,T2 a1);
T2 X225count(T0*C);
T2 X225upper(T0*C);
T0* X225item(T0*C,T2 a1);
T2 X225lower(T0*C);
T5 X199next_sample(T0*C);
T0* X10twin(T0*C);
void X98next(T0*C);
T2 X98item(T0*C);
T6 X98is_off(T0*C);
void X98start(T0*C);
void X27handle_event(T0*C,T0* a1);
void X27update(T0*C);
T2 X224count(T0*C);
T2 X224upper(T0*C);
T0* X224item(T0*C,T2 a1);
T2 X224lower(T0*C);
void X118put(T0*C,T5 a1,T2 a2);
T5 X118item(T0*C,T2 a1);
T5 X118_px_64(T0*C,T2 a1);
T2 X103count(T0*C);
T2 X103upper(T0*C);
T2 X103item(T0*C,T2 a1);
T2 X103lower(T0*C);
void X103swap(T0*C,T2 a1,T2 a2);
T0* X226next(T0*C);
T2 X226key(T0*C);
T0* X30new_pattern_autoname(T0*C);
T0* X30id(T0*C);
T0* X30new_pattern(T0*C,T0* a1);
void X30boom(T0*C);
T0* X30make_instance(T0*C,T0* a1);
void X30process_command(T0*C,T0* a1);
T6 X30is_source(T0*C);
void X30init(T0*C);
void X30init_connection_lists(T0*C);
void X30init_pattern_table(T0*C);
T6 X30is_sink(T0*C);
void X30compute_next_frame(T0*C);
void X30put_name(T0*C,T0* a1);
void X30init_picture(T0*C);
T0* T2toT23(T2 source);

#ifdef __cplusplus
}
#endif
