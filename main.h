#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.75 (July 16th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S84 T84;
typedef struct S95 T95;
typedef struct S132 T132;
typedef struct S196 T196;
typedef struct S73 T73;
typedef struct S171 T171;
typedef struct S162 T162;
typedef struct S146 T146;
typedef struct S176 T176;
typedef struct S131 T131;
typedef struct S158 T158;
typedef struct S143 T143;
typedef struct S160 T160;
typedef struct S135 T135;
typedef struct S128 T128;
typedef struct S113 T113;
typedef struct S68 T68;
typedef struct S17 T17;
typedef struct S206 T206;
typedef struct S137 T137;
typedef struct S27 T27;
typedef struct S45 T45;
typedef struct S60 T60;
typedef int T49;
typedef struct S62 T62;
typedef struct S121 T121;
typedef struct S165 T165;
typedef struct S98 T98;
typedef struct S80 T80;
typedef struct S134 T134;
typedef struct S92 T92;
typedef struct S167 T167;
typedef struct S50 T50;
typedef struct S172 T172;
typedef struct S70 T70;
typedef struct S133 T133;
typedef struct S207 T207;
typedef struct S51 T51;
typedef struct S81 T81;
typedef struct S58 T58;
typedef struct S67 T67;
typedef struct S72 T72;
typedef struct S188 T188;
typedef struct S187 T187;
typedef struct S126 T126;
typedef struct S163 T163;
typedef struct S159 T159;
typedef struct S120 T120;
typedef struct S76 T76;
typedef struct S65 T65;
typedef int T101;
typedef struct S136 T136;
typedef struct S150 T150;
typedef struct S7 T7;
typedef struct S77 T77;
typedef struct S184 T184;
typedef struct S43 T43;
typedef struct S110 T110;
typedef struct S205 T205;
typedef struct S56 T56;
typedef struct S108 T108;
typedef struct S66 T66;
typedef struct S166 T166;
typedef struct S204 T204;
typedef struct S170 T170;
typedef struct S55 T55;
typedef struct S57 T57;
typedef struct S127 T127;
typedef struct S82 T82;
typedef struct S194 T194;
typedef struct S155 T155;
typedef struct S198 T198;
typedef struct S203 T203;
typedef struct S94 T94;
typedef struct S47 T47;
typedef struct S63 T63;
typedef struct S93 T93;
typedef struct S75 T75;
typedef struct S23 T23;
typedef struct S140 T140;
typedef struct S147 T147;
typedef struct S190 T190;
typedef struct S33 T33;
typedef struct S180 T180;
typedef struct S182 T182;
typedef struct S52 T52;
typedef struct S61 T61;
typedef struct S200 T200;
typedef struct S202 T202;
typedef struct S91 T91;
typedef struct S112 T112;
typedef struct S41 T41;
typedef struct S123 T123;
typedef struct S106 T106;
typedef struct S79 T79;
typedef struct S117 T117;
typedef struct S164 T164;
typedef struct S218 T218;
typedef struct S175 T175;
typedef struct S74 T74;

/*C Header Pass 2 :*/
typedef T0**T157;
typedef T0**T149;
typedef T0**T217;
typedef T0**T161;
typedef T0**T139;
typedef T0**T221;
typedef T0**T169;
typedef T5*T118;
typedef T0**T152;
typedef T0**T59;
typedef T0**T189;
typedef T0**T99;
typedef T0**T142;
typedef T0**T181;
typedef T0**T174;
typedef T0**T78;
typedef T0**T177;
typedef T3*T9;
typedef T0**T64;
typedef T0**T199;
typedef T0**T48;
typedef T0**T154;
typedef T2*T145;
typedef T0**T223;

/*C Header Pass 3 :*/
extern T101 M101;

/*C Header Pass 4 :*/
struct S84{Tid id;T6 _push_back_flag;T2 _memory;};
extern T84 M84;
struct S95{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T2 _originc;T2 _originr;T2 _cursorr;T2 _cursorc;T2 _maxr;T2 _maxc;};
extern T95 M95;
struct S196{Tid id;T0* _dictionary;T2 _item_index;};
extern T196 M196;
struct S73{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T6 _fade_in;T6 _fade_out;T2 _ttl;T2 _x;T2 _freq;T5 _vol;T0* _wave_table;};
extern T73 M73;
struct S171{Tid id;T0* _name;T2 _offset;T2 _size;};
extern T171 M171;
struct S162{Tid id;};
extern T162 M162;
struct S176{Tid id;T0* _item;T2 _key;T0* _next;};
extern T176 M176;
struct S131{Tid id;T154 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T131 M131;
struct S158{Tid id;};
extern T158 M158;
struct S143{Tid id;T145 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T143 M143;
struct S135{Tid id;T2 _length;T5 _root_freq;T0* _data;};
extern T135 M135;
struct S128{Tid id;};
extern T128 M128;
struct S113{Tid id;T0* _linked_list;T0* _current_link;};
extern T113 M113;
struct S68{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T189 _track_array;T2 _track;};
extern T68 M68;
struct S17{Tid id;T0* _pattern_window;T0* _machine_window;T0* _song_window;T0* _import_buzz_window;T0* _modal;T0* _vis_snap;T0* _vis;T2 _vis_upper;T2 _vis_i;T0* _last_event;T0* _current_window;};
extern T17 M17;
struct S206{Tid id;T5 _t;T5 _t_max;T0* _sr;T5 _current_value;};
extern T206 M206;
struct S137{Tid id;T139 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T137 M137;
struct S27{Tid id;T2 _item;};
extern T27 M27;
struct S45{Tid id;T48 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T45 M45;
struct S60{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T60 M60;
extern T49 M49;
struct S62{Tid id;T64 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T62 M62;
struct S121{Tid id;T0* _item;T0* _next;};
extern T121 M121;
struct S160{Tid id;T0* _item;T0* _key;T0* _next;};
extern T160 M160;
struct S165{Tid id;};
extern T165 M165;
struct S98{Tid id;T0* _item;T2 _key;T0* _next;};
extern T98 M98;
struct S80{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T80 M80;
struct S134{Tid id;T0* _name;T2 _type;T0* _dll;T4 _y;T4 _x;T2 _attr_count;T2 _sequence_count;T0* _pattern;T2 _pattern_count;T2 _global_parm_size;T2 _track_parm_size;T2 _in_count;};
extern T134 M134;
struct S92{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T0* _manager;T0* _filename;};
extern T92 M92;
struct S167{Tid id;T169 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T167 M167;
struct S50{Tid id;T6 _is_connected;T8 _ptr;};
extern T50 M50;
struct S172{Tid id;T174 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T172 M172;
struct S70{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;};
extern T70 M70;
struct S207{Tid id;T2 _seed;T0* _iv;T2 _iy;};
extern T207 M207;
struct S51{Tid id;T2 _to_integer;T2 _to_gfx_integer;T8 _pointer;};
extern T51 M51;
struct S81{Tid id;T0* _item;T0* _next;};
extern T81 M81;
struct S67{Tid id;T0* _item;T0* _next;};
extern T67 M67;
struct S146{Tid id;T0* _name;T0* _global_data;T0* _data;T2 _row_count;T2 _track_count;};
extern T146 M146;
struct S72{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;};
extern T72 M72;
struct S187{Tid id;T0* _linked_list;T0* _current_link;};
extern T187 M187;
struct S126{Tid id;T2 _loop_end;T2 _loop_begin;T2 _song_end;T0* _dir;T0* _dir_table;T2 _dir_count;T0* _wavetable;T2 _wave_count;T0* _machine;T2 _machine_count;T0* _connection;T2 _connection_count;T0* _sequence;T2 _sequence_count;};
extern T126 M126;
struct S163{Tid id;};
extern T163 M163;
struct S159{Tid id;T161 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T159 M159;
struct S120{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T120 M120;
struct S76{Tid id;T78 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T76 M76;
struct S65{Tid id;T0* _dst;T0* _src;T2 _y;T2 _x;};
extern T65 M65;
struct S150{Tid id;T152 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T150 M150;
struct S184{Tid id;T9 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T184 M184;
struct S43{Tid id;T0* _item;T0* _next;};
extern T43 M43;
struct S110{Tid id;T0* _dictionary;T2 _item_index;};
extern T110 M110;
struct S205{Tid id;T5 _x1;T5 _x0;T5 _diff;T2 _original_sign;T5 _t;};
extern T205 M205;
struct S56{Tid id;T59 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T56 M56;
struct S108{Tid id;T2 _item;T0* _next;};
extern T108 M108;
struct S58{Tid id;T0* _item;T2 _key;T0* _next;};
extern T58 M58;
struct S66{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T66 M66;
struct S166{Tid id;};
extern T166 M166;
struct S204{Tid id;T0* _input;T0* _modulator;};
extern T204 M204;
struct S136{Tid id;T2 _index;T5 _volume;T0* _filename;T0* _name;T0* _level_table;T2 _level_count;};
extern T136 M136;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S170{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T170 M170;
struct S55{Tid id;T0* _table;int _sorter;};
extern T55 M55;
struct S57{Tid id;T99 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T57 M57;
struct S127{Tid id;T0* _in;T0* _buzz;T2 _offset;T0* _last_string;T2 _last_integer;T4 _last_real;};
extern T127 M127;
struct S82{Tid id;T0* _os;T2 _tabs;};
extern T82 M82;
struct S194{Tid id;T199 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T194 M194;
struct S155{Tid id;T157 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T155 M155;
struct S198{Tid id;T0* _item;T0* _key;T0* _next;};
extern T198 M198;
struct S203{Tid id;T0* _input1;T0* _input2;};
extern T203 M203;
struct S94{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T6 _connecting_flag;T6 _moving_flag;T0* _selection;T2 _movestartx;T2 _movestarty;};
extern T94 M94;
struct S47{Tid id;T0* _item;T0* _key;T0* _next;};
extern T47 M47;
struct S77{Tid id;T0* _item;T2 _key;T0* _next;};
extern T77 M77;
struct S188{Tid id;T5 _d_cache;T5 _vol;T2 _freq;T0* _wave;T2 _wave_index;T2 _wave_length;T2 _modulus;T6 _playing;T2 _x;T5 _volslide;};
extern T188 M188;
struct S93{Tid id;T2 _offsetx;T2 _offsety;T2 _width;T2 _height;T2 _originc;T2 _originr;T2 _cursorr;T2 _cursorc;T2 _maxr;T2 _maxc;T0* _machine;T0* _pattern;};
extern T93 M93;
struct S75{Tid id;T5 _root_freq;T5 _volume;T2 _length;T0* _data;T0* _name;};
extern T75 M75;
struct S23{Tid id;T2 _y;T2 _x;T0* _desc;T2 _i2;T2 _i1;T2 _kmod;};
extern T23 M23;
struct S140{Tid id;T142 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T140 M140;
struct S147{Tid id;T149 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T147 M147;
struct S190{Tid id;T0* _linked_list;T0* _current_link;};
extern T190 M190;
struct S33{Tid id;T0* _master;T6 _play_flag;T0* _machine_table;T0* _machine_list;T0* _machine_zorder;T0* _connection_list;T0* _tracks;T0* _wave_table;T2 _beat_count;T2 _end_beat;T2 _loop_begin;T2 _loop_end;T2 _bpm;T2 _tpb;T2 _sample_mod_tick;T2 _sample_count;T2 _samples_per_tick;};
extern T33 M33;
struct S132{Tid id;T2 _machine_index;T0* _eventpos;T0* _event;T2 _event_count;};
extern T132 M132;
struct S180{Tid id;T2 _upper2;T2 _upper1;T2 _lower2;T2 _lower1;T181 _storage;T2 _capacity;};
extern T180 M180;
struct S182{Tid id;T181 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T182 M182;
struct S52{Tid id;T0* _name;T0* _commands;T0* _machine;};
extern T52 M52;
struct S61{Tid id;T0* _item;T0* _next;};
extern T61 M61;
struct S200{Tid id;};
extern T200 M200;
struct S133{Tid id;T2 _src;T2 _dst;T2 _amp;T2 _pan;};
extern T133 M133;
struct S202{Tid id;T5 _t;T5 _freq;T0* _periodicf;};
extern T202 M202;
struct S91{Tid id;T0* _linked_list;T0* _current_link;};
extern T91 M91;
struct S112{Tid id;T0* _linked_list;T0* _current_link;};
extern T112 M112;
struct S41{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T41 M41;
struct S123{Tid id;T0* _linked_list;T0* _current_link;};
extern T123 M123;
struct S106{Tid id;T2 _upper;T0* _first_link;T0* _last_link;T2 _mem_idx;T0* _mem_lnk;};
extern T106 M106;
struct S79{Tid id;T0* _machine;T0* _commands;T0* _playing_pattern;T2 _offset;};
extern T79 M79;
struct S63{Tid id;T0* _item;T0* _key;T0* _next;};
extern T63 M63;
struct S117{Tid id;T118 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T117 M117;
struct S164{Tid id;};
extern T164 M164;
struct S218{Tid id;T0* _dictionary;T2 _item_index;};
extern T218 M218;
struct S175{Tid id;T177 _buckets;T2 _capacity;T2 _count;T2 _cache_user;T0* _cache_node;T2 _cache_buckets;};
extern T175 M175;
struct S74{Tid id;T0* _name;T0* _in_connection;T0* _pattern_table;T0* _pattern_list;T0* _setup_pattern;T2 _posy;T2 _posx;T2 _width;T2 _height;T0* _image;T2 _ttl;T0* _drum_table;};
extern T74 M74;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
#define FSOC_SIZE 8192
#define RSOC_SIZE 32768
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/* 
   This file (SmallEiffel/sys/runtime/gc_lib.h) is automatically included 
   when the Garbage Collector is used (default, unless option -no_gc has 
   been selected).
*/
#define SE_GC_LIB 1

#define RSOH_UNMARKED 15253     
#define RSOH_FREE 1
#define RSOH_MARKED 2


#define FSOH_UNMARKED 1
#define FSOH_MARKED 2

/* To codify the state and the type of some Memory Chunk, we are 
   using the following definitions :
*/
#define FSO_FREE_CHUNK  (-2)
#define RSO_FREE_CHUNK  (-1)
#define RSO_USED_CHUNK  ( 0)
#define FSO_STORE_CHUNK ( 1)
#define FSO_USED_CHUNK  ( 2)
#define FREE_CHUNK(x) ((x)<0)

/* Minimum size for a store area in a ReSizable Objects Chunk :
 */
#define RSOC_MIN_STORE 512

/* The default channel used to print -gc_info flag information :
*/
#define SE_GCINFO SE_ERR

typedef struct s_mch mch; /* Memory Chunk Header. */
typedef struct s_fsoc fsoc; /* Fixed Size Objects Chunk. */
typedef union u_rsoh rsoh; /* ReSizable Object Header. */
typedef struct s_fll_rsoh fll_rsoh; 
typedef struct s_rsoc rsoc; /* ReSizable Objects Chunk. */
typedef struct s_na_env na_env; /* Native Array ENVironment. */


struct s_mch{ 
  unsigned int size; /* In number of bytes (actual argument of malloc).*/
  int state_type; /* One value in : RSO_USED_CHUNK, 
                     FREE_CHUNK, FSO_STORE_CHUNK, FSO_USED_CHUNK */
  void(*amfp)(mch*,void*); /* Align Mark Function Pointer. */
  void(*swfp)(mch*); /* SWeep Function Pointer. */
};

struct s_fsoc{
  mch header; /* Common header for fsoc and rsoc. */
  fsoc* next; /* The next one when in free list (fsocfl). */
  int count_minus_one;
  double first_object;
};

typedef struct _rso_header rso_header;

struct _rso_header{
    int size;
    int magic_flag;     /* RSOH_MARKED when used,
			   RSOH_FREE when free,
			   else RSOH_UNMARKED */
};

union u_rsoh{
  rso_header header;             
  double padding; 
  };

struct s_fll_rsoh {
  rso_header rsoh_field;
  fll_rsoh* nextflol;
};

struct s_rsoc{
  mch header; /* Common header for fsoc and rsoc. */
  int isize; /* Initial size (at malloc time) to detect splitted chunks. */
  rsoc* next; /* The next one when in free list (rsocfl). */
  fll_rsoh*free_list_of_large; /* Intra. free list. */ 
  na_env*nae; 
  rsoh first_header;
};

struct s_na_env{
  int store_left;
  rsoh* store;
  rsoc*store_chunk;
  rsoc*chunk_list;
  void (*gc_mark)(T0*);
};

extern void**stack_bottom;
extern mch**gcmt; 
extern int gcmt_max;
extern int gcmt_used;
extern int gc_is_off;
extern fsoc* fsocfl;
extern unsigned int fsoc_count;
extern unsigned int rsoc_count;
extern void*gcmt_tail_addr;

void gc_sweep(void);
void gc_mark(void*p);
int gc_stack_size(void);
int garbage_delayed(void);
void gc_update_ceils(void);
char*new_na(na_env*nae,int size);
int fsocfl_count(void);
int rsocfl_count(void);
void gc_dispose_before_exit(void);
void mark_stack_and_registers (void);
fsoc* gc_fsoc_get1(void);
fsoc* gc_fsoc_get2(void);
extern unsigned int fsoc_count_ceil;
extern unsigned int rsoc_count_ceil;
extern unsigned int gc_start_count;
extern T0*oBC8string_buffer;
T2 r8hash_code(T8 C);
T6 r6_ix_not(T6 C);
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_hexadecimal_digit(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3hexadecimal_value(T3 C);
T6 r2is_equal(T2 C,T2 a1);
T0* r2to_string(T2 C);
extern T0*oBC2tmp_string;
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
T3 r2hexadecimal_digit(T2 C);
T2 r5sign(T5 C);
T0* r5to_string(T5 C);
T5 r5double_ceiling(T5 C);
T2 r5rounded(T5 C);
extern T9 oBC5sprintf_double_buffer;
extern int fBC5sprintf_double_buffer;
T9 r5sprintf_double_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
T5 r4pow(T4 C,T5 a1);
T0* r4to_string(T4 C);
T2 r4rounded(T4 C);
void r157set_all_with(T157 C,T0* a1,T2 a2);
void r157copy_from(T157 C,T157 a1,T2 a2);
void r149set_all_with(T149 C,T0* a1,T2 a2);
void r149copy_from(T149 C,T149 a1,T2 a2);
void r161set_all_with(T161 C,T0* a1,T2 a2);
void r139set_all_with(T139 C,T0* a1,T2 a2);
void r139copy_from(T139 C,T139 a1,T2 a2);
void r169set_all_with(T169 C,T0* a1,T2 a2);
void r169copy_from(T169 C,T169 a1,T2 a2);
void r118set_all_with(T118 C,T5 a1,T2 a2);
void r118copy_from(T118 C,T118 a1,T2 a2);
void r152set_all_with(T152 C,T0* a1,T2 a2);
void r152copy_from(T152 C,T152 a1,T2 a2);
void r59set_all_with(T59 C,T0* a1,T2 a2);
void r99set_all_with(T99 C,T0* a1,T2 a2);
void r142set_all_with(T142 C,T0* a1,T2 a2);
void r142copy_from(T142 C,T142 a1,T2 a2);
void r181clear_all(T181 C,T2 a1);
void r181set_all_with(T181 C,T0* a1,T2 a2);
void r181copy_from(T181 C,T181 a1,T2 a2);
void r174set_all_with(T174 C,T0* a1,T2 a2);
void r174copy_from(T174 C,T174 a1,T2 a2);
void r78set_all_with(T78 C,T0* a1,T2 a2);
void r177set_all_with(T177 C,T0* a1,T2 a2);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r64set_all_with(T64 C,T0* a1,T2 a2);
void r199set_all_with(T199 C,T0* a1,T2 a2);
void r48set_all_with(T48 C,T0* a1,T2 a2);
void r154set_all_with(T154 C,T0* a1,T2 a2);
void r154copy_from(T154 C,T154 a1,T2 a2);
void r145set_all_with(T145 C,T2 a1,T2 a2);
void r145copy_from(T145 C,T145 a1,T2 a2);
void r7copy(T7* C,T0* a1);
T6 r7is_equal(T7* C,T0* a1);
void r7append(T7* C,T0* a1);
void r7make(T7* C,T2 a1);
void r7extend(T7* C,T3 a1);
T0* r7_px_43(T7* C,T0* a1);
T2 r7hash_code(T7* C);
void r7remove_last(T7* C,T2 a1);
void r7append_character(T7* C,T3 a1);
void r7add_last(T7* C,T3 a1);
void r7from_external_copy(T7* C,T8 a1);
void r7from_external(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r131copy(T131* C,T0* a1);
T2 r131count(T131* C);
T0* r131item(T131* C,T2 a1);
void r131make(T131* C,T2 a1,T2 a2);
T0* r131twin(T131* C);
void r143copy(T143* C,T0* a1);
T2 r143count(T143* C);
T2 r143item(T143* C,T2 a1);
void r143make(T143* C,T2 a1,T2 a2);
T2 r143_px_64(T143* C,T2 a1);
T0* r143twin(T143* C);
void r143swap(T143* C,T2 a1,T2 a2);
void r137copy(T137* C,T0* a1);
void r137make(T137* C,T2 a1,T2 a2);
T0* r137_px_64(T137* C,T2 a1);
T0* r137twin(T137* C);
void r167copy(T167* C,T0* a1);
T0* r167item(T167* C,T2 a1);
void r167make(T167* C,T2 a1,T2 a2);
T0* r167_px_64(T167* C,T2 a1);
T0* r167twin(T167* C);
void r172copy(T172* C,T0* a1);
void r172make(T172* C,T2 a1,T2 a2);
T0* r172_px_64(T172* C,T2 a1);
T0* r172twin(T172* C);
void r150copy(T150* C,T0* a1);
T0* r150item(T150* C,T2 a1);
void r150make(T150* C,T2 a1,T2 a2);
T0* r150_px_64(T150* C,T2 a1);
T0* r150twin(T150* C);
void r184copy(T184* C,T0* a1);
T3 r184item(T184* C,T2 a1);
void r184make(T184* C,T2 a1,T2 a2);
T0* r184twin(T184* C);
void r155copy(T155* C,T0* a1);
T0* r155item(T155* C,T2 a1);
void r155make(T155* C,T2 a1,T2 a2);
T0* r155twin(T155* C);
void r140copy(T140* C,T0* a1);
T0* r140item(T140* C,T2 a1);
void r140make(T140* C,T2 a1,T2 a2);
T0* r140twin(T140* C);
void r147copy(T147* C,T0* a1);
T0* r147item(T147* C,T2 a1);
void r147make(T147* C,T2 a1,T2 a2);
T0* r147twin(T147* C);
void r182copy(T182* C,T0* a1);
T2 r182count(T182* C);
T0* r182item(T182* C,T2 a1);
void r182make(T182* C,T2 a1,T2 a2);
T0* r182_px_64(T182* C,T2 a1);
T0* r182twin(T182* C);
void r117copy(T117* C,T0* a1);
void r117clear_all(T117* C);
T5 r117item(T117* C,T2 a1);
void r117make(T117* C,T2 a1,T2 a2);
T5 r117_px_64(T117* C,T2 a1);
T0* r117twin(T117* C);
void r196next(T196* C);
T0* r196item(T196* C);
void r196make(T196* C,T0* a1);
T6 r196is_off(T196* C);
T0* r196twin(T196* C);
void r176make(T176* C,T0* a1,T2 a2,T0* a3);
T0* r176twin(T176* C);
void r113next(T113* C);
void r113make(T113* C,T0* a1);
void r113start(T113* C);
T0* r113twin(T113* C);
void r45copy(T45* C,T0* a1);
T0* r45key(T45* C,T2 a1);
T0* r45at(T45* C,T0* a1);
void r45put(T45* C,T0* a1,T0* a2);
T0* r45item(T45* C,T2 a1);
void r45set_cache_user(T45* C,T2 a1);
T0* r45get_new_iterator_on_items(T45* C);
void r45remove(T45* C,T0* a1);
void r45increase_capacity(T45* C);
T6 r45has(T45* C,T0* a1);
void r45clear(T45* C);
T0* r45twin(T45* C);
void r45with_capacity(T45* C,T2 a1);
void r60copy(T60* C,T0* a1);
T0* r60item(T60* C,T2 a1);
void r60make(T60* C);
T0* r60_px_64(T60* C,T2 a1);
void r60add_last(T60* C,T0* a1);
void r60clear(T60* C);
T2 r60fast_index_of(T60* C,T0* a1);
T0* r60twin(T60* C);
void r60go_item(T60* C,T2 a1);
void r60from_collection(T60* C,T0* a1);
void r62copy(T62* C,T0* a1);
T0* r62key(T62* C,T2 a1);
T0* r62at(T62* C,T0* a1);
void r62put(T62* C,T0* a1,T0* a2);
T0* r62item(T62* C,T2 a1);
void r62set_cache_user(T62* C,T2 a1);
void r62increase_capacity(T62* C);
T6 r62has(T62* C,T0* a1);
void r62clear(T62* C);
T0* r62twin(T62* C);
void r62with_capacity(T62* C,T2 a1);
void r121make(T121* C,T0* a1,T0* a2);
T0* r121twin(T121* C);
void r160make(T160* C,T0* a1,T0* a2,T0* a3);
T0* r160twin(T160* C);
void r98make(T98* C,T0* a1,T2 a2,T0* a3);
T0* r98twin(T98* C);
void r80copy(T80* C,T0* a1);
T0* r80item(T80* C,T2 a1);
void r80make(T80* C);
T0* r80get_new_iterator(T80* C);
T0* r80_px_64(T80* C,T2 a1);
void r80add_last(T80* C,T0* a1);
void r80clear(T80* C);
T0* r80twin(T80* C);
void r80go_item(T80* C,T2 a1);
void r80from_collection(T80* C,T0* a1);
void r81make(T81* C,T0* a1,T0* a2);
T0* r81twin(T81* C);
void r67make(T67* C,T0* a1,T0* a2);
T0* r67twin(T67* C);
void r187next(T187* C);
void r187make(T187* C,T0* a1);
void r187start(T187* C);
T0* r187twin(T187* C);
void r159copy(T159* C,T0* a1);
T0* r159key(T159* C,T2 a1);
T0* r159at(T159* C,T0* a1);
void r159put(T159* C,T0* a1,T0* a2);
T0* r159item(T159* C,T2 a1);
void r159set_cache_user(T159* C,T2 a1);
void r159increase_capacity(T159* C);
T6 r159has(T159* C,T0* a1);
void r159clear(T159* C);
T0* r159twin(T159* C);
void r159with_capacity(T159* C,T2 a1);
void r120copy(T120* C,T0* a1);
T0* r120item(T120* C,T2 a1);
void r120make(T120* C);
T0* r120get_new_iterator(T120* C);
void r120add_last(T120* C,T0* a1);
void r120clear(T120* C);
T0* r120twin(T120* C);
void r120go_item(T120* C,T2 a1);
void r120from_collection(T120* C,T0* a1);
void r76copy(T76* C,T0* a1);
T2 r76key(T76* C,T2 a1);
T0* r76at(T76* C,T2 a1);
void r76put(T76* C,T0* a1,T2 a2);
T0* r76item(T76* C,T2 a1);
void r76set_cache_user(T76* C,T2 a1);
void r76increase_capacity(T76* C);
void r76clear(T76* C);
T0* r76twin(T76* C);
void r76with_capacity(T76* C,T2 a1);
void r101quick_sort_region(T0* a1,T2 a2,T2 a3);
void r101sort(T0* a1);
T6 r101is_sorted(T0* a1);
void r43make(T43* C,T0* a1,T0* a2);
T0* r43twin(T43* C);
void r110next(T110* C);
T2 r110item(T110* C);
void r110make(T110* C,T0* a1);
T6 r110is_off(T110* C);
T0* r110twin(T110* C);
void r56copy(T56* C,T0* a1);
T0* r56get_new_iterator_on_keys(T56* C);
T2 r56key(T56* C,T2 a1);
T0* r56at(T56* C,T2 a1);
void r56put(T56* C,T0* a1,T2 a2);
T0* r56item(T56* C,T2 a1);
void r56set_cache_user(T56* C,T2 a1);
void r56remove(T56* C,T2 a1);
void r56increase_capacity(T56* C);
T6 r56has(T56* C,T2 a1);
void r56clear(T56* C);
T0* r56twin(T56* C);
void r56with_capacity(T56* C,T2 a1);
void r108make(T108* C,T2 a1,T0* a2);
T0* r108twin(T108* C);
void r58make(T58* C,T0* a1,T2 a2,T0* a3);
T0* r58twin(T58* C);
void r66copy(T66* C,T0* a1);
void r66remove_first(T66* C);
T0* r66item(T66* C,T2 a1);
void r66make(T66* C);
void r66remove(T66* C,T2 a1);
T0* r66get_new_iterator(T66* C);
void r66remove_last(T66* C);
void r66add_last(T66* C,T0* a1);
void r66clear(T66* C);
T2 r66fast_index_of(T66* C,T0* a1);
T0* r66twin(T66* C);
void r66go_item(T66* C,T2 a1);
void r66from_collection(T66* C,T0* a1);
T0* r55at(T55* C,T2 a1,T2 a2);
void r55put(T55* C,T0* a1,T2 a2,T2 a3);
void r55make(T55* C);
void r55remove(T55* C,T2 a1,T2 a2);
T6 r55has_row(T55* C,T2 a1);
T0* r55get_row(T55* C,T2 a1);
T6 r55has(T55* C,T2 a1,T2 a2);
T0* r55get_sorted_row_list(T55* C);
T0* r55get_sorted_col_list(T55* C,T2 a1);
T0* r55twin(T55* C);
void r57copy(T57* C,T0* a1);
T0* r57get_new_iterator_on_keys(T57* C);
T2 r57key(T57* C,T2 a1);
T0* r57at(T57* C,T2 a1);
void r57put(T57* C,T0* a1,T2 a2);
T0* r57item(T57* C,T2 a1);
void r57set_cache_user(T57* C,T2 a1);
void r57remove(T57* C,T2 a1);
void r57increase_capacity(T57* C);
T6 r57has(T57* C,T2 a1);
void r57clear(T57* C);
T0* r57twin(T57* C);
void r57with_capacity(T57* C,T2 a1);
void r194copy(T194* C,T0* a1);
T0* r194key(T194* C,T2 a1);
void r194put(T194* C,T0* a1,T0* a2);
T0* r194item(T194* C,T2 a1);
void r194set_cache_user(T194* C,T2 a1);
void r194make(T194* C);
T0* r194get_new_iterator_on_items(T194* C);
void r194remove(T194* C,T0* a1);
void r194increase_capacity(T194* C);
void r194clear(T194* C);
T0* r194twin(T194* C);
void r194with_capacity(T194* C,T2 a1);
void r198make(T198* C,T0* a1,T0* a2,T0* a3);
T0* r198twin(T198* C);
void r47make(T47* C,T0* a1,T0* a2,T0* a3);
T0* r47twin(T47* C);
void r77make(T77* C,T0* a1,T2 a2,T0* a3);
T0* r77twin(T77* C);
void r190next(T190* C);
T0* r190item(T190* C);
void r190make(T190* C,T0* a1);
void r190start(T190* C);
T0* r190twin(T190* C);
void r180copy(T180* C,T0* a1);
T2 r180count(T180* C);
T0* r180item(T180* C,T2 a1,T2 a2);
void r180make(T180* C,T2 a1,T2 a2,T2 a3,T2 a4);
T2 r180count1(T180* C);
T2 r180count2(T180* C);
T0* r180twin(T180* C);
void r61make(T61* C,T0* a1,T0* a2);
T0* r61twin(T61* C);
void r91next(T91* C);
void r91make(T91* C,T0* a1);
void r91start(T91* C);
T0* r91twin(T91* C);
void r112next(T112* C);
void r112make(T112* C,T0* a1);
void r112start(T112* C);
T0* r112twin(T112* C);
void r41copy(T41* C,T0* a1);
void r41remove_first(T41* C);
T0* r41item(T41* C,T2 a1);
void r41make(T41* C);
void r41remove(T41* C,T2 a1);
T0* r41get_new_iterator(T41* C);
void r41remove_last(T41* C);
T0* r41_px_64(T41* C,T2 a1);
void r41add_last(T41* C,T0* a1);
void r41clear(T41* C);
T2 r41fast_index_of(T41* C,T0* a1);
T0* r41twin(T41* C);
void r41go_item(T41* C,T2 a1);
void r41from_collection(T41* C,T0* a1);
void r123next(T123* C);
void r123make(T123* C,T0* a1);
void r123start(T123* C);
T0* r123twin(T123* C);
void r106copy(T106* C,T0* a1);
void r106put(T106* C,T2 a1,T2 a2);
T2 r106item(T106* C,T2 a1);
void r106make(T106* C);
T0* r106get_new_iterator(T106* C);
void r106add_last(T106* C,T2 a1);
void r106clear(T106* C);
T0* r106twin(T106* C);
void r106go_item(T106* C,T2 a1);
void r106from_collection(T106* C,T0* a1);
void r106swap(T106* C,T2 a1,T2 a2);
void r63make(T63* C,T0* a1,T0* a2,T0* a3);
T0* r63twin(T63* C);
void r218next(T218* C);
T0* r218item(T218* C);
void r218make(T218* C,T0* a1);
T6 r218is_off(T218* C);
T0* r218twin(T218* C);
void r175copy(T175* C,T0* a1);
T2 r175key(T175* C,T2 a1);
T0* r175at(T175* C,T2 a1);
void r175put(T175* C,T0* a1,T2 a2);
T0* r175item(T175* C,T2 a1);
void r175set_cache_user(T175* C,T2 a1);
void r175increase_capacity(T175* C);
T6 r175has(T175* C,T2 a1);
void r175clear(T175* C);
T0* r175twin(T175* C);
void r175with_capacity(T175* C,T2 a1);
extern T0*oBC83tmp_string;
void r84read_character(T84* C);
T6 r84end_of_input(T84* C);
void r84put_integer(T84* C,T2 a1);
T0* r84twin(T84* C);
void r84put_string(T84* C,T0* a1);
T6 r95legal_col(T2 a1);
extern T0*oBC18blue;
extern int fBC18blue;
T0* r95blue(void);
void r95handle_event(T95* C,T0* a1);
void r95process_key(T95* C,T0* a1);
/*external*/T6 int_and(T2 a1,T2 a2);
extern T0*oBC20song;
extern int fBC20song;
T0* r95song(void);
extern T0*oBC1io;
void r95write(T95* C,T2 a1,T2 a2,T0* a3);
void r95move_cursor_up(T95* C,T2 a1);
void r95draw_song(T95* C);
void r95make(T95* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*external*/void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*external*/void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r95put_geometry(T95* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r95process_event(T95* C,T0* a1);
T0* r95twin(T95* C);
extern T0*oBC18white;
extern int fBC18white;
T0* r95white(void);
void r95process_edit_key(T95* C,T2 a1);
void r95move_cursor_down(T95* C,T2 a1);
T2 r95abs_row(T95* C,T2 a1);
void r95process_buttondown(T0* a1);
T0* r73new_pattern_autoname(T73* C);
T0* r73blue(void);
T2 r73fade_time(void);
void r73move_to(T73* C,T2 a1,T2 a2);
T5 r73next_sample(T73* C);
T0* r73song(void);
T2 r73centerx(T73* C);
T2 r73centery(T73* C);
T0* r73new_pattern(T73* C,T0* a1);
T0* r73clone(T0* a1);
T0* r73make_instance(T73* C,T0* a1);
void r73put_length(T73* C,T2 a1);
void r73play_freq(T73* C,T5 a1);
T6 r73is_note(T0* a1,T2 a2);
extern T0*oBC73saw_table;
extern int fBC73saw_table;
T0* r73saw_table(void);
void r73process_command(T73* C,T0* a1);
void r73init_connection_lists(T73* C);
extern T0*oBC36note_rank_array;
extern int fBC36note_rank_array;
T0* r73note_rank_array(void);
void r73init_pattern_table(T73* C);
T0* r73next_pattern(T73* C,T0* a1);
extern T0*oBC73fade_table;
extern int fBC73fade_table;
T0* r73fade_table(void);
T0* r73twin(T73* C);
extern T0*oBC36note_freq_table;
extern int fBC36note_freq_table;
T0* r73note_freq_table(void);
void r73put_freq(T73* C,T5 a1);
T0* r73white(void);
T2 r73note_to_rank(T0* a1,T2 a2);
void r73put_name(T73* C,T0* a1);
void r73init_picture(T73* C);
extern T2 oBC73modulus;
extern int fBC73modulus;
T2 r73modulus(void);
void r171make(T171* C,T0* a1,T2 a2,T2 a3);
T0* r171twin(T171* C);
T0* r162twin(T162* C);
T0* r158twin(T158* C);
void r135init_data(T135* C,T2 a1);
T0* r135twin(T135* C);
extern T0*oBC129conv_table;
extern int fBC129conv_table;
T0* r128conv_table(void);
void r128convert_waves(T0* a1,T0* a2);
void r128convert(T0* a1,T0* a2);
T0* r128twin(T128* C);
T0* r68new_pattern_autoname(T68* C);
T0* r68blue(void);
void r68move_to(T68* C,T2 a1,T2 a2);
T5 r68next_sample(T68* C);
void r68put_track(T68* C,T2 a1);
T2 r68centerx(T68* C);
T2 r68centery(T68* C);
T0* r68new_pattern(T68* C,T0* a1);
T0* r68clone(T0* a1);
T0* r68make_instance(T68* C,T0* a1);
T6 r68is_note(T0* a1,T2 a2);
void r68process_command(T68* C,T0* a1);
void r68init(T68* C);
void r68init_connection_lists(T68* C);
T0* r68note_rank_array(void);
void r68init_pattern_table(T68* C);
T0* r68next_pattern(T68* C,T0* a1);
T0* r68twin(T68* C);
T0* r68note_freq_table(void);
T0* r68white(void);
T2 r68note_to_rank(T0* a1,T2 a2);
void r68put_name(T68* C,T0* a1);
void r68init_picture(T68* C);
T5 r206next_sample(T206* C);
void r206next_value(T206* C);
void r206make(T206* C);
T0* r206twin(T206* C);
void r206put_freq(T206* C,T5 a1);
void r206next_t(T206* C);
T0* r165twin(T165* C);
T0* r134conv_table(void);
void r134put_type(T134* C,T2 a1);
void r134put_dll(T134* C,T0* a1);
void r134put_pattern_count(T134* C,T2 a1);
void r134make(T134* C,T0* a1);
void r134put_xy(T134* C,T4 a1,T4 a2);
void r134increment_in_count(T134* C);
T0* r134twin(T134* C);
void r92handle_event(T92* C,T0* a1);
void r92process_key(T92* C,T0* a1);
/*external*/T6 int_and(T2 a1,T2 a2);
void r92import_buzz_file(T92* C);
T0* r92song(void);
void r92text_remove_last(T92* C);
void r92write(T92* C,T2 a1,T2 a2,T0* a3);
void r92make(T92* C,T0* a1);
/*external*/void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r92put_geometry(T92* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r92process_event(T92* C,T0* a1);
T0* r92twin(T92* C);
T0* r92white(void);
void r92update(T92* C);
extern T0*oBC18black;
extern int fBC18black;
T0* r92black(void);
/*external*/T8 free_img(T8 a1);
/*external*/T2 get_img_height(T8 a1);
void r50draw_text(T50* C,T2 a1,T2 a2,T0* a3);
void r50render_string(T50* C,T0* a1);
/*external*/void ext_box(T8 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
void r50rotozoom(T50* C,T0* a1,T5 a2,T5 a3);
/*external*/T2 get_img_width(T8 a1);
/*external*/T8 draw_arrow_kludge(void);
void r50new(T50* C,T2 a1,T2 a2);
/*external*/T8 rotozoomSurface(T8 a1,T5 a2,T5 a3,T2 a4);
/*external*/T8 ext_new_surface(T2 a1,T2 a2);
void r50new_arrow(T50* C);
/*external*/void ext_blit_img_to(T8 a1,T8 a2,T2 a3,T2 a4);
T2 r50height(T50* C);
/*external*/void ext_blit_img(T8 a1,T2 a2,T2 a3);
T0* r50twin(T50* C);
/*external*/T8 render_text(T8 a1);
T2 r50width(T50* C);
void r50free(T50* C);
T0* r70new_pattern_autoname(T70* C);
void r70move_to(T70* C,T2 a1,T2 a2);
T5 r70next_sample(T70* C);
T2 r70centerx(T70* C);
T2 r70centery(T70* C);
T0* r70new_pattern(T70* C,T0* a1);
T0* r70clone(T0* a1);
T0* r70make_instance(T70* C,T0* a1);
void r70init_connection_lists(T70* C);
extern T0*oBC18green;
extern int fBC18green;
T0* r70green(void);
void r70init_pattern_table(T70* C);
T0* r70next_pattern(T70* C,T0* a1);
T0* r70twin(T70* C);
T0* r70white(void);
void r70put_name(T70* C,T0* a1);
void r70init_picture(T70* C);
void r207next(T207* C);
T4 r207last_real(T207* C);
void r207with_seed(T207* C,T2 a1);
void r207make(T207* C);
T5 r207last_double(T207* C);
void r207min_next(T207* C);
T0* r207twin(T207* C);
/*external*/T8 ext_make_color(T2 a1,T2 a2,T2 a3);
/*external*/T2 ext_convert_color(T2 a1,T2 a2,T2 a3);
void r51make(T51* C,T2 a1,T2 a2,T2 a3);
T0* r51twin(T51* C);
void r146put_row_count(T146* C,T2 a1);
void r146put_global_data(T146* C,T0* a1,T2 a2);
void r146make(T146* C,T0* a1,T2 a2);
void r146put_data(T146* C,T0* a1,T2 a2,T2 a3);
T0* r146twin(T146* C);
T0* r72new_pattern_autoname(T72* C);
void r72move_to(T72* C,T2 a1,T2 a2);
T5 r72next_sample(T72* C);
T2 r72centerx(T72* C);
T2 r72centery(T72* C);
T0* r72new_pattern(T72* C,T0* a1);
T0* r72clone(T0* a1);
T0* r72make_instance(T72* C,T0* a1);
void r72init_connection_lists(T72* C);
void r72init_pattern_table(T72* C);
T0* r72next_pattern(T72* C,T0* a1);
T0* r72twin(T72* C);
T0* r72white(void);
extern T0*oBC18red;
extern int fBC18red;
T0* r72red(void);
void r72put_name(T72* C,T0* a1);
void r72init_picture(T72* C);
void r126put_dir_count(T126* C,T2 a1);
void r126put_entry(T126* C,T0* a1,T2 a2);
void r126dump(T126* C);
void r126put_sequence_count(T126* C,T2 a1);
void r126put_wave_count(T126* C,T2 a1);
void r126put_connection_count(T126* C,T2 a1);
T0* r126twin(T126* C);
void r126put_connection(T126* C,T0* a1,T2 a2);
void r126put_machine_count(T126* C,T2 a1);
void r126put_song_info(T126* C,T2 a1,T2 a2,T2 a3);
extern T0*oBC130hex255table;
extern int fBC130hex255table;
T0* r163hex255table(void);
T0* r163to_note(T3 a1);
void r163convert_patterns(T0* a1,T0* a2);
extern T0*oBC36scale_array;
T0* r163twin(T163* C);
T5 r65next_sample(T65* C);
void r65make(T65* C,T0* a1,T0* a2);
void r65put_xy(T65* C,T2 a1,T2 a2);
T0* r65twin(T65* C);
T5 r205next_sample(T205* C);
void r205make(T205* C,T5 a1,T5 a2);
T0* r205twin(T205* C);
T0* r166hex255table(void);
T0* r166to_note(T3 a1);
void r166convert_patterns(T0* a1,T0* a2);
T0* r166twin(T166* C);
T5 r204next_sample(T204* C);
T0* r204twin(T204* C);
void r136put_filename(T136* C,T0* a1);
void r136put_level_count(T136* C,T2 a1);
T0* r136twin(T136* C);
void r136put_name(T136* C,T0* a1);
void r170disconnect(T170* C);
void r170read_character(T170* C);
T6 r170end_of_input(T170* C);
void r170connect_to(T170* C,T0* a1);
T0* r170twin(T170* C);
void r127get_char(T127* C);
void r127parse_wavetable_section(T127* C);
void r127read_asciiz(T127* C);
void r127parse_machine_section(T127* C);
void r127parse_wavedata_section(T127* C);
T0* r127load(T127* C,T0* a1);
void r127parse_pattern_section(T127* C);
void r127read_float(T127* C);
void r127read_dword(T127* C);
void r127read_byte(T127* C);
T5 r127buzz_note_to_freq(T3 a1);
void r127make(T127* C);
void r127parse_header(T127* C);
void r127parse_pattern_data(T127* C,T0* a1,T0* a2);
void r127read_bytes(T127* C,T2 a1);
void r127read_word(T127* C);
void r127read_string(T127* C,T2 a1);
T0* r127parse_machine(T127* C);
void r127parse_sequence_section(T127* C);
T3 r127last_char(T127* C);
void r127parse(T127* C);
T0* r127twin(T127* C);
T0* r127note_freq_table(void);
/*external*/T4 ext_int_to_float(T2 a1);
void r127parse_connection_section(T127* C);
void r82put_machine_pos(T82* C,T2 a1,T2 a2);
void r82end_machine(T82* C);
void r82start_machine(T82* C,T0* a1);
void r82start_zorder(T82* C);
void r82put_line(T82* C,T0* a1);
T0* r82twin(T82* C);
void r82end_zorder(T82* C);
T5 r203next_sample(T203* C);
void r203make(T203* C,T0* a1,T0* a2);
T0* r203twin(T203* C);
void r94handle_event(T94* C,T0* a1);
void r94process_buttonup(T94* C,T0* a1);
void r94select_machine_for_move(T94* C,T2 a1,T2 a2);
void r94process_key(T94* C,T2 a1);
void r94select_machine_for_connect(T94* C,T2 a1,T2 a2);
/*external*/T6 int_and(T2 a1,T2 a2);
T2 r94last_mouse_y(T94* C);
T2 r94last_mouse_x(T94* C);
T0* r94song(void);
void r94attempt_connect(T0* a1,T0* a2);
T2 r94select_machine(T2 a1,T2 a2);
void r94connect_selection(T94* C,T2 a1,T2 a2);
void r94draw_connection(T94* C,T0* a1);
/*external*/T2 get_last_mouse_x(void);
/*external*/T2 get_last_mouse_y(void);
/*external*/void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r94clipped_move(T94* C,T0* a1,T2 a2,T2 a3);
void r94place_selection(T94* C,T2 a1,T2 a2);
/*external*/void ext_get_mouse_state(void);
T0* r94green(void);
void r94put_geometry(T94* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r94process_event(T94* C,T0* a1);
T0* r94twin(T94* C);
T0* r94white(void);
extern T0*oBC94arrow_image;
extern int fBC94arrow_image;
T0* r94arrow_image(void);
void r94select_edge(T2 a1,T2 a2);
/*external*/void ext_filledcirclecolor(T2 a1,T2 a2,T2 a3,T2 a4);
void r94update(T94* C);
void r94process_buttondown(T94* C,T0* a1);
void r188put_wave_index(T188* C,T2 a1);
void r188volslidedown(T188* C,T2 a1);
T5 r188next_sample(T188* C);
T0* r188song(void);
void r188play_freq(T188* C,T5 a1);
T0* r188twin(T188* C);
void r93process_text_edit_key(T93* C,T2 a1);
T0* r93blue(void);
void r93handle_event(T93* C,T0* a1);
void r93process_key(T93* C,T0* a1);
/*external*/T6 int_and(T2 a1,T2 a2);
void r93draw_spreadsheet(T93* C);
T0* r93song(void);
void r93text_remove_last(T93* C);
void r93write(T93* C,T2 a1,T2 a2,T0* a3);
void r93put_machine(T93* C,T0* a1);
void r93move_cursor_up(T93* C,T2 a1);
void r93text_append(T93* C,T3 a1);
void r93make(T93* C,T2 a1,T2 a2,T2 a3,T2 a4);
/*external*/void ext_aalinecolor(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*external*/void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
void r93put_geometry(T93* C,T2 a1,T2 a2,T2 a3,T2 a4);
void r93process_event(T93* C,T0* a1);
T0* r93twin(T93* C);
T0* r93white(void);
void r93process_edit_key(T93* C,T2 a1);
void r93move_cursor_down(T93* C,T2 a1);
void r93update(T93* C);
T5 r75get_data_double(T75* C,T2 a1);
T0* r75twin(T75* C);
void r75put_name(T75* C,T0* a1);
/*external*/T2 export_current_kmod(void);
/*external*/T2 export_current_i2(void);
/*external*/T2 export_current_i1(void);
/*external*/T8 export_current_desc(void);
/*external*/T2 export_current_x(void);
/*external*/T2 export_current_y(void);
T0* r23twin(T23* C);
void r23desc_from_external(T23* C,T8 a1);
void r23update(T23* C);
T0* r33next_machine(T33* C,T0* a1);
T0* r33at(T33* C,T2 a1,T2 a2);
extern T0*oBC34machine_class_table;
extern int fBC34machine_class_table;
T0* r33machine_class_table(void);
void r33move_to(T0* a1,T2 a2,T2 a3);
T5 r33next_sample(T33* C);
T0* r33new_machine_autoname(T33* C,T0* a1);
void r33boom(T33* C);
void r33jump_to(T33* C,T2 a1);
void r33make(T33* C);
void r33calculate_samples_per_tick(T33* C);
void r33import_buzz(T33* C,T0* a1);
T6 r33has(T33* C,T2 a1,T2 a2);
T0* r33add_machine(T33* C,T0* a1,T0* a2);
void r33save(T33* C,T0* a1);
void r33setup_machines(T33* C);
void r33put_bpm_tpb(T33* C,T2 a1,T2 a2);
T0* r33get_playing_rows(T33* C,T0* a1);
T0* r33twin(T33* C);
void r33increment_sample_count(T33* C);
void r33connect(T33* C,T0* a1,T0* a2);
void r33delete_edge(T33* C,T0* a1);
T0* r33new_machine(T33* C,T0* a1,T0* a2);
void r33rewind(T33* C);
void r33add_track(T33* C,T0* a1);
void r132put_event_count(T132* C,T2 a1);
T0* r132twin(T132* C);
void r52boom(T52* C,T2 a1);
void r52make(T52* C,T0* a1,T0* a2);
void r52instant_execute(T52* C);
T0* r52twin(T52* C);
void r52put_name(T52* C,T0* a1);
T5 r200evaluate(T5 a1);
T0* r200twin(T200* C);
void r133make(T133* C,T2 a1,T2 a2,T2 a3,T2 a4);
T0* r133twin(T133* C);
T5 r202next_sample(T202* C);
/*external*/T5 fast_next(T5 a1,T5 a2);
T0* r202twin(T202* C);
void r202next_t(T202* C);
void r79boom(T79* C,T2 a1);
void r79make(T79* C,T0* a1);
void r79process_command(T79* C,T0* a1);
T0* r79twin(T79* C);
void r79rewind(T79* C);
T0* r164twin(T164* C);
T0* r74new_pattern_autoname(T74* C);
T0* r74blue(void);
void r74move_to(T74* C,T2 a1,T2 a2);
T5 r74next_sample(T74* C);
T2 r74centerx(T74* C);
T2 r74centery(T74* C);
T0* r74new_pattern(T74* C,T0* a1);
void r74boom(T74* C);
T0* r74clone(T0* a1);
T0* r74make_instance(T74* C,T0* a1);
void r74play_freq(T74* C,T5 a1);
void r74snare_drum(T74* C);
T6 r74is_note(T0* a1,T2 a2);
void r74process_command(T74* C,T0* a1);
void r74kick_drum(T74* C);
void r74init(T74* C);
void r74init_connection_lists(T74* C);
T0* r74note_rank_array(void);
void r74init_pattern_table(T74* C);
T0* r74next_pattern(T74* C,T0* a1);
T0* r74twin(T74* C);
T0* r74note_freq_table(void);
T0* r74white(void);
T2 r74note_to_rank(T0* a1,T2 a2);
void r74put_name(T74* C,T0* a1);
void r74init_picture(T74* C);
T6 r17poll_event(T17* C);
void r17main_loop(T17* C);
/*external*/T6 int_and(T2 a1,T2 a2);
T0* r17song(void);
void r17draw_screen(T17* C);
void r17load_buzz_dialog(T17* C);
void r17end_program(T17* C);
void r17make(T17* C);
/*external*/void SDL_UnlockAudio(void);
void r17vis_draw(T17* C);
/*external*/void init(void);
/*external*/T6 ext_poll_event(void);
void r17buffer_audio(T17* C);
extern T0*oBC17test_saver;
extern int fBC17test_saver;
T0* r17test_saver(void);
/*external*/void ext_fill_rect(T2 a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*external*/void ext_update_screen(void);
/*external*/void SDL_LockAudio(void);
T0* r17twin(T17* C);
T0* r17white(void);
/*external*/T6 buffer_ready(void);
void r17process_last_event(T17* C);
/*external*/void SDL_PauseAudio(T2 a1);
/*external*/void ext_pixelcolor(T2 a1,T2 a2,T2 a3);
/*external*/void next_frame(T5 a1,T5 a2);
T0* r17black(void);
T0* r27twin(T27* C);
T2 r49prime_number_ceiling(T2 a1);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 224
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms126_39610347;
extern T7*ms92_58545095;
extern T7*ms127_1849750926;
extern T7*ms36_70;
extern T7*ms36_65;
extern T7*ms36_71;
extern T7*ms36_66;
extern T7*ms36_67;
extern T7*ms36_68;
extern T7*ms36_69;
extern T7*ms134_1812835366;
extern T7*ms127_10aaaaaaa;
extern T7*ms82_420719;
extern T7*ms74_17651a;
extern T7*ms126_10;
extern T7*ms163_690;
extern T7*ms127_10;
extern T7*ms72_319144;
extern T7*ms128_10;
extern T7*ms95_248415980;
extern T7*ms134_10;
extern T7*ms93_41083572;
extern T7*ms127_1137;
extern T7*ms127_248893247;
extern T7*ms36_360;
extern T7*ms36_370;
extern T7*ms36_375;
extern T7*ms36_385;
extern T7*ms36_390;
extern T7*ms127_10aa;
extern T7*ms74_16602;
extern T7*ms164_1658706155;
extern T7*ms126_2048762;
extern T7*ms128_27351412;
extern T7*ms68_33463794;
extern T7*ms74_17651;
extern T7*ms127_393297;
extern T7*ms162_1386254719;
extern T7*ms127_10aaaaaaaaa;
extern T7*ms127_443097;
extern T7*ms127_430299720;
extern T7*ms17_322;
extern T7*ms127_10aaaaaa;
extern T7*ms93_39610347;
extern T7*ms127_525854605;
extern T7*ms82_34a;
extern T7*ms158_2425;
extern T7*ms82_632;
extern T7*ms82_637;
extern T7*ms128_56900637;
extern T7*ms82_600314783;
extern T7*ms165_2425;
extern T7*ms73_247323012;
extern T7*ms68_247323012;
extern T7*ms165_581741755;
extern T7*ms126_10a;
extern T7*ms126_252;
extern T7*ms126_322;
extern T7*ms95_2079105;
extern T7*ms82_52110219;
extern T7*ms35_63105;
extern T7*ms93_2079105;
extern T7*ms163_33463794;
extern T7*ms128_10313637;
extern T7*ms166_1325625;
extern T7*ms73_10;
extern T7*ms68_10;
extern T7*ms82_3175;
extern T7*ms74_10;
extern T7*ms163_83;
extern T7*ms33_319144a;
extern T7*ms163_84;
extern T7*ms163_86;
extern T7*ms94_1325625;
extern T7*ms127_180;
extern T7*ms127_10a;
extern T7*ms82_34aa;
extern T7*ms82_4992;
extern T7*ms74_265794;
extern T7*ms158_1578465704;
extern T7*ms126_545547512;
extern T7*ms94_265794;
extern T7*ms82_34;
extern T7*ms93_574977583;
extern T7*ms82_0a;
extern T7*ms126_21902512;
extern T7*ms94_248415980;
extern T7*ms166_76;
extern T7*ms166_86;
extern T7*ms126_569302452;
extern T7*ms82_0;
extern T7*ms127_2143930291;
extern T7*ms128_10a;
extern T7*ms128_1237804547;
extern T7*ms17_2079105;
extern T7*ms82_1962444;
extern T7*ms94_10;
extern T7*ms94_39;
extern T7*ms127_2062822;
extern T7*ms127_10aaaaa;
extern T7*ms74_2001008752;
extern T7*ms95_10;
extern T7*ms95_48;
extern T7*ms95_49;
extern T7*ms127_10818;
extern T7*ms127_12129;
extern T7*ms127_11657;
extern T7*ms126_10aa;
extern T7*ms127_11907;
extern T7*ms127_13014;
extern T7*ms82_1597872847;
extern T7*ms127_12590;
extern T7*ms128_10aa;
extern T7*ms94_27092;
extern T7*ms127_12999;
extern T7*ms95_10527487;
extern T7*ms127_2052472;
extern T7*ms127_2247022;
extern T7*ms127_266568097;
extern T7*ms126_7487;
extern T7*ms166_1658653172;
extern T7*ms33_319144;
extern T7*ms162_2425;
extern T7*ms164_2425;
extern T7*ms70_2425;
extern T7*ms127_890392572;
extern T7*ms94_2079105;
extern T7*ms127_647764604;
extern T7*ms127_10aaa;
extern T7*ms92_2079105;
extern T7*ms127_10aaaaaaaa;
extern T7*ms82_3175a;
extern T7*ms94_2425;
extern T7*ms94_9936697;
extern T7*ms163_296345362;
extern T7*ms74_88721;
extern T7*ms74_247323012;
extern T7*ms74_10a;
extern T7*ms127_271144;
extern T7*ms74_443;
extern T7*ms127_10aaaa;
extern T7*ms74_483;
extern T7*ms94_205;
extern T7*ms73_1325625;
extern T7*ms92_266664786;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void manifest_string_mark1(void);
void once_function_mark(void);
void gc_start(void);
typedef struct B84 gc84;
struct B84{T84 object;union {int flag;gc84*next;} header;};
extern gc84*store84;
extern int store_left84;
extern fsoc*store_chunk84;
extern gc84*gc_free84;
typedef struct B95 gc95;
struct B95{T95 object;union {int flag;gc95*next;} header;};
extern gc95*store95;
extern int store_left95;
extern fsoc*store_chunk95;
extern gc95*gc_free95;
extern na_env na_env157;
typedef struct B196 gc196;
struct B196{T196 object;union {int flag;gc196*next;} header;};
extern gc196*store196;
extern int store_left196;
extern fsoc*store_chunk196;
extern gc196*gc_free196;
typedef struct B73 gc73;
struct B73{T73 object;union {int flag;gc73*next;} header;};
extern gc73*store73;
extern int store_left73;
extern fsoc*store_chunk73;
extern gc73*gc_free73;
typedef struct B171 gc171;
struct B171{T171 object;union {int flag;gc171*next;} header;};
extern gc171*store171;
extern int store_left171;
extern fsoc*store_chunk171;
extern gc171*gc_free171;
typedef struct B162 gc162;
struct B162{T162 object;union {int flag;gc162*next;} header;};
extern gc162*store162;
extern int store_left162;
extern fsoc*store_chunk162;
extern gc162*gc_free162;
extern na_env na_env149;
typedef struct B176 gc176;
struct B176{T176 object;union {int flag;gc176*next;} header;};
extern gc176*store176;
extern int store_left176;
extern fsoc*store_chunk176;
extern gc176*gc_free176;
typedef struct B131 gc131;
struct B131{T131 object;union {int flag;gc131*next;} header;};
extern gc131*store131;
extern int store_left131;
extern fsoc*store_chunk131;
extern gc131*gc_free131;
typedef struct B158 gc158;
struct B158{T158 object;union {int flag;gc158*next;} header;};
extern gc158*store158;
extern int store_left158;
extern fsoc*store_chunk158;
extern gc158*gc_free158;
typedef struct B143 gc143;
struct B143{T143 object;union {int flag;gc143*next;} header;};
extern gc143*store143;
extern int store_left143;
extern fsoc*store_chunk143;
extern gc143*gc_free143;
extern na_env na_env217;
extern na_env na_env161;
typedef struct B135 gc135;
struct B135{T135 object;union {int flag;gc135*next;} header;};
extern gc135*store135;
extern int store_left135;
extern fsoc*store_chunk135;
extern gc135*gc_free135;
extern na_env na_env139;
typedef struct B128 gc128;
struct B128{T128 object;union {int flag;gc128*next;} header;};
extern gc128*store128;
extern int store_left128;
extern fsoc*store_chunk128;
extern gc128*gc_free128;
typedef struct B113 gc113;
struct B113{T113 object;union {int flag;gc113*next;} header;};
extern gc113*store113;
extern int store_left113;
extern fsoc*store_chunk113;
extern gc113*gc_free113;
typedef struct B68 gc68;
struct B68{T68 object;union {int flag;gc68*next;} header;};
extern gc68*store68;
extern int store_left68;
extern fsoc*store_chunk68;
extern gc68*gc_free68;
typedef struct B17 gc17;
struct B17{T17 object;union {int flag;gc17*next;} header;};
extern gc17*store17;
extern int store_left17;
extern fsoc*store_chunk17;
extern gc17*gc_free17;
typedef struct B206 gc206;
struct B206{T206 object;union {int flag;gc206*next;} header;};
extern gc206*store206;
extern int store_left206;
extern fsoc*store_chunk206;
extern gc206*gc_free206;
extern na_env na_env221;
typedef struct B137 gc137;
struct B137{T137 object;union {int flag;gc137*next;} header;};
extern gc137*store137;
extern int store_left137;
extern fsoc*store_chunk137;
extern gc137*gc_free137;
typedef struct B27 gc27;
struct B27{T27 object;union {int flag;gc27*next;} header;};
extern gc27*store27;
extern int store_left27;
extern fsoc*store_chunk27;
extern gc27*gc_free27;
typedef struct B45 gc45;
struct B45{T45 object;union {int flag;gc45*next;} header;};
extern gc45*store45;
extern int store_left45;
extern fsoc*store_chunk45;
extern gc45*gc_free45;
typedef struct B60 gc60;
struct B60{T60 object;union {int flag;gc60*next;} header;};
extern gc60*store60;
extern int store_left60;
extern fsoc*store_chunk60;
extern gc60*gc_free60;
typedef struct B62 gc62;
struct B62{T62 object;union {int flag;gc62*next;} header;};
extern gc62*store62;
extern int store_left62;
extern fsoc*store_chunk62;
extern gc62*gc_free62;
typedef struct B121 gc121;
struct B121{T121 object;union {int flag;gc121*next;} header;};
extern gc121*store121;
extern int store_left121;
extern fsoc*store_chunk121;
extern gc121*gc_free121;
typedef struct B160 gc160;
struct B160{T160 object;union {int flag;gc160*next;} header;};
extern gc160*store160;
extern int store_left160;
extern fsoc*store_chunk160;
extern gc160*gc_free160;
typedef struct B165 gc165;
struct B165{T165 object;union {int flag;gc165*next;} header;};
extern gc165*store165;
extern int store_left165;
extern fsoc*store_chunk165;
extern gc165*gc_free165;
typedef struct B98 gc98;
struct B98{T98 object;union {int flag;gc98*next;} header;};
extern gc98*store98;
extern int store_left98;
extern fsoc*store_chunk98;
extern gc98*gc_free98;
typedef struct B80 gc80;
struct B80{T80 object;union {int flag;gc80*next;} header;};
extern gc80*store80;
extern int store_left80;
extern fsoc*store_chunk80;
extern gc80*gc_free80;
typedef struct B134 gc134;
struct B134{T134 object;union {int flag;gc134*next;} header;};
extern gc134*store134;
extern int store_left134;
extern fsoc*store_chunk134;
extern gc134*gc_free134;
typedef struct B92 gc92;
struct B92{T92 object;union {int flag;gc92*next;} header;};
extern gc92*store92;
extern int store_left92;
extern fsoc*store_chunk92;
extern gc92*gc_free92;
typedef struct B167 gc167;
struct B167{T167 object;union {int flag;gc167*next;} header;};
extern gc167*store167;
extern int store_left167;
extern fsoc*store_chunk167;
extern gc167*gc_free167;
typedef struct B50 gc50;
struct B50{T50 object;union {int flag;gc50*next;} header;};
extern gc50*store50;
extern int store_left50;
extern fsoc*store_chunk50;
extern gc50*gc_free50;
typedef struct B172 gc172;
struct B172{T172 object;union {int flag;gc172*next;} header;};
extern gc172*store172;
extern int store_left172;
extern fsoc*store_chunk172;
extern gc172*gc_free172;
typedef struct B70 gc70;
struct B70{T70 object;union {int flag;gc70*next;} header;};
extern gc70*store70;
extern int store_left70;
extern fsoc*store_chunk70;
extern gc70*gc_free70;
extern na_env na_env169;
typedef struct B207 gc207;
struct B207{T207 object;union {int flag;gc207*next;} header;};
extern gc207*store207;
extern int store_left207;
extern fsoc*store_chunk207;
extern gc207*gc_free207;
typedef struct B51 gc51;
struct B51{T51 object;union {int flag;gc51*next;} header;};
extern gc51*store51;
extern int store_left51;
extern fsoc*store_chunk51;
extern gc51*gc_free51;
extern na_env na_env118;
typedef struct B81 gc81;
struct B81{T81 object;union {int flag;gc81*next;} header;};
extern gc81*store81;
extern int store_left81;
extern fsoc*store_chunk81;
extern gc81*gc_free81;
extern na_env na_env152;
extern na_env na_env59;
typedef struct B67 gc67;
struct B67{T67 object;union {int flag;gc67*next;} header;};
extern gc67*store67;
extern int store_left67;
extern fsoc*store_chunk67;
extern gc67*gc_free67;
typedef struct B146 gc146;
struct B146{T146 object;union {int flag;gc146*next;} header;};
extern gc146*store146;
extern int store_left146;
extern fsoc*store_chunk146;
extern gc146*gc_free146;
typedef struct B72 gc72;
struct B72{T72 object;union {int flag;gc72*next;} header;};
extern gc72*store72;
extern int store_left72;
extern fsoc*store_chunk72;
extern gc72*gc_free72;
extern na_env na_env189;
typedef struct B187 gc187;
struct B187{T187 object;union {int flag;gc187*next;} header;};
extern gc187*store187;
extern int store_left187;
extern fsoc*store_chunk187;
extern gc187*gc_free187;
typedef struct B126 gc126;
struct B126{T126 object;union {int flag;gc126*next;} header;};
extern gc126*store126;
extern int store_left126;
extern fsoc*store_chunk126;
extern gc126*gc_free126;
typedef struct B163 gc163;
struct B163{T163 object;union {int flag;gc163*next;} header;};
extern gc163*store163;
extern int store_left163;
extern fsoc*store_chunk163;
extern gc163*gc_free163;
typedef struct B159 gc159;
struct B159{T159 object;union {int flag;gc159*next;} header;};
extern gc159*store159;
extern int store_left159;
extern fsoc*store_chunk159;
extern gc159*gc_free159;
typedef struct B120 gc120;
struct B120{T120 object;union {int flag;gc120*next;} header;};
extern gc120*store120;
extern int store_left120;
extern fsoc*store_chunk120;
extern gc120*gc_free120;
typedef struct B76 gc76;
struct B76{T76 object;union {int flag;gc76*next;} header;};
extern gc76*store76;
extern int store_left76;
extern fsoc*store_chunk76;
extern gc76*gc_free76;
typedef struct B65 gc65;
struct B65{T65 object;union {int flag;gc65*next;} header;};
extern gc65*store65;
extern int store_left65;
extern fsoc*store_chunk65;
extern gc65*gc_free65;
extern na_env na_env99;
extern na_env na_env142;
typedef struct B150 gc150;
struct B150{T150 object;union {int flag;gc150*next;} header;};
extern gc150*store150;
extern int store_left150;
extern fsoc*store_chunk150;
extern gc150*gc_free150;
extern na_env na_env181;
extern na_env na_env174;
extern na_env na_env78;
typedef struct B184 gc184;
struct B184{T184 object;union {int flag;gc184*next;} header;};
extern gc184*store184;
extern int store_left184;
extern fsoc*store_chunk184;
extern gc184*gc_free184;
typedef struct B43 gc43;
struct B43{T43 object;union {int flag;gc43*next;} header;};
extern gc43*store43;
extern int store_left43;
extern fsoc*store_chunk43;
extern gc43*gc_free43;
typedef struct B110 gc110;
struct B110{T110 object;union {int flag;gc110*next;} header;};
extern gc110*store110;
extern int store_left110;
extern fsoc*store_chunk110;
extern gc110*gc_free110;
typedef struct B205 gc205;
struct B205{T205 object;union {int flag;gc205*next;} header;};
extern gc205*store205;
extern int store_left205;
extern fsoc*store_chunk205;
extern gc205*gc_free205;
typedef struct B56 gc56;
struct B56{T56 object;union {int flag;gc56*next;} header;};
extern gc56*store56;
extern int store_left56;
extern fsoc*store_chunk56;
extern gc56*gc_free56;
typedef struct B108 gc108;
struct B108{T108 object;union {int flag;gc108*next;} header;};
extern gc108*store108;
extern int store_left108;
extern fsoc*store_chunk108;
extern gc108*gc_free108;
typedef struct B58 gc58;
struct B58{T58 object;union {int flag;gc58*next;} header;};
extern gc58*store58;
extern int store_left58;
extern fsoc*store_chunk58;
extern gc58*gc_free58;
typedef struct B66 gc66;
struct B66{T66 object;union {int flag;gc66*next;} header;};
extern gc66*store66;
extern int store_left66;
extern fsoc*store_chunk66;
extern gc66*gc_free66;
typedef struct B166 gc166;
struct B166{T166 object;union {int flag;gc166*next;} header;};
extern gc166*store166;
extern int store_left166;
extern fsoc*store_chunk166;
extern gc166*gc_free166;
typedef struct B204 gc204;
struct B204{T204 object;union {int flag;gc204*next;} header;};
extern gc204*store204;
extern int store_left204;
extern fsoc*store_chunk204;
extern gc204*gc_free204;
typedef struct B136 gc136;
struct B136{T136 object;union {int flag;gc136*next;} header;};
extern gc136*store136;
extern int store_left136;
extern fsoc*store_chunk136;
extern gc136*gc_free136;
extern na_env na_env177;
typedef struct B7 gc7;
struct B7{T7 object;union {int flag;gc7*next;} header;};
extern gc7*store7;
extern int store_left7;
extern fsoc*store_chunk7;
extern gc7*gc_free7;
typedef struct B170 gc170;
struct B170{T170 object;union {int flag;gc170*next;} header;};
extern gc170*store170;
extern int store_left170;
extern fsoc*store_chunk170;
extern gc170*gc_free170;
typedef struct B55 gc55;
struct B55{T55 object;union {int flag;gc55*next;} header;};
extern gc55*store55;
extern int store_left55;
extern fsoc*store_chunk55;
extern gc55*gc_free55;
typedef struct B57 gc57;
struct B57{T57 object;union {int flag;gc57*next;} header;};
extern gc57*store57;
extern int store_left57;
extern fsoc*store_chunk57;
extern gc57*gc_free57;
typedef struct B127 gc127;
struct B127{T127 object;union {int flag;gc127*next;} header;};
extern gc127*store127;
extern int store_left127;
extern fsoc*store_chunk127;
extern gc127*gc_free127;
typedef struct B82 gc82;
struct B82{T82 object;union {int flag;gc82*next;} header;};
extern gc82*store82;
extern int store_left82;
extern fsoc*store_chunk82;
extern gc82*gc_free82;
typedef struct B194 gc194;
struct B194{T194 object;union {int flag;gc194*next;} header;};
extern gc194*store194;
extern int store_left194;
extern fsoc*store_chunk194;
extern gc194*gc_free194;
typedef struct B155 gc155;
struct B155{T155 object;union {int flag;gc155*next;} header;};
extern gc155*store155;
extern int store_left155;
extern fsoc*store_chunk155;
extern gc155*gc_free155;
extern na_env na_env9;
typedef struct B198 gc198;
struct B198{T198 object;union {int flag;gc198*next;} header;};
extern gc198*store198;
extern int store_left198;
extern fsoc*store_chunk198;
extern gc198*gc_free198;
typedef struct B203 gc203;
struct B203{T203 object;union {int flag;gc203*next;} header;};
extern gc203*store203;
extern int store_left203;
extern fsoc*store_chunk203;
extern gc203*gc_free203;
typedef struct B94 gc94;
struct B94{T94 object;union {int flag;gc94*next;} header;};
extern gc94*store94;
extern int store_left94;
extern fsoc*store_chunk94;
extern gc94*gc_free94;
typedef struct B47 gc47;
struct B47{T47 object;union {int flag;gc47*next;} header;};
extern gc47*store47;
extern int store_left47;
extern fsoc*store_chunk47;
extern gc47*gc_free47;
typedef struct B77 gc77;
struct B77{T77 object;union {int flag;gc77*next;} header;};
extern gc77*store77;
extern int store_left77;
extern fsoc*store_chunk77;
extern gc77*gc_free77;
extern na_env na_env64;
typedef struct B188 gc188;
struct B188{T188 object;union {int flag;gc188*next;} header;};
extern gc188*store188;
extern int store_left188;
extern fsoc*store_chunk188;
extern gc188*gc_free188;
typedef struct B93 gc93;
struct B93{T93 object;union {int flag;gc93*next;} header;};
extern gc93*store93;
extern int store_left93;
extern fsoc*store_chunk93;
extern gc93*gc_free93;
typedef struct B75 gc75;
struct B75{T75 object;union {int flag;gc75*next;} header;};
extern gc75*store75;
extern int store_left75;
extern fsoc*store_chunk75;
extern gc75*gc_free75;
typedef struct B23 gc23;
struct B23{T23 object;union {int flag;gc23*next;} header;};
extern gc23*store23;
extern int store_left23;
extern fsoc*store_chunk23;
extern gc23*gc_free23;
typedef struct B140 gc140;
struct B140{T140 object;union {int flag;gc140*next;} header;};
extern gc140*store140;
extern int store_left140;
extern fsoc*store_chunk140;
extern gc140*gc_free140;
typedef struct B147 gc147;
struct B147{T147 object;union {int flag;gc147*next;} header;};
extern gc147*store147;
extern int store_left147;
extern fsoc*store_chunk147;
extern gc147*gc_free147;
typedef struct B190 gc190;
struct B190{T190 object;union {int flag;gc190*next;} header;};
extern gc190*store190;
extern int store_left190;
extern fsoc*store_chunk190;
extern gc190*gc_free190;
typedef struct B33 gc33;
struct B33{T33 object;union {int flag;gc33*next;} header;};
extern gc33*store33;
extern int store_left33;
extern fsoc*store_chunk33;
extern gc33*gc_free33;
extern na_env na_env199;
typedef struct B132 gc132;
struct B132{T132 object;union {int flag;gc132*next;} header;};
extern gc132*store132;
extern int store_left132;
extern fsoc*store_chunk132;
extern gc132*gc_free132;
typedef struct B180 gc180;
struct B180{T180 object;union {int flag;gc180*next;} header;};
extern gc180*store180;
extern int store_left180;
extern fsoc*store_chunk180;
extern gc180*gc_free180;
typedef struct B182 gc182;
struct B182{T182 object;union {int flag;gc182*next;} header;};
extern gc182*store182;
extern int store_left182;
extern fsoc*store_chunk182;
extern gc182*gc_free182;
typedef struct B52 gc52;
struct B52{T52 object;union {int flag;gc52*next;} header;};
extern gc52*store52;
extern int store_left52;
extern fsoc*store_chunk52;
extern gc52*gc_free52;
typedef struct B61 gc61;
struct B61{T61 object;union {int flag;gc61*next;} header;};
extern gc61*store61;
extern int store_left61;
extern fsoc*store_chunk61;
extern gc61*gc_free61;
extern na_env na_env48;
typedef struct B200 gc200;
struct B200{T200 object;union {int flag;gc200*next;} header;};
extern gc200*store200;
extern int store_left200;
extern fsoc*store_chunk200;
extern gc200*gc_free200;
extern na_env na_env154;
typedef struct B133 gc133;
struct B133{T133 object;union {int flag;gc133*next;} header;};
extern gc133*store133;
extern int store_left133;
extern fsoc*store_chunk133;
extern gc133*gc_free133;
extern na_env na_env145;
typedef struct B202 gc202;
struct B202{T202 object;union {int flag;gc202*next;} header;};
extern gc202*store202;
extern int store_left202;
extern fsoc*store_chunk202;
extern gc202*gc_free202;
typedef struct B91 gc91;
struct B91{T91 object;union {int flag;gc91*next;} header;};
extern gc91*store91;
extern int store_left91;
extern fsoc*store_chunk91;
extern gc91*gc_free91;
typedef struct B112 gc112;
struct B112{T112 object;union {int flag;gc112*next;} header;};
extern gc112*store112;
extern int store_left112;
extern fsoc*store_chunk112;
extern gc112*gc_free112;
typedef struct B41 gc41;
struct B41{T41 object;union {int flag;gc41*next;} header;};
extern gc41*store41;
extern int store_left41;
extern fsoc*store_chunk41;
extern gc41*gc_free41;
typedef struct B123 gc123;
struct B123{T123 object;union {int flag;gc123*next;} header;};
extern gc123*store123;
extern int store_left123;
extern fsoc*store_chunk123;
extern gc123*gc_free123;
typedef struct B106 gc106;
struct B106{T106 object;union {int flag;gc106*next;} header;};
extern gc106*store106;
extern int store_left106;
extern fsoc*store_chunk106;
extern gc106*gc_free106;
extern na_env na_env223;
typedef struct B79 gc79;
struct B79{T79 object;union {int flag;gc79*next;} header;};
extern gc79*store79;
extern int store_left79;
extern fsoc*store_chunk79;
extern gc79*gc_free79;
typedef struct B63 gc63;
struct B63{T63 object;union {int flag;gc63*next;} header;};
extern gc63*store63;
extern int store_left63;
extern fsoc*store_chunk63;
extern gc63*gc_free63;
typedef struct B117 gc117;
struct B117{T117 object;union {int flag;gc117*next;} header;};
extern gc117*store117;
extern int store_left117;
extern fsoc*store_chunk117;
extern gc117*gc_free117;
typedef struct B164 gc164;
struct B164{T164 object;union {int flag;gc164*next;} header;};
extern gc164*store164;
extern int store_left164;
extern fsoc*store_chunk164;
extern gc164*gc_free164;
typedef struct B218 gc218;
struct B218{T218 object;union {int flag;gc218*next;} header;};
extern gc218*store218;
extern int store_left218;
extern fsoc*store_chunk218;
extern gc218*gc_free218;
typedef struct B175 gc175;
struct B175{T175 object;union {int flag;gc175*next;} header;};
extern gc175*store175;
extern int store_left175;
extern fsoc*store_chunk175;
extern gc175*gc_free175;
typedef struct B74 gc74;
struct B74{T74 object;union {int flag;gc74*next;} header;};
extern gc74*store74;
extern int store_left74;
extern fsoc*store_chunk74;
extern gc74*gc_free74;
void gc_sweep84(fsoc*c);
void gc_mark84(T84*o);
void gc_align_mark84(fsoc*c,gc84*p);
extern fsoc H84;
T84*new84(void);
void gc_sweep95(fsoc*c);
void gc_mark95(T95*o);
void gc_align_mark95(fsoc*c,gc95*p);
extern fsoc H95;
T95*new95(void);
void gc_mark157(T157 o);
T157 new157(int size);
void gc_sweep196(fsoc*c);
void gc_mark196(T196*o);
void gc_align_mark196(fsoc*c,gc196*p);
extern fsoc H196;
T196*new196(void);
void gc_sweep73(fsoc*c);
void gc_mark73(T73*o);
void gc_align_mark73(fsoc*c,gc73*p);
extern fsoc H73;
T73*new73(void);
void gc_sweep171(fsoc*c);
void gc_mark171(T171*o);
void gc_align_mark171(fsoc*c,gc171*p);
extern fsoc H171;
T171*new171(void);
void gc_sweep162(fsoc*c);
void gc_mark162(T162*o);
void gc_align_mark162(fsoc*c,gc162*p);
extern fsoc H162;
T162*new162(void);
void gc_mark149(T149 o);
T149 new149(int size);
void gc_sweep176(fsoc*c);
void gc_mark176(T176*o);
void gc_align_mark176(fsoc*c,gc176*p);
extern fsoc H176;
T176*new176(void);
void gc_sweep131(fsoc*c);
void gc_mark131(T131*o);
void gc_align_mark131(fsoc*c,gc131*p);
extern fsoc H131;
T131*new131(void);
void gc_sweep158(fsoc*c);
void gc_mark158(T158*o);
void gc_align_mark158(fsoc*c,gc158*p);
extern fsoc H158;
T158*new158(void);
void gc_sweep143(fsoc*c);
void gc_mark143(T143*o);
void gc_align_mark143(fsoc*c,gc143*p);
extern fsoc H143;
T143*new143(void);
void gc_mark217(T217 o);
T217 new217(int size);
void gc_mark161(T161 o);
T161 new161(int size);
void gc_sweep135(fsoc*c);
void gc_mark135(T135*o);
void gc_align_mark135(fsoc*c,gc135*p);
extern fsoc H135;
T135*new135(void);
void gc_mark139(T139 o);
T139 new139(int size);
void gc_sweep128(fsoc*c);
void gc_mark128(T128*o);
void gc_align_mark128(fsoc*c,gc128*p);
extern fsoc H128;
T128*new128(void);
void gc_sweep113(fsoc*c);
void gc_mark113(T113*o);
void gc_align_mark113(fsoc*c,gc113*p);
extern fsoc H113;
T113*new113(void);
void gc_sweep68(fsoc*c);
void gc_mark68(T68*o);
void gc_align_mark68(fsoc*c,gc68*p);
extern fsoc H68;
T68*new68(void);
void gc_sweep17(fsoc*c);
void gc_mark17(T17*o);
void gc_align_mark17(fsoc*c,gc17*p);
extern fsoc H17;
T17*new17(void);
void gc_sweep206(fsoc*c);
void gc_mark206(T206*o);
void gc_align_mark206(fsoc*c,gc206*p);
extern fsoc H206;
T206*new206(void);
void gc_mark221(T221 o);
T221 new221(int size);
void gc_sweep137(fsoc*c);
void gc_mark137(T137*o);
void gc_align_mark137(fsoc*c,gc137*p);
extern fsoc H137;
T137*new137(void);
void gc_sweep27(fsoc*c);
void gc_mark27(T27*o);
void gc_align_mark27(fsoc*c,gc27*p);
extern fsoc H27;
T27*new27(void);
void gc_sweep45(fsoc*c);
void gc_mark45(T45*o);
void gc_align_mark45(fsoc*c,gc45*p);
extern fsoc H45;
T45*new45(void);
void gc_sweep60(fsoc*c);
void gc_mark60(T60*o);
void gc_align_mark60(fsoc*c,gc60*p);
extern fsoc H60;
T60*new60(void);
void gc_sweep62(fsoc*c);
void gc_mark62(T62*o);
void gc_align_mark62(fsoc*c,gc62*p);
extern fsoc H62;
T62*new62(void);
void gc_sweep121(fsoc*c);
void gc_mark121(T121*o);
void gc_align_mark121(fsoc*c,gc121*p);
extern fsoc H121;
T121*new121(void);
void gc_sweep160(fsoc*c);
void gc_mark160(T160*o);
void gc_align_mark160(fsoc*c,gc160*p);
extern fsoc H160;
T160*new160(void);
void gc_sweep165(fsoc*c);
void gc_mark165(T165*o);
void gc_align_mark165(fsoc*c,gc165*p);
extern fsoc H165;
T165*new165(void);
void gc_sweep98(fsoc*c);
void gc_mark98(T98*o);
void gc_align_mark98(fsoc*c,gc98*p);
extern fsoc H98;
T98*new98(void);
void gc_sweep80(fsoc*c);
void gc_mark80(T80*o);
void gc_align_mark80(fsoc*c,gc80*p);
extern fsoc H80;
T80*new80(void);
void gc_sweep134(fsoc*c);
void gc_mark134(T134*o);
void gc_align_mark134(fsoc*c,gc134*p);
extern fsoc H134;
T134*new134(void);
void gc_sweep92(fsoc*c);
void gc_mark92(T92*o);
void gc_align_mark92(fsoc*c,gc92*p);
extern fsoc H92;
T92*new92(void);
void gc_sweep167(fsoc*c);
void gc_mark167(T167*o);
void gc_align_mark167(fsoc*c,gc167*p);
extern fsoc H167;
T167*new167(void);
void gc_sweep50(fsoc*c);
void gc_mark50(T50*o);
void gc_align_mark50(fsoc*c,gc50*p);
extern fsoc H50;
T50*new50(void);
void gc_sweep172(fsoc*c);
void gc_mark172(T172*o);
void gc_align_mark172(fsoc*c,gc172*p);
extern fsoc H172;
T172*new172(void);
void gc_sweep70(fsoc*c);
void gc_mark70(T70*o);
void gc_align_mark70(fsoc*c,gc70*p);
extern fsoc H70;
T70*new70(void);
void gc_mark169(T169 o);
T169 new169(int size);
void gc_sweep207(fsoc*c);
void gc_mark207(T207*o);
void gc_align_mark207(fsoc*c,gc207*p);
extern fsoc H207;
T207*new207(void);
void gc_sweep51(fsoc*c);
void gc_mark51(T51*o);
void gc_align_mark51(fsoc*c,gc51*p);
extern fsoc H51;
T51*new51(void);
void gc_mark118(T118 o);
T118 new118(int size);
void gc_sweep81(fsoc*c);
void gc_mark81(T81*o);
void gc_align_mark81(fsoc*c,gc81*p);
extern fsoc H81;
T81*new81(void);
void gc_mark152(T152 o);
T152 new152(int size);
void gc_mark59(T59 o);
T59 new59(int size);
void gc_sweep67(fsoc*c);
void gc_mark67(T67*o);
void gc_align_mark67(fsoc*c,gc67*p);
extern fsoc H67;
T67*new67(void);
void gc_sweep146(fsoc*c);
void gc_mark146(T146*o);
void gc_align_mark146(fsoc*c,gc146*p);
extern fsoc H146;
T146*new146(void);
void gc_sweep72(fsoc*c);
void gc_mark72(T72*o);
void gc_align_mark72(fsoc*c,gc72*p);
extern fsoc H72;
T72*new72(void);
void gc_mark189(T189 o);
T189 new189(int size);
void gc_sweep187(fsoc*c);
void gc_mark187(T187*o);
void gc_align_mark187(fsoc*c,gc187*p);
extern fsoc H187;
T187*new187(void);
void gc_sweep126(fsoc*c);
void gc_mark126(T126*o);
void gc_align_mark126(fsoc*c,gc126*p);
extern fsoc H126;
T126*new126(void);
void gc_sweep163(fsoc*c);
void gc_mark163(T163*o);
void gc_align_mark163(fsoc*c,gc163*p);
extern fsoc H163;
T163*new163(void);
void gc_sweep159(fsoc*c);
void gc_mark159(T159*o);
void gc_align_mark159(fsoc*c,gc159*p);
extern fsoc H159;
T159*new159(void);
void gc_sweep120(fsoc*c);
void gc_mark120(T120*o);
void gc_align_mark120(fsoc*c,gc120*p);
extern fsoc H120;
T120*new120(void);
void gc_sweep76(fsoc*c);
void gc_mark76(T76*o);
void gc_align_mark76(fsoc*c,gc76*p);
extern fsoc H76;
T76*new76(void);
void gc_sweep65(fsoc*c);
void gc_mark65(T65*o);
void gc_align_mark65(fsoc*c,gc65*p);
extern fsoc H65;
T65*new65(void);
void gc_mark99(T99 o);
T99 new99(int size);
void gc_mark142(T142 o);
T142 new142(int size);
void gc_sweep150(fsoc*c);
void gc_mark150(T150*o);
void gc_align_mark150(fsoc*c,gc150*p);
extern fsoc H150;
T150*new150(void);
void gc_mark181(T181 o);
T181 new181(int size);
void gc_mark174(T174 o);
T174 new174(int size);
void gc_mark78(T78 o);
T78 new78(int size);
void gc_sweep184(fsoc*c);
void gc_mark184(T184*o);
void gc_align_mark184(fsoc*c,gc184*p);
extern fsoc H184;
T184*new184(void);
void gc_sweep43(fsoc*c);
void gc_mark43(T43*o);
void gc_align_mark43(fsoc*c,gc43*p);
extern fsoc H43;
T43*new43(void);
void gc_sweep110(fsoc*c);
void gc_mark110(T110*o);
void gc_align_mark110(fsoc*c,gc110*p);
extern fsoc H110;
T110*new110(void);
void gc_sweep205(fsoc*c);
void gc_mark205(T205*o);
void gc_align_mark205(fsoc*c,gc205*p);
extern fsoc H205;
T205*new205(void);
void gc_sweep56(fsoc*c);
void gc_mark56(T56*o);
void gc_align_mark56(fsoc*c,gc56*p);
extern fsoc H56;
T56*new56(void);
void gc_sweep108(fsoc*c);
void gc_mark108(T108*o);
void gc_align_mark108(fsoc*c,gc108*p);
extern fsoc H108;
T108*new108(void);
void gc_sweep58(fsoc*c);
void gc_mark58(T58*o);
void gc_align_mark58(fsoc*c,gc58*p);
extern fsoc H58;
T58*new58(void);
void gc_sweep66(fsoc*c);
void gc_mark66(T66*o);
void gc_align_mark66(fsoc*c,gc66*p);
extern fsoc H66;
T66*new66(void);
void gc_sweep166(fsoc*c);
void gc_mark166(T166*o);
void gc_align_mark166(fsoc*c,gc166*p);
extern fsoc H166;
T166*new166(void);
void gc_sweep204(fsoc*c);
void gc_mark204(T204*o);
void gc_align_mark204(fsoc*c,gc204*p);
extern fsoc H204;
T204*new204(void);
void gc_sweep136(fsoc*c);
void gc_mark136(T136*o);
void gc_align_mark136(fsoc*c,gc136*p);
extern fsoc H136;
T136*new136(void);
void gc_mark177(T177 o);
T177 new177(int size);
void gc_sweep7(fsoc*c);
void gc_mark7(T7*o);
void gc_align_mark7(fsoc*c,gc7*p);
extern fsoc H7;
T7*new7(void);
void gc_sweep170(fsoc*c);
void gc_mark170(T170*o);
void gc_align_mark170(fsoc*c,gc170*p);
extern fsoc H170;
T170*new170(void);
void gc_sweep55(fsoc*c);
void gc_mark55(T55*o);
void gc_align_mark55(fsoc*c,gc55*p);
extern fsoc H55;
T55*new55(void);
void gc_sweep57(fsoc*c);
void gc_mark57(T57*o);
void gc_align_mark57(fsoc*c,gc57*p);
extern fsoc H57;
T57*new57(void);
void gc_sweep127(fsoc*c);
void gc_mark127(T127*o);
void gc_align_mark127(fsoc*c,gc127*p);
extern fsoc H127;
T127*new127(void);
void gc_sweep82(fsoc*c);
void gc_mark82(T82*o);
void gc_align_mark82(fsoc*c,gc82*p);
extern fsoc H82;
T82*new82(void);
void gc_sweep194(fsoc*c);
void gc_mark194(T194*o);
void gc_align_mark194(fsoc*c,gc194*p);
extern fsoc H194;
T194*new194(void);
void gc_sweep155(fsoc*c);
void gc_mark155(T155*o);
void gc_align_mark155(fsoc*c,gc155*p);
extern fsoc H155;
T155*new155(void);
void gc_mark9(T9 o);
T9 new9(int size);
void gc_sweep198(fsoc*c);
void gc_mark198(T198*o);
void gc_align_mark198(fsoc*c,gc198*p);
extern fsoc H198;
T198*new198(void);
void gc_sweep203(fsoc*c);
void gc_mark203(T203*o);
void gc_align_mark203(fsoc*c,gc203*p);
extern fsoc H203;
T203*new203(void);
void gc_sweep94(fsoc*c);
void gc_mark94(T94*o);
void gc_align_mark94(fsoc*c,gc94*p);
extern fsoc H94;
T94*new94(void);
void gc_sweep47(fsoc*c);
void gc_mark47(T47*o);
void gc_align_mark47(fsoc*c,gc47*p);
extern fsoc H47;
T47*new47(void);
void gc_sweep77(fsoc*c);
void gc_mark77(T77*o);
void gc_align_mark77(fsoc*c,gc77*p);
extern fsoc H77;
T77*new77(void);
void gc_mark64(T64 o);
T64 new64(int size);
void gc_sweep188(fsoc*c);
void gc_mark188(T188*o);
void gc_align_mark188(fsoc*c,gc188*p);
extern fsoc H188;
T188*new188(void);
void gc_sweep93(fsoc*c);
void gc_mark93(T93*o);
void gc_align_mark93(fsoc*c,gc93*p);
extern fsoc H93;
T93*new93(void);
void gc_sweep75(fsoc*c);
void gc_mark75(T75*o);
void gc_align_mark75(fsoc*c,gc75*p);
extern fsoc H75;
T75*new75(void);
void gc_sweep23(fsoc*c);
void gc_mark23(T23*o);
void gc_align_mark23(fsoc*c,gc23*p);
extern fsoc H23;
T23*new23(void);
void gc_sweep140(fsoc*c);
void gc_mark140(T140*o);
void gc_align_mark140(fsoc*c,gc140*p);
extern fsoc H140;
T140*new140(void);
void gc_sweep147(fsoc*c);
void gc_mark147(T147*o);
void gc_align_mark147(fsoc*c,gc147*p);
extern fsoc H147;
T147*new147(void);
void gc_sweep190(fsoc*c);
void gc_mark190(T190*o);
void gc_align_mark190(fsoc*c,gc190*p);
extern fsoc H190;
T190*new190(void);
void gc_sweep33(fsoc*c);
void gc_mark33(T33*o);
void gc_align_mark33(fsoc*c,gc33*p);
extern fsoc H33;
T33*new33(void);
void gc_mark199(T199 o);
T199 new199(int size);
void gc_sweep132(fsoc*c);
void gc_mark132(T132*o);
void gc_align_mark132(fsoc*c,gc132*p);
extern fsoc H132;
T132*new132(void);
void gc_sweep180(fsoc*c);
void gc_mark180(T180*o);
void gc_align_mark180(fsoc*c,gc180*p);
extern fsoc H180;
T180*new180(void);
void gc_sweep182(fsoc*c);
void gc_mark182(T182*o);
void gc_align_mark182(fsoc*c,gc182*p);
extern fsoc H182;
T182*new182(void);
void gc_sweep52(fsoc*c);
void gc_mark52(T52*o);
void gc_align_mark52(fsoc*c,gc52*p);
extern fsoc H52;
T52*new52(void);
void gc_sweep61(fsoc*c);
void gc_mark61(T61*o);
void gc_align_mark61(fsoc*c,gc61*p);
extern fsoc H61;
T61*new61(void);
void gc_mark48(T48 o);
T48 new48(int size);
void gc_sweep200(fsoc*c);
void gc_mark200(T200*o);
void gc_align_mark200(fsoc*c,gc200*p);
extern fsoc H200;
T200*new200(void);
void gc_mark154(T154 o);
T154 new154(int size);
void gc_sweep133(fsoc*c);
void gc_mark133(T133*o);
void gc_align_mark133(fsoc*c,gc133*p);
extern fsoc H133;
T133*new133(void);
void gc_mark145(T145 o);
T145 new145(int size);
void gc_sweep202(fsoc*c);
void gc_mark202(T202*o);
void gc_align_mark202(fsoc*c,gc202*p);
extern fsoc H202;
T202*new202(void);
void gc_sweep91(fsoc*c);
void gc_mark91(T91*o);
void gc_align_mark91(fsoc*c,gc91*p);
extern fsoc H91;
T91*new91(void);
void gc_sweep112(fsoc*c);
void gc_mark112(T112*o);
void gc_align_mark112(fsoc*c,gc112*p);
extern fsoc H112;
T112*new112(void);
void gc_sweep41(fsoc*c);
void gc_mark41(T41*o);
void gc_align_mark41(fsoc*c,gc41*p);
extern fsoc H41;
T41*new41(void);
void gc_sweep123(fsoc*c);
void gc_mark123(T123*o);
void gc_align_mark123(fsoc*c,gc123*p);
extern fsoc H123;
T123*new123(void);
void gc_sweep106(fsoc*c);
void gc_mark106(T106*o);
void gc_align_mark106(fsoc*c,gc106*p);
extern fsoc H106;
T106*new106(void);
void gc_mark223(T223 o);
T223 new223(int size);
void gc_sweep79(fsoc*c);
void gc_mark79(T79*o);
void gc_align_mark79(fsoc*c,gc79*p);
extern fsoc H79;
T79*new79(void);
void gc_sweep63(fsoc*c);
void gc_mark63(T63*o);
void gc_align_mark63(fsoc*c,gc63*p);
extern fsoc H63;
T63*new63(void);
void gc_sweep117(fsoc*c);
void gc_mark117(T117*o);
void gc_align_mark117(fsoc*c,gc117*p);
extern fsoc H117;
T117*new117(void);
void gc_sweep164(fsoc*c);
void gc_mark164(T164*o);
void gc_align_mark164(fsoc*c,gc164*p);
extern fsoc H164;
T164*new164(void);
void gc_sweep218(fsoc*c);
void gc_mark218(T218*o);
void gc_align_mark218(fsoc*c,gc218*p);
extern fsoc H218;
T218*new218(void);
void gc_sweep175(fsoc*c);
void gc_mark175(T175*o);
void gc_align_mark175(fsoc*c,gc175*p);
extern fsoc H175;
T175*new175(void);
void gc_sweep74(fsoc*c);
void gc_mark74(T74*o);
void gc_align_mark74(fsoc*c,gc74*p);
extern fsoc H74;
T74*new74(void);
void Xgc_mark194(T0*o);
void Xgc_mark192(T0*o);
void Xgc_mark191(T0*o);
void Xgc_mark198(T0*o);
void Xgc_mark87(T0*o);
void Xgc_mark37(T0*o);
void Xgc_mark111(T0*o);
void Xgc_mark35(T0*o);
void Xgc_mark130(T0*o);
void Xgc_mark220(T0*o);
void Xgc_mark32(T0*o);
void Xgc_mark216(T0*o);
void Xgc_mark197(T0*o);
void Xgc_mark117(T0*o);
void*se_ma143(int argc,...);
void*se_ma182(int argc,...);
T2 X130track_parm_count(T0*C);
void X130convert_patterns(T0*C,T0* a1,T0* a2);
T2 X130global_parm_count(T0*C);
T0* X130bliss_id(T0*C);
void X193next(T0*C);
T0* X193item(T0*C);
T6 X193is_off(T0*C);
void X193start(T0*C);
T0* X194key(T0*C,T2 a1);
void X194put(T0*C,T0* a1,T0* a2);
T0* X194item(T0*C,T2 a1);
T0* X194get_new_iterator_on_items(T0*C);
void X194remove(T0*C,T0* a1);
T0* X197item(T0*C,T2 a1);
T2 X111key(T0*C,T2 a1);
T2 X215count(T0*C);
T2 X215upper(T0*C);
T0* X215item(T0*C,T2 a1);
T2 X215lower(T0*C);
T5 X37next_sample(T0*C);
T0* X10twin(T0*C);
void X97next(T0*C);
T2 X97item(T0*C);
T6 X97is_off(T0*C);
void X97start(T0*C);
void X89next(T0*C);
T0* X89item(T0*C);
T6 X89is_off(T0*C);
void X89start(T0*C);
void X32handle_event(T0*C,T0* a1);
void X32update(T0*C);
T0* X190item(T0*C);
T0* X220next(T0*C);
T0* X220item(T0*C);
T2 X214count(T0*C);
T2 X214upper(T0*C);
T0* X214item(T0*C,T2 a1);
T2 X214lower(T0*C);
void X117put(T0*C,T5 a1,T2 a2);
T5 X117item(T0*C,T2 a1);
T5 X117_px_64(T0*C,T2 a1);
T2 X102count(T0*C);
T2 X102upper(T0*C);
T2 X102item(T0*C,T2 a1);
T2 X102lower(T0*C);
void X102swap(T0*C,T2 a1,T2 a2);
T0* X216next(T0*C);
T2 X216key(T0*C);
void X198set_item(T0*C,T0* a1);
void X198set_next(T0*C,T0* a1);
T0* X35new_pattern_autoname(T0*C);
T5 X35next_sample(T0*C);
T0* X35id(T0*C);
T0* X35new_pattern(T0*C,T0* a1);
void X35boom(T0*C);
T0* X35make_instance(T0*C,T0* a1);
void X35process_command(T0*C,T0* a1);
T6 X35is_source(T0*C);
void X35init(T0*C);
void X35init_connection_lists(T0*C);
void X35init_pattern_table(T0*C);
T6 X35is_sink(T0*C);
void X35put_name(T0*C,T0* a1);
void X35init_picture(T0*C);
void X87read_character(T0*C);
T6 X87end_of_input(T0*C);
T3 X87last_character(T0*C);
T0* T2toT27(T2 source);

#ifdef __cplusplus
}
#endif
